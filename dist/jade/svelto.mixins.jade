//- accordion.jade

mixin accordion
    .accordion&attributes(attributes)
        block

//- base.jade

mixin html
    doctype html
    html(class="no-js", lang="en", xml:lang="en", dir="ltr")&attributes(attributes)
        block

//- INFO: Additional configurable options can be find here: `https://github.com/h5bp/html5-boilerplate/blob/master/dist/doc/extend.md`

mixin head(title, description)
    head&attributes(attributes)
        meta(charset="utf-8")
        meta(http-equiv="x-ua-compatible", content="ie=edge")

        title= title
        meta(name="description", content=description)

        meta(name="application-name", content=title)

        meta(name="HandheldFriendly", content="True")
        meta(name="MobileOptimized", content="320")

        meta(name="viewport", content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0")

        meta(name="msapplication-tap-highlight", content="no")

        meta(http-equiv="cleartype", content="on")

        meta(name="theme-color", content="#2967ab")

        link(rel="icon", sizes="any", href="/assets/images/icons/icon.svg", mask)

        link(rel="shortcut icon", href="/assets/images/icons/favicon.ico")

        link(rel="icon", sizes="192x192", href="/assets/images/icons/touch/touch-icon-196x196.png")

        link(rel="apple-touch-icon-precomposed", sizes="144x144", href="/assets/images/icons/touch/apple-touch-icon-144x144-precomposed.png")
        link(rel="apple-touch-icon-precomposed", sizes="114x114", href="/assets/images/icons/touch/apple-touch-icon-114x114-precomposed.png")
        link(rel="apple-touch-icon-precomposed", sizes="72x72", href="/assets/images/icons/touch/apple-touch-icon-72x72-precomposed.png")
        link(rel="apple-touch-icon-precomposed", href="/assets/images/icons/touch/apple-touch-icon-57x57-precomposed.png")
        link(rel="apple-touch-icon", sizes="196x196", href="/assets/images/icons/touch/touch-icon-196x196.png")
        link(rel="apple-touch-icon", href="/assets/images/icons/touch/apple-touch-icon.png")

        meta(name="msapplication-TileImage", content="/assets/images/icons/touch/apple-touch-icon-144x144-precomposed.png")
        meta(name="msapplication-TileColor", content="#2967ab")

        meta(name="mobile-web-app-capable", content="yes")
        meta(name="apple-mobile-web-app-capable", content="yes")
        meta(name="apple-mobile-web-app-status-bar-style", content="black")
        meta(name="apple-mobile-web-app-title", content="")

        link(rel="sitemap", type="application/xml", title="Sitemap", href="/sitemap.xml")

        +css("/svelto.css")
        block css

        +script.
            document.documentElement.className = document.documentElement.className.replace ( /\bno-js\b/, '' ) + ' js';

        block

mixin css(url, media)
    link(rel="stylesheet" href!=url, media= ( media || "all"))&attributes(attributes)

mixin js(url)
    script(src!=url)&attributes(attributes)

mixin script
    script&attributes(attributes)
        block

mixin body
    body&attributes(attributes)
        block body-start
        block body
            block
        +js("https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js")
        +js("https://code.jquery.com/jquery-2.1.4.min.js")
        +js("/svelto.js")
        block js
        block body-end

        //- INFO: Debug all the errors we found, either via noty, if possible, or via alert
        script.
            window.onerror = function ( message, file, line ) {
                try {
                    $.noty({body: 'File: ' + file + '<br/>Line: ' + line + '<br/>Message: ' + message, ttl: 'forever', color: 'red'});
                } catch ( e ) {
                    alert ( file + ':' + line + '\n\n' + message);
                }
            };

//- breadcrumb.jade

mixin breadcrumb
    .breadcrumb&attributes(attributes)
        block

mixin breadcrumb-divider(icon)
    .breadcrumb-divider&attributes(attributes)
        if block
            block
        else
            +icon(icon || "navigation-chevron-right")

//- button.jade

mixin button-wrp
    .label-wrp.button-wrp&attributes(attributes)
        block

mixin button(href)
    +button-wrp
        if href
            if href.slice ( 0, 11 ) === 'javascript:'
                .label.actionable(onclick=href)&attributes(attributes)
                    block
            else if href[href.length-1] === ')' || href.slice ( -2 ) === ');'
                .label.actionable(onclick="javascript:"+href)&attributes(attributes)
                    block
            else
                a.label.actionable(href=href)&attributes(attributes)
                    block
        else
            .label.actionable&attributes(attributes)
                block

mixin button-left
    .label-left&attributes(attributes)
        block

mixin button-center
    .label-center&attributes(attributes)
        block

mixin button-right
    .label-right&attributes(attributes)
        block

mixin button-simple(href)
    +button(href)&attributes(attributes)
        +button-center
            block

mixin button-icon(icon, href)
    +button(href)&attributes(attributes).compact
        +button-center
            +icon(icon)
        block

mixin button-pointed
    +button-wrp.pointed
        +button-pointer&attributes(attributes)
        .label.actionable&attributes(attributes)
            block

mixin button-pointed-simple
    +button-pointed&attributes(attributes)
        +button-center
            block

mixin button-pointer
    .label-pointer&attributes(attributes)
        block

mixin button-ribbons
    +button-wrp.ribbons
        .label.actionable&attributes(attributes)
            .label-ribbon-left
            .label-ribbon-right
            block
    +button-simple&attributes(attributes).invisible

mixin button-ribbon-left
    +button-wrp.ribbon-left
        .label.actionable&attributes(attributes)
            .label-ribbon-left
            block
    +button-simple&attributes(attributes).invisible

mixin button-ribbon-right
    +button-wrp.ribbon-right
        .label.actionable&attributes(attributes)
            .label-ribbon-right
            block
    +button-simple&attributes(attributes).invisible

mixin button-ribbons-simple
    +button-ribbons&attributes(attributes)
        +label-center
            block

mixin button-ribbon-left-simple
    +button-ribbon-left&attributes(attributes)
        +label-center
            block

mixin button-ribbon-right-simple
    +button-ribbon-right&attributes(attributes)
        +label-center
            block

mixin button-corner(direction, icon)
    +button-wrp(class=(direction || "top-right")).corner
        .label.actionable&attributes(attributes).compact
            .label-corner
            +button-center
                if icon
                    +icon(icon)
                else
                    block
            if icon
                block

//- chat.jade

//-
    {
        sender: {
            img: '' // Avatar url
            name: '', //  Nickname
            url: '', // Profile url
        },
        permissions: {
            own: boolean, // Flag that decide if the chat is owned by you
            reply: boolean, // Flat that decide if you can reply it
            edit: boolean, // Flag that decide if you can edit it
            delete: boolean, // Flag that decide if you can delete it
        },
        message: {
            timestamp: number, // Unix timestamp of when the message as been sent
            content: '', // The message content
            group: '', // The ID of the group, useful for joining all the messages
            level: ''
        }
    }

mixin chat-msg(options)
    .chat-msg(class=("level-" + ( options.message.level || 1 ) + " sender-" + ( options.sender && options.sender.name ? options.sender.name : "unknown" ) ) )&attributes(attributes)
        if options.sender && options.sender.img
            if options.sender.url
                a(href=options.sender.url, title=options.sender.name).chat-msg-img
                    img(src=options.sender.img, title=options.sender.name)
            else
                .chat-msg-img
                    img(src=options.sender.img, title=options.sender.name)
            .chat-msg-indicator
        .chat-msg-content
            +container
                +container-header.inherit
                    if options.sender
                        +multiple-left
                            if options.sender.url
                                a(href=options.sender.url, title=options.sender.name)= options.sender.name
                            else
                                = options.sender.name
                    +multiple-right
                        +button-icon("device-access-time")(data-timestamp-title=options.message.timestamp).small.outlined
                        if options.permissions
                            if options.permissions.own
                                +button-icon("action-account-circle")(title="You are the owner").small.outlined
                            if options.permissions.reply
                                +button-icon("content-reply")(title="Reply").small.outlined
                            if options.permissions.edit
                                +button-icon("editor-mode-edit")(title="Edit").small.outlined
                            if options.permissions.delete
                                +button-icon("action-delete")(title="Delete").small.outlined
                +container-content= options.message.content

//- checkbox.jade

//- TODO: the value should be setted to 1 by default if is not provided

mixin checkbox(name, title, value, checked)
    if checked
        +button&attributes(attributes).checkbox.checked
            input(type="checkbox", name=name, value=value, checked)
            +button-center
                = title
                +icon("check_box").on.right
                +icon("check_box_outline_blank").off.right
    else
        +button&attributes(attributes).checkbox
            input(type="checkbox", name=name, value=value)
            +button-center
                = title
                +icon("check_box").on.right
                +icon("check_box_outline_blank").off.right

//- colorpicker.jade

mixin colorpicker
    .colorpicker&attributes(attributes)
        .colorpicker-saturation-brightness-wrp
            .colorpicker-saturation
            .colorpicker-brightness
            .colorpicker-handler
        .colorpicker-hue-wrp
            .colorpicker-hue
            .colorpicker-handler

//- container.jade

mixin container(title, header_classes)
    .container&attributes(attributes)
        if title
            +container-header(title)(class=header_classes)
        block

mixin container-header(title)
    .container-header&attributes(attributes)
        +multiple.fluid
            if title
                +multiple-center
                    p= title
            block

mixin container-content
    .container-content&attributes(attributes)
        block

mixin container-footer
    .container-footer&attributes(attributes)
        block

mixin container-simple(title, header_classes)
    .container&attributes(attributes)
        if title
            +container-header(title)(class=header_classes)
        +container-content
            block

//- divider.jade

mixin divider
    +divider-block&attributes(attributes)
        block

mixin divider-block
    .divider-wrp.block
        .divider&attributes(attributes)
            block

mixin divider-linear
    if block
        .divider-wrp.linear
            hr.left
            .divider&attributes(attributes)
                block
            hr.right
    else
        hr&attributes(attributes)

mixin divider-text
    .divider-wrp.text
        .divider&attributes(attributes)
            block

mixin divider-spacer
    .divider-wrp.spacer
        .divider&attributes(attributes)
            block

//- datepicker.jade

mixin datepicker
    .datepicker&attributes(attributes)
        .datepicker-navigation
            +button-icon("navigation-chevron-left")(title="Previous month").datepicker-navigation-prev
            .datepicker-navigation-title
            +button-icon("navigation-chevron-right")(title="Next month").datepicker-navigation-next
        .datepicker-calendar
            .datepicker-days-names
                .datepicker-day-name(title="Monday") M
                .datepicker-day-name(title="Tuesday") T
                .datepicker-day-name(title="Wednesday") W
                .datepicker-day-name(title="Thursday") T
                .datepicker-day-name(title="Friday") F
                .datepicker-day-name(title="Saturday") S
                .datepicker-day-name(title="Sunday") S
            .datepicker-days
                .datepicker-day-prev 23
                .datepicker-day-prev 24
                .datepicker-day-prev 25
                .datepicker-day-prev 26
                .datepicker-day-prev 27
                .datepicker-day-prev 28
                .datepicker-day-prev 29
                .datepicker-day-prev 30
                .datepicker-day-prev 31
                .datepicker-day 1
                .datepicker-day 2
                .datepicker-day 3
                .datepicker-day 4
                .datepicker-day 5
                .datepicker-day 6
                .datepicker-day 7
                .datepicker-day 8
                .datepicker-day 9
                .datepicker-day 10
                .datepicker-day 11
                .datepicker-day 12
                .datepicker-day 13
                .datepicker-day 14
                .datepicker-day 15
                .datepicker-day 16
                .datepicker-day 17
                .datepicker-day 18
                .datepicker-day 19
                .datepicker-day 20
                .datepicker-day 21
                .datepicker-day 22
                .datepicker-day 23
                .datepicker-day 24
                .datepicker-day 25
                .datepicker-day 26
                .datepicker-day 27
                .datepicker-day 28
                .datepicker-day 29
                .datepicker-day 30
                .datepicker-day 31
                .datepicker-day-next 1
                .datepicker-day-next 2
                .datepicker-day-next 3
                .datepicker-day-next 4
                .datepicker-day-next 5
                .datepicker-day-next 6

//- dropdown.jade

//- TODO: automatically recognize if we are passing a title or an icon (if the icon is in the allowed arrays then ok, if not print it as a title)

mixin dropdown-btn(title, id)
    +button(data-dropdown="dropdown-"+id)&attributes(attributes).dropdown-btn.dropdown-trigger
        +button-center
            = title
            +icon("expand_more").right

mixin dropdown-btn-icon(icon, id)
    +button-icon(icon)(data-dropdown="dropdown-"+id)&attributes(attributes).dropdown-btn.dropdown-trigger

mixin dropdown(id)
    .dropdown(id="dropdown-"+id)&attributes(attributes)
        .dropdown-tip.top
        .dropdown-tip.right
        .dropdown-tip.bottom
        .dropdown-tip.left
        +container
            block

//- embedded.jade

//- EMBEDDED

mixin embedded(src, allowfullscreen)
    .embedded&attributes(attributes)
        if src
            +iframe(src, allowfullscreen)
        else
            block

//- EMBEDDABLES

mixin iframe(src, allowfullscreen)
    if allowfullscreen
        iframe(src=src, allowfullscreen)&attributes(attributes)
    else
        iframe(src=src)&attributes(attributes)

mixin embed(src)
    embed(src=src)&attributes(attributes)

mixin video(sources, type)
    video&attributes(attributes)
        if type
            sources(src=sources, type=type)
        else
            each src, type in sources
                source(src=src, type=type)

mixin object(data)
    object(data=data)&attributes(attributes)

//- flags.jade

mixin flag(flag)
    .flag(class="flag-" + flag)&attributes(attributes)
        block

//- expander.jade

mixin expander(title, header_classes)
    +container&attributes(attributes).expander
        if title
            +container-header(title)(class=header_classes).expander-toggler
        block

//- flippable.jade

mixin flippable
    .flippable-wrp&attributes(attributes)
        .flippable
            block

mixin flippable-front
    .flippable-front&attributes(attributes)
        block

mixin flippable-back
    .flippable-back&attributes(attributes)
        block

//- footer.jade

mixin footer
    .footer&attributes(attributes)
        block

//- form.jade

mixin form
    form&attributes(attributes)
        block


mixin form-button(href)
    //- TODO: Make it DRY, we are basically just repeating the button mixin
    button(type="submit")&attributes(attributes).label-wrp.button-wrp
        if href
            if href.slice ( 0, 11 ) === 'javascript:'
                .label.actionable(onclick=href)&attributes(attributes)
                    block
            else if href[href.length-1] === ')' || href.slice ( -2 ) === ');'
                .label.actionable(onclick="javascript:"+href)&attributes(attributes)
                    block
            else
                a.label.actionable(href=href)&attributes(attributes)
                    block
        else
            .label.actionable&attributes(attributes)
                block

mixin form-button-simple(href)
    +form-button(href)&attributes(attributes)
        +button-center
            block

//- header.jade

//- FIXME: don't use inline style
//- FIXME: make it more general, so that not just an image url can be set as a bacground but pretty much everything... but maybe we can do it manually without a mixin, there cannot be a mixin for everything (sure?)...

mixin header
    .header&attributes(attributes)
        block

mixin header-with-bg(background_image)
    .header.has-background&attributes(attributes)
        block
        .header-background(style="background: url(\"" + background_image + "\") no-repeat center center fixed")

//- icons.jade

mixin icon(icon)
    i.icon&attributes(attributes)= icon

//- header.jade

mixin infobar(icon, title, subtitle)
    .infobar-wrp&attributes(attributes)
        if icon
            if title
                if subtitle !== undefined
                    if subtitle
                        +infobar-left
                            +icon(icon).xlarge
                        +infobar-center
                            +infobar-title(title)
                            +infobar-subtitle(subtitle)
                            block
                    else
                        +infobar-left
                            +icon(icon)
                        +infobar-center
                            +infobar-title(title)
                            block
                else
                    +infobar-center
                        +infobar-title(icon)
                        +infobar-subtitle(title)
                        block
            else
                +infobar-center
                    +infobar-title(icon)
                    block
        else
            block

mixin infobar-left
    .infobar-left&attributes(attributes)
        block

mixin infobar-center
    .infobar-center&attributes(attributes)
        block

mixin infobar-title(title)
    if title
        p.infobar-title&attributes(attributes)= title
    else
        p.infobar-title&attributes(attributes)
            block

mixin infobar-subtitle(subtitle)
    if subtitle
        p&attributes(attributes)= subtitle
    else
        p&attributes(attributes)
            block

mixin infobar-right
    .infobar-right&attributes(attributes)
        block

mixin infobar-bottom
    .infobar-bottom&attributes(attributes)
        block

//- image.jade

mixin image(url)
    +container&attributes(attributes).image-wrp
        img(src=url)
        block

mixin image-caption
    +container&attributes(attributes).image-caption
        +container-content
            block

mixin image-sample(url)
    +image("/assets/images/presto/sample.png")&attributes(attributes)
        block

//- input.jade

mixin input(options)
    if !options
        - options = {}
    .input-wrp(class=(!options.label ? 'no-floating' : ''))&attributes(attributes)
        input.text-field(type=(options.type || "text"), value=(options.value || ""), name=(options.name || ""), required)
        if options.label
            label= options.label
        .text-field-bar

//- label.jade

mixin label-wrp
    .label-wrp&attributes(attributes)
        block

mixin label
    +label-wrp
        .label&attributes(attributes)
            block

mixin label-left
    .label-left&attributes(attributes)
        block

mixin label-center
    .label-center&attributes(attributes)
        block

mixin label-right
    .label-right&attributes(attributes)
        block

mixin label-simple
    +label&attributes(attributes)
        +label-center
            block

mixin label-icon(icon)
    +label&attributes(attributes).compact
        +label-center
            +icon(icon)
        block

mixin label-pointed
    +label-wrp
        +label-pointer&attributes(attributes)
        .label&attributes(attributes)
            block

mixin label-pointed-simple
    +label-pointed&attributes(attributes)
        +label-center
            block

mixin label-pointer
    .label-pointer&attributes(attributes)
        block

mixin label-ribbons
    +label-wrp.ribbons
        .label&attributes(attributes)
            .label-ribbon-left
            .label-ribbon-right
            block
    +label-simple&attributes(attributes).invisible

mixin label-ribbon-left
    +label-wrp.ribbon-left
        .label&attributes(attributes)
            .label-ribbon-left
            block
    +label-simple&attributes(attributes).invisible

mixin label-ribbon-right
    +label-wrp.ribbon-right
        .label&attributes(attributes)
            .label-ribbon-right
            block
    +label-simple&attributes(attributes).invisible

mixin label-ribbons-simple
    +label-ribbons&attributes(attributes)
        +label-center
            block

mixin label-ribbon-left-simple
    +label-ribbon-left&attributes(attributes)
        +label-center
            block

mixin label-ribbon-right-simple
    +label-ribbon-right&attributes(attributes)
        +label-center
            block

mixin label-corner(direction, icon)
    +label-wrp(class=(direction || "top-right")).corner
        .label&attributes(attributes).compact
            .label-corner
            +label-center
                if icon
                    +icon(icon)
                else
                    block
            if icon
                block

//- modal.jade

mixin modal
    .modal&attributes(attributes)
        .background.modal-closer
        block

//- multiple.jade

mixin multiple
    .multiple-wrp&attributes(attributes)
        .multiple
            block

//- Subs

mixin multiple-left
    .multiple-sub-spacer
    .multiple-sub.left&attributes(attributes)
        +multiple
            block
    .multiple-sub-spacer

mixin multiple-center
    .multiple-sub-spacer
    .multiple-sub.center&attributes(attributes)
        +multiple
            block
    .multiple-sub-spacer

mixin multiple-right
    .multiple-sub-spacer
    .multiple-sub.right&attributes(attributes)
        +multiple
            block
    .multiple-sub-spacer

//- navbar.jade

mixin navbar-btn(title, icon, id)
    +button(data-navbar="navbar-"+id, class=(title ? "" : "compact"))&attributes(attributes).navbar-btn.navbar-trigger
        +button-center
            if title
                = title
            if icon
                if title
                    +icon(icon).right
                else
                    +icon(icon)

mixin navbar(id, direction, slim, attached)
    .navbar-wrp(class=(direction || "left") + " " + (slim ? "slim" : "") + " " + (attached ? ( attached === true ? "attached-xs" : "attached-" + attached ) : "" ))
        +container(id="navbar-"+id)&attributes(attributes).navbar
            block
        .background.navbar-closer

//- notification.jade

mixin notification(options)
    +script&attributes(attributes) $(function () { $.notification ( !{JSON.stringify(options)} ); });

//- noty.jade

mixin noty(options)
    +script&attributes(attributes) $(function () { $.noty ( !{JSON.stringify(options)} ); });

//- pagination.jade

//-
    {
        url: '', // The url to transform wih the page number (eighter by appending or or by replacing <page-nr>)
        total: '', // The total number of pages, or infinite (for example when the content is generated randomly)
        current: '', // The current page number
        blocks: '', // The number of blocks to fill
        classes: '' // Extra classes to add to buttons
    }

mixin pagination(options)
    +multiple&attributes(attributes).pagination.joined.centered

        if options.total == 1 || options.total == 0
            block

        else if options.total == 'infinite'
            +button-simple(options.url)(class=(options.classes || '')) Load more
            block

        else
            if options.blocks >= 2

                - var url_to_substitute = ( options.url.indexOf ( '<page-nr>' ) !== -1 );

                if options.current > 1
                    - var page_nr = options.current - 1;
                    - var page_url = url_to_substitute ? options.url.replace ( "<page-nr>", page_nr) : options.url + page_nr;
                    +button-icon("chevron_left", page_url)(title="Previous page", class=(options.classes || '')).prev
                    - options.blocks -= 1;

                if options.current < options.total
                    - var need_next_button = true;
                    - options.blocks -= 1;
                else
                    - var need_next_button = false;

                if options.blocks > 0
                    - var need_current_button = true;
                    - options.blocks -= 1;
                else
                    - need_current_button = false;

                - var left_blocks = options.current - 1;
                - var right_blocks = options.total - options.current;
                - var required_left_blocks = Math.floor ( options.blocks / 2 );
                - var required_right_blocks = options.blocks - required_left_blocks;

                if left_blocks <= required_left_blocks && right_blocks <= required_right_blocks
                    - var outputed_left_blocks = left_blocks;
                    - var outputed_right_blocks = right_blocks;
                else if left_blocks <= required_left_blocks
                    - var outputed_left_blocks = left_blocks;
                    - var outputed_right_blocks = Math.min ( right_blocks, options.blocks - outputed_left_blocks );
                else if right_blocks <= required_right_blocks
                    - var outputed_right_blocks = right_blocks;
                    - var outputed_left_blocks = Math.min ( left_blocks, options.blocks - outputed_right_blocks );
                else
                    - var outputed_left_blocks = required_left_blocks;
                    - var outputed_right_blocks = required_right_blocks;

                while outputed_left_blocks > 0
                    - var page_nr = options.current - outputed_left_blocks;
                    - var page_url = url_to_substitute ? options.url.replace ( "<page-nr>", page_nr) : options.url + page_nr;
                    +button-simple(page_url)(title="Page " + page_nr, class=(options.classes || '')).compact= page_nr
                    - outputed_left_blocks--;

                if need_current_button
                    +label-simple(title="Current page", class=(options.classes || '')).compact.current= options.current

                - var counter = 1;
                while counter <= outputed_right_blocks
                    - var page_nr = options.current + counter;
                    - var page_url = url_to_substitute ? options.url.replace ( "<page-nr>", page_nr) : options.url + page_nr;
                    +button-simple(page_url)(title="Page " + page_nr, class=(options.classes || '')).compact= page_nr
                    - counter++;

                if need_next_button
                    - var page_nr = options.current + 1;
                    - var page_url = url_to_substitute ? options.url.replace ( "<page-nr>", page_nr) : options.url + page_nr;
                    +button-icon("chevron_right", page_url)(title="Next page", class=(options.classes || '')).next

            block

//- others.jade

//- TODO: add optional third parameter that toggles the randomization process
mixin lorem-ipsum(amount, type)
    - var returnLI = '';
    - var LIText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur aliquet tincidunt turpis, in pharetra mi convallis ut. Vivamus eget sodales nibh, eu placerat erat. Vivamus massa urna, volutpat non tempus eget, placerat quis elit. Nullam pretium id arcu sed eleifend. Phasellus sollicitudin quis ante nec ornare. Maecenas nibh eros, vehicula vel eros eget, viverra semper nisi. Nulla facilisi. Praesent pretium porttitor arcu, sit amet consequat neque luctus non. Cras sodales, justo quis tempus dignissim, diam est commodo orci, eget accumsan sem ante vitae sem. Curabitur quam ipsum, porta id sapien in, consectetur auctor nibh. Vivamus egestas ante vel cursus aliquet. In non ante nec velit tempus lacinia nec sollicitudin ex. Phasellus semper lorem a diam scelerisque, sed accumsan erat molestie. Mauris vulputate lacinia erat. Nunc urna risus, facilisis at posuere in, pulvinar quis odio. Maecenas et sollicitudin arcu.\n Proin maximus dui ac felis blandit luctus. Fusce consectetur, nisl vitae blandit viverra, mi nisl posuere lorem, a interdum nisl leo quis massa. Donec et pretium mi. Quisque bibendum urna quis eleifend blandit. Donec pulvinar est eu diam tempus bibendum. Aenean iaculis mi vel magna viverra, ut facilisis velit luctus. Aenean blandit, erat a cursus dignissim, lectus lacus vehicula orci, ut vestibulum risus purus quis libero. Fusce vestibulum risus a erat varius facilisis. Donec tincidunt interdum mattis. Nam mi sapien, dictum a egestas in, efficitur sed sem. Cras dignissim neque dignissim arcu suscipit pellentesque. Praesent euismod vel dui at imperdiet. Vestibulum rhoncus dolor sed bibendum hendrerit. Sed malesuada dolor sed ex porttitor euismod. In id laoreet dui.\n Donec maximus ante vel erat sagittis varius. Quisque auctor varius rhoncus. Nunc efficitur, magna eu venenatis placerat, odio dui sodales nisi, sit amet ultricies sapien eros vel erat. Maecenas tincidunt dolor sit amet nibh gravida, eu iaculis enim hendrerit. Fusce porttitor arcu magna, quis convallis enim suscipit eget. Mauris id lacus pharetra, auctor leo at, pulvinar leo. Sed ex augue, tristique posuere augue sed, aliquet dictum erat.\n Sed lobortis purus non eros bibendum, nec ornare erat euismod. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Suspendisse potenti. Quisque ut nulla cursus, vehicula dui vitae, consectetur urna. Sed tincidunt est purus, id auctor risus fringilla in. Vivamus rutrum dictum ligula, scelerisque elementum orci fringilla eget. Suspendisse potenti.\n Phasellus molestie quam a urna ultrices suscipit. Fusce eu elit rutrum dui elementum malesuada. Curabitur porta tincidunt tristique. Nam tellus enim, sodales id est auctor, lobortis elementum sem. Curabitur pharetra convallis bibendum. Curabitur consectetur rhoncus dignissim. Sed vehicula est et lacinia dapibus. Nunc efficitur diam vel mattis posuere.";

    if type === 'characters'
        - returnLI = LIText.substr ( 0, amount );
    else if type === 'words'
        - var LIWords;
        - LIText = LIText.toLowerCase ();
        - LIText = LIText.split ( '.' ).join ( '' );
        - LIText = LIText.split ( ',' ).join ( '' );
        - lipsumArray = LIText.split ( ' ' );
        - for ( var i = 0; i < ( amount || 1 ); i++ ) {
            - returnLI += lipsumArray[i] + ' ';
        - }
        - returnLI = returnLI.charAt ( 0 ).toUpperCase () + returnLI.slice ( 1 );
        - returnLI = returnLI.substr ( 0, returnLI.length - 1 );
    else
        - var LISentences = LIText.split ( '\n ' );
        - for ( var i = 0; i < ( amount || 1 ); i++ ) {
            - returnLI += LISentences[i] + '\n';
        - }
        - returnLI = returnLI.substr ( 0, returnLI.length - 1 );

    =returnLI

mixin paragraph-sample
    +placeholder('95%', 10, true)&attributes(attributes)
    +placeholder('92%', 10, true)&attributes(attributes)
    +placeholder('100%', 10, true)&attributes(attributes)
    +placeholder('87%', 10, true)&attributes(attributes)
    +placeholder('97%', 10, true)&attributes(attributes)
    +placeholder('93%', 10, true)&attributes(attributes)
    +placeholder('97%', 10, true)&attributes(attributes)

mixin spacer
    .spacer&attributes(attributes)
        block

mixin centerer
    .centerer&attributes(attributes)
        block

//- parallax.jade

mixin parallax
    .parallax&attributes(attributes)
        block

mixin parallax-layers
    .parallax-layers&attributes(attributes)
        block

mixin parallax-layer
    .parallax-layer&attributes(attributes)
        block

mixin parallax-content-sample
    .parallax-content-sample&attributes(attributes)
        block

//- Layers levels

mixin parallax-layer-deep
    +parallax-layer&attributes(attributes).parallax-layer-deep
        block

mixin parallax-layer-background
    +parallax-layer&attributes(attributes).parallax-layer-background
        block

mixin parallax-layer-base
    +parallax-layer&attributes(attributes).parallax-layer-base
        block

mixin parallax-layer-foreground
    +parallax-layer&attributes(attributes).parallax-layer-foreground
        block

//- placeholder.jade

mixin placeholder(width, height, empty)
    - width = width || 0;
    - height = height || 0;
    - width = isNaN ( width ) ? width : width + 'px';
    - height = isNaN ( height ) ? height : height + 'px';
    .placeholder(style="width:" + width + "; height:" + height + "; line-height: " + height + ";")&attributes(attributes)
        if !empty
            if block
                block
            else
                = width + " - " + height

//- progressBar.jade

mixin progressBar(options, multiple)
    if typeof multiple !== 'undefined'
        - var new_options = { percentages: Array ( arguments.length ) };
        - for ( var i = 0, l = arguments.length; i < l; i++ ) {
            - new_options.percentages[i] = ( typeof arguments[i] === 'number' ) ? { value: arguments[i] } : arguments[i];
        - }
    else
        - var new_options = ( typeof options === 'number' ) ? { percentages : [{ value: options }] } : ( options.percentages ? options : { percentages: [options] } );
    - options = new_options;
    - var total = 0;

    .progressBar&attributes(attributes)
        .progressBar-unhighlighted
            each percentage in options.percentages
                - total += percentage.value;
                .progressBar-highlighted(class=(percentage.color || ""), style=("width: " + percentage.value + "%"))
                    if options.labeled
                        .progressBar-label= +(percentage.value).toFixed(options.decimals || 0)
        .progressBar-stripes(style=("width: " + total + "%"))

//- syntax.jade

mixin syntax(language)
    code(class="language-"+language)&attributes(attributes)
        block

//- radio.jade

mixin radio(name, title, value, checked)
    if checked
        +button&attributes(attributes).radio.checked
            input(type="radio", name=name, value=value, checked)
            +button-center
                = title
                +icon("radio_button_checked").on.right
                +icon("radio_button_unchecked").off.right
    else
        +button&attributes(attributes).radio
            input(type="radio", name=name, value=value)
            +button-center
                = title
                +icon("radio_button_checked").on.right
                +icon("radio_button_unchecked").off.right

//- select.jade

//- FIXME: Add support for arbitrary number of optgroups levels
//- TODO: Make the mixin set the defualt value at the compilation time

mixin select-btn(options, selected, id, icon)
    +button(data-select="select-"+id, class=(!block ? "compact" : ""))&attributes(attributes).select-btn.select-trigger
        +button-center
            .select-label
                block
            +icon(icon || "reorder").right
            +select(options, selected, id)

mixin select-btn-icon(options, selected, id, icon)
    +button(data-select="select-"+id, class=(!block ? "compact" : ""))&attributes(attributes).select-btn.select-trigger
        +button-center
            +icon(icon || "reorder")
            +select(options, selected, id)

mixin select(options, selected, id)
    select(id="select-"+id, name=id, placeholder="Select a value...")
        each val, prop in options
            if typeof val === "object"
                optgroup(label=prop)
                    each subval, subprop in val
                        option(value=subprop, selected=(subprop === selected))= subval
            else
                option(value=prop, selected=(subprop === selected))= val

//- shapes.jade

mixin triangle
    .triangle&attributes(attributes)
        block

mixin triangle-up
    .triangle-up&attributes(attributes)
        block

mixin triangle-down
    .triangle-down&attributes(attributes)
        block

mixin triangle-right
    .triangle-right&attributes(attributes)
        block

mixin triangle-left
    .triangle-left&attributes(attributes)
        block

mixin square
    .square&attributes(attributes)
        block

mixin square-sample
    .square-sample&attributes(attributes)
        p.no-margin
            +lorem-ipsum(10, 'words')
        block

mixin circle
    .circle&attributes(attributes)
        block

//- slider.jade

mixin slider(name, min, value, max, step)
    - min = min ? min : 0;
    - value = value ? value : 0;
    - max = max ? max : 100;
    - step = step ? step : 1;
    - var percentage = ( ( value - min ) / step ) * 100 / ( ( max - min ) / step );
    .slider(data-step=step)&attributes(attributes)
        input(type="number", name=name, value=value)
        .slider-min(title="Decrease", data-min=min)
        .slider-max(title="Increase", data-max=max)
        .slider-bar-wrp
            .slider-bar
                .slider-unhighlighted
                    .slider-highlighted(style="right:" + (100-percentage) + "%")
            .slider-handler-wrp(style="left:" + percentage + "%")
                .slider-handler
                    .slider-label= value

//- spinner.jade

mixin spinner
    .spinner-wrp&attributes(attributes)
        +spinner-no-wrp&attributes(attributes)

mixin spinner-no-wrp
    .spinner&attributes(attributes)
        .circle-wrp.left
            .circle
        .circle-wrp.right
            .circle

mixin spinner-multiple(first, second, third, fourth)
    .spinner-wrp.multiple&attributes(attributes)
        if block
            block
        else
            +spinner-no-wrp(class=(first ? first : "blue"))
            +spinner-no-wrp(class=(second ? second : "red"))
            +spinner-no-wrp(class=(third ? third : "yellow"))
            +spinner-no-wrp(class=(fourth ? fourth : "green"))

//- stepper.jade

mixin stepper(name, min, value, max)
    +multiple(data-min=min, data-max=max)&attributes(attributes).stepper.joined
        +button-icon("content-remove").stepper-decreaser
        +input({name: name, value: value}).autogrow.compact
        +button-icon("content-add").stepper-increaser

//- switch.jade

mixin switch(options, value, checked)
    if value
        - var name = options;
        - options = { name: name, value: value, checked: checked };

    - var color_class = ( options.checked ? (options.colors && options.colors.on ? options.colors.on : "secondary") : (options.colors && options.colors.off ? options.colors.off : "gray"));

    .switch(data-color-on=(options.colors ? options.colors.on : false), data-color-off=(options.colors ? options.colors.off : false), data-icon-on=(options.icons ? options.icons.on : false), data-icon-off=(options.icons ? options.icons.off : false))&attributes(attributes)
        input(type="checkbox", name=options.name, value=options.value, checked=options.checked)
        .switch-bar-wrp
            .switch-bar(class=color_class)
                .switch-handler(class=color_class, style="transform: translate3d(" + (options.checked ? "1.73333em" : "0" ) + ",0,0)")
                    if options.icons
                        if options.icons.on
                            +icon(options.icons.on).on
                        if options.icons.off
                            +icon(options.icons.off).off

//- table.jade

mixin table-tr-empty ( empty_str )
    tr.empty.hidden&attributes(attributes)
        td(colspan="100%")
            if block
                block
            else
                if empty_str
                    = empty_str
                else
                    = "Empty"

//- tabs.jade

mixin tabs
    .tabs&attributes(attributes)
        block

mixin tabs-buttons
    .tabs-buttons&attributes(attributes)
        block

mixin tabs-buttons-indicator
    .tabs-buttons-indicator&attributes(attributes)
        block

mixin tabs-containers
    .tabs-containers&attributes(attributes)
        block

//- tagbox.jade

mixin tagbox(name, tags)
    +container&attributes(attributes).tagbox
        input(type="text", name=name, value=tags)
        +multiple
            +input({name: "placeholder_" + name, label: "Add tag..."}).autogrow.compact.tagbox-partial.no-floating.no-bar

//- textarea.jade

mixin textarea(options)
    if !options
        - options = {}
    .textarea-wrp(class=(!options.label ? 'no-floating' : ''))&attributes(attributes)
        textarea.text-field(type=(options.type || "text"), name=(options.name || ""), required)
            block
        if options.label
            label= options.label
        .text-field-bar

//- toolbar.jade

mixin toolbar
    .toolbar&attributes(attributes)
        +multiple.fluid
            block

//- typography.jade

mixin a(href)
    a(href=href)&attributes(attributes)
        block

mixin abbr(title)
    abbr(title=title)&attributes(attributes)
        block
