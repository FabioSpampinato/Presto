!function(n,e,t,r){"use strict";n.mixin({nowSecs:function(){return n.floor(n.now()/1e3)},timeAgo:function(e){var t=n.nowSecs()-e,r=5,o=["year","month","week","day","hour","minute","second"],i=[31536e3,2592e3,604800,86400,3600,60,1];if(r>t)return{str:"Just now",next:r-t};for(var u=0,f=i.length;f>u;u++){var c=o[u],a=i[u],s=n.floor(t/a);if(s>=1)return{str:s+" "+c+(s>1?"s":"")+" ago",next:a-(t-s*a)}}},fuzzyMatch:function(n,e,t){t!==!1&&(n=n.toLowerCase(),e=e.toLowerCase());for(var r=-1,o=n.length,i=0,u=e.length;u>i;i++){for(var f=r+1;o>f;f++)n[f]===e[i]&&(r=f,f=o+1);if(f===o)return!1}return!0},clamp:function(e,t,r){return n.isUndefined(e)||e>t&&(t=e),n.isUndefined(r)||t>r&&(t=r),t},btEach:function(e,t,r){for(var o,i=0,u=e.length-1,f=n.isNumber(r)?r:n.ceil((i+u)/2);u>=i;){if(o=t.call(e[f],f,e[f]),0>o)u=f-1;else{if(!(o>0))return f;i=f+1}f=n.ceil((i+u)/2)}return-1},"true":n.constant(!0),"false":n.constant(!1)})}(_,window,document);
!function(t,e,i,o,n){"use strict";var r=navigator.userAgent.toLowerCase(),s=navigator.vendor.toLowerCase(),a=navigator.appVersion.toLowerCase(),c=/iphone/i.test(r),u=/ipad/i.test(r),d=/ipod/i.test(r),p=/android/i.test(r),h=p&&/mobile/i.test(r),l=p&&!h,m=/blackberry/i.test(r)||/BB10/i.test(r),w=/win/i.test(a),f=w&&/phone/i.test(r),b=w&&!f&&/touch/i.test(r),v=c||d||h||m||f,g=u||l||b;t.browser={is:{chrome:/chrome|chromium/i.test(r)&&/google inc/.test(s),firefox:/firefox/i.test(r),ie:/msie/i.test(r)||"ActiveXObject"in i,opera:/^Opera\//.test(r)||/\x20OPR\//.test(r),safari:/safari/i.test(r)&&/apple computer/i.test(s),iphone:c,ipad:u,ipod:d,ios:c||u||d,android:p,androidPhone:h,androidTablet:l,blackberry:m,linux:/linux/i.test(a),mac:/mac/i.test(a),windows:w,windowsPhone:f,windowsTablet:b,mobile:v,tablet:g,desktop:!v&&!g,online:function(){return navigator.onLine},offline:function(){return!navigator.onLine},touchDevice:"ontouchstart"in i||"DocumentTouch"in i&&o instanceof DocumentTouch}}}(jQuery,_,window,document);
!function(e,n,t,o,i){"use strict";e.reflow=function(){o.documentElement.offsetHeight},e.eventXY=function(n){return n.isPointerEvent&&(n=n.originalEvent),e.browser.is.touchDevice&&n.originalEvent.touches&&(n=n.originalEvent.changedTouches?n.originalEvent.changedTouches[0]:n.originalEvent.touches[0]),{X:n.pageX,Y:n.pageY}},e.frame=function(e){return requestAnimationFrame(e)},e.hasCtrlOrCmd=function(n){return!e.browser.is.mac&&n.ctrlKey||e.browser.is.mac&&n.metaKey},e(function(){t.$window=e(t),t.$document=e(o),t.$html=e(o.documentElement),t.$body=e(o.body),t.$empty=e()})}(jQuery,_,window,document);
!function(E,o,n,t,e){"use strict";E.ui={keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},mouseButton:{LEFT:0,MIDDLE:1,RIGHT:2}},E.ui.animation={slow:500,normal:350,fast:150},n.Svelto={version:"0.1.0"}}(jQuery,_,window,document);

!function(e,n,r,t,c){"use strict";var u=function(e,n){var r=/[^\w\-\.:]/.test(e)?new Function(u.arg+",tmpl","var _e=_.escape"+u.helper+",_s='"+e.replace(u.regexp,u.func)+"';return _s;"):u.cache[e]=u.cache[e]||u(t.getElementById(e).innerHTML);return n?r(n,u):function(e){return r(e,u)}};u.cache={},u.regexp=/([\s'\\])(?!(?:[^{]|\{(?!%))*%\})|(?:\{%(=|#)([\s\S]+?)%\})|(\{%)|(%\})/g,u.func=function(e,n,r,t,c,u){return n?{"\n":"\\n","\r":"\\r","	":"\\t"," ":" "}[n]||"\\"+n:r?"="===r?"'+_e("+t+")+'":"'+("+t+"==null?'':"+t+")+'":c?"';":u?"_s+='":void 0},u.arg="o",u.helper=",print=function(s,e){_s+=e?(s==null?'':s):_e(s);},include=function(s,d){_s+=tmpl(s,d);}",e.tmpl=u}(jQuery,_,window,document);
!function(t,e,i,n,s){"use strict";t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={namespace:!1,name:"widget",fullName:"widget",templates:{base:!1},options:{classes:{},selectors:{},animations:{},callbacks:{},disabled:!1},_create:function(i,n){if(!n&&!this.templates.base)throw"WidgetUninitializable";this.options=e.merge({},this.options,this._createOptions(),i),this.$element=t(n||this._tmpl("base",this.options)),this.element=this.$element[0],this.guid=t.guid++,this.options.disabled=this.options.disabled||this.$element.hasClass(this.name+"-disabled"),t.data(this.element,this.fullName,this),this._on(!0,"remove",function(t){t.target===this.element&&this.destroy(t)}),this._variables(),this._init(),this._events()},_createOptions:e.noop,_variables:e.noop,_init:e.noop,_events:e.noop,destroy:function(){this._destroy(),t.removeData(this.element,this.fullName)},_destroy:e.noop,widget:function(){return this.$element},option:function(t,i){if(0===arguments.length)return e.cloneDeep(this.options);if(e.isString(t)){var n={},s=t.split(".");if(t=s.shift(),s.length){for(var o=n[t]=e.extend({},this.options[t]),r=0;r<s.length-1;r++)o[s[r]]=o[s[r]]||{},o=o[s[r]];if(t=s.pop(),1===arguments.length)return e.isUndefined(o[t])?null:o[t];o[t]=i}else{if(1===arguments.length)return e.isUndefined(this.options[t])?null:this.options[t];n[t]=i}}else e.isPlainObject(t)&&this._setOptions(t);return this},_setOptions:function(t){for(var e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return this.options[t]=e,"disabled"===t&&this.$element.toggleClass(this.name+"-disabled",!!e),this},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_on:function(i,n,s,o,r){function l(){if(i||!h.options.disabled){var t=e.slice(arguments);return t.push(this),r.apply(h,t)}}var h=this;return e.isBoolean(i)||(r=o,o=s,s=n,n=i,i=!1),n instanceof t||(r=o,o=s,s=n,n=this.$element),o&&!r&&(r=o,o=!1),r=e.isString(r)?this[r]:r,l.guid=r.guid=r.guid||l.guid||t.guid++,o?n.on(s,o,l):n.on(s,l),this},_off:function(t,i,n){return n||(n=i,i=t,t=this.$element),n=e.isString(n)?this[n]:n,t.off(i,n),this},_trigger:function(t,i){i=i||{},t=t.split(" ");for(var n=0,s=t.length;s>n;n++)this.$element.trigger(this.name+":"+t[n],i),e.isFunction(this.options.callbacks[t[n]])&&this.options.callbacks[t[n]].call(this.element,i);return this},_delay:function(t,e){var i=this;return setTimeout(function(){t.apply(i)},e||0)},_defer:function(t){return this._delay(t)},_frame:function(e){var i=this;return t.frame(function(){e.apply(i)})},_debounce:function(t,i,n){return e.debounce(t,i,n)},_throttle:function(t,i,n){return e.throttle(t,i,n)},_tmpl:function(e,i){return t.tmpl(this.fullName+"."+e,i||{})},insertBefore:function(t){return this.$element.insertBefore(t),this},insertAfter:function(t){return this.$element.insertAfter(t),this},prependTo:function(t){return this.$element.prependTo(t),this},appendTo:function(t){return this.$element.appendTo(t),this}}}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Pointer v0.2.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../core/core.js
 * @requires ../browser/browser.js
 * ========================================================================= */

//FIXME: Right now how can we bind an event handler on just tap? (when doubletap doesn't happen later) (basically a click, maybe (what about a dblclick?))

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* SETTINGS */

  window.Pointer = {
    pressDuration: 300,
    doubleTapInterval: 300,
    flickDuration: 150,
    motionThreshold: 5
  };

  /* EVENTS METHODS */

  var eventsNames = ['tap', 'dbltap', 'press', 'dragstart', 'dragmove', 'dragend', 'flick'],
      eventsPrefix = 'pointer';

  _.each ( eventsNames, function ( name ) {

    var fullName = eventsPrefix + name;

    Pointer[name] = fullName;

    $.fn[name] = function ( fn ) {

      return fn ? this.on ( fullName, fn ) : this.trigger ( fullName );

    };

  });

  /* VARIABLES */

  var startEvents = $.browser.is.touchDevice ? 'touchstart' : 'mousedown',
      moveEvents = $.browser.is.touchDevice ? 'touchmove' : 'mousemove',
      endEvents = $.browser.is.touchDevice ? 'touchend touchcancel' : 'mouseup mouseleave',
      $html = $(document.documentElement),
      startXY,
      moveXY,
      deltaXY,
      endXY,
      target,
      $target,
      startTimestamp,
      endTimestamp,
      prevTapTimestamp = 0,
      motion,
      orientation,
      direction,
      pressTimeout;

  /* HANDLERS */

  var createEvent = function ( name, originalEvent ) {

    var event = $.Event ( name );

    event.originalEvent = originalEvent;
    event.isPointerEvent = true;

    return event;

  };

  var startHandler = function ( event ) {

    startXY = $.eventXY ( event );

    target = event.target;
    $target = $(target);

    startTimestamp = event.timeStamp || _.now ();

    motion = false;

    pressTimeout = setTimeout ( _.wrap ( event, pressHandler ), Pointer.pressDuration );

    $target.trigger ( createEvent ( Pointer.dragstart, event ), {
      startXY: startXY
    });

    $html.on ( moveEvents, moveHandler );
    $html.on ( endEvents, endHandler );

  };

  var pressHandler = function ( event ) { //FIXME: it doesn't get called if we do event.preventDefault () with dragstart

    $target.trigger ( createEvent ( Pointer.press, event ) );

  };

  var moveHandler = function ( event ) {

    clearTimeout ( pressTimeout );

    moveXY = $.eventXY ( event );

    deltaXY = {
      X: moveXY.X - startXY.X,
      Y: moveXY.Y - startXY.Y
    };

    if ( Math.abs ( deltaXY.X ) > Pointer.motionThreshold || Math.abs ( deltaXY.Y ) > Pointer.motionThreshold ) {

      motion = true;

      $target.trigger ( createEvent ( Pointer.dragmove, event ), {
        startXY: startXY,
        moveXY: moveXY,
        deltaXY: deltaXY
      });

    }

  };

  var endHandler = function ( event ) {

    clearTimeout ( pressTimeout );

    endXY = $.eventXY ( event );
    deltaXY = {
      X: endXY.X - startXY.X,
      Y: endXY.Y - startXY.Y
    };

    if ( target === event.target && ( event.type === 'touchend' || ( event.type === 'mouseup' && event.button === 0 ) ) ) {

      endTimestamp = event.timeStamp || _.now ();

      if ( !$.browser.is.touchDevice || !motion ) {

        $target.trigger ( createEvent ( Pointer.tap, event ) );

        if ( endTimestamp - prevTapTimestamp <= Pointer.doubleTapInterval ) {

          $target.trigger ( createEvent ( Pointer.dbltap, event ) );

        }

        prevTapTimestamp = endTimestamp;

      }

      if ( motion && ( endTimestamp - startTimestamp <= Pointer.flickDuration ) ) {

        if ( Math.abs ( deltaXY.X ) > Math.abs ( deltaXY.Y ) ) {

          orientation = 'horizontal';
          direction = ( deltaXY.X > 0 ) ? 1 : -1;

        } else {

          orientation = 'vertical';
          direction = ( deltaXY.Y > 0 ) ? 1 : -1;

        }

        $target.trigger ( createEvent ( Pointer.flick, event ), {
          startXY: startXY,
          endXY: endXY,
          deltaXY: deltaXY,
          orientation: orientation,
          direction: direction
        });

      }

    }

    $html.off ( moveEvents, moveHandler );
    $html.off ( endEvents, endHandler );

    $target.trigger ( createEvent ( Pointer.dragend, event ), {
      startXY: startXY,
      endXY: endXY,
      deltaXY: deltaXY
    });

  };

  /* BIND */

  $html.on ( startEvents, startHandler );

}( jQuery, _, window, document ));

!function(t,e,n,r,i){"use strict";t.factory=function(n,r,i){var o=n.split("."),s=o.length>1?o[0]:!1,a=o.length>1?o[1]:o[0],p=s?s+"."+a:a;i||(i=r,r=t.Widget),s&&(t[s]=t[s]||{});var c=s?t[s][a]:t[a],u=function(t,e){this._create(t,e)};s?t[s][a]=u:t[a]=u,e.extend(u,c,{_proto:e.extend({},i),_childConstructors:[]});var l=new r;l.options=e.extend({},l.options);var h={};for(var f in i)e.isFunction(i[f])?h[f]=function(t){var e=function(){return r.prototype[t].apply(this,arguments)},n=function(e){return r.prototype[t].apply(this,e)};return function(){var r,o=this._super,s=this._superApply;return this._super=e,this._superApply=n,r=i[t].apply(this,arguments),this._super=o,this._superApply=s,r}}(f):h[f]=i[f];u.prototype=e.extend(l,h,{constructor:u,namespace:s,name:a,fullName:p});for(var d in i.templates)i.templates[d]&&(t.tmpl.cache[p+"."+d]=t.tmpl(i.templates[d]));if(c){for(var y=0,m=c._childConstructors.length;m>y;y++){var _=c._childConstructors[y].prototype;t.factory(_.namespace?_.namespace+"."+_.name:_.name,u,c._childConstructors[y]._proto)}delete c._childConstructors}else r._childConstructors.push(u);return t.factory.bridge(a,u),u},t.factory.bridge=function(n,r){var i=r.prototype.fullName;t.fn[n]=function(n){if(0!==this.length||r.prototype.templates.base){var o=e.isString(n),s=e.tail(arguments),a=this;return o?this.each(function(){var r,o=t.data(this,i);if("instance"===n)return a=o,!1;if(o&&e.isFunction(o[n])&&"_"!==n.charAt(0))return r=o[n].apply(o,s),r===o||e.isUndefined(r)?void 0:(a=r,!1)}):(s.length&&(n=e.extend.apply(null,[n].concat(s))),this.each(function(){var e=t.data(this,i);e?e.option(n||{}):t.data(this,i,new r(n,this))})),a}}}}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Expander v0.2.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* EXPANDER */

  $.factory ( 'svelto.expander', {

    /* OPTIONS */

    options: {
      classes: {
        open: 'open'
      },
      selectors: {
        expander: '.expander',
        toggler: '.expander-toggler'
      },
      callbacks: {
        open: _.noop,
        close: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$expander = this.$element;
      this.$togglers = this.$expander.find ( this.options.selectors.toggler );

      this._isOpen = this.$expander.hasClass ( this.options.classes.open );

    },

    _events: function () {

      this._on ( this.$togglers, Pointer.tap, this.toggle );

    },

    /* PUBLIC */

    isOpen: function () {

      return this._isOpen;

    },

    toggle: function ( force ) {

      if ( !_.isBoolean ( force ) ) {

        force = !this._isOpen;

      }

      if ( force !== this._isOpen ) {

        this._isOpen = force;

        this.$expander.toggleClass ( this.options.classes.open, this._isOpen );

        this._trigger ( this._isOpen ? 'open' : 'close' );

      }

    },

    open: function () {

      this.toggle ( true );

    },

    close: function () {

      this.toggle ( false );

    }

  });

  /* READY */

  $(function () {

    $('.expander').expander ();

  });

}( jQuery, _, window, document ));

!function(e,n,s,t,i){"use strict";e.factory("svelto.accordion",{options:{classes:{multiple:"multiple-open"},selectors:{expander:".expander"},callbacks:{open:n.noop,close:n.noop}},_variables:function(){this.$accordion=this.$element,this.$expanders=this.$accordion.children(this.options.selectors.expander),this.expandersNr=this.$expanders.length,this.expandersInstances=n.map(this.$expanders,function(n){return e(n).expander("instance")}),this.isMultiple=this.$accordion.hasClass(this.options.classes.multiple)},_events:function(){this.isMultiple||this._on(this.$expanders,"expander:open",this.__close_others)},__close_others:function(e,n,s){for(var t=0;t<this.expandersNr;t++)this.$expanders[t]!==s&&this.expandersInstances[t].close()},areOpen:function(){return n.map(this.expandersInstances,function(e){return e.isOpen()})},toggle:function(e,s){var t=this.expandersInstances[e],i=t.isOpen();if(n.isBoolean(s)||(s=!i),s!==i){var o=s?"open":"close";t[o](),this._trigger(o,{index:e})}},open:function(e){this.toggle(e,!0)},close:function(e){this.toggle(e,!1)}}),e(function(){e(".accordion").accordion()})}(jQuery,_,window,document);
!function(t,i,n,o,u){"use strict";t.factory("svelto.autogrowInput",{options:{minWidth:0,callbacks:{update:i.noop}},_variables:function(){this.$input=this.$element},_init:function(){this.update()},_events:function(){this._on("input change",this.update)},_getNeededWidth:function(){var i=t("<span>"+this.$input.val()+"</span>");i.css({font:this.$input.css("font"),position:"absolute",opacity:0}),i.appendTo($body);var n=i.width();return i.remove(),n},update:function(){var t=this._getNeededWidth(this.$input);this.$input.width(Math.max(t,this.options.minWidth)),this._trigger("update")}}),t(function(){t("input.autogrow, .input-wrp.autogrow input").autogrowInput()})}(jQuery,_,window,document);
!function(t,a,e,i,o){"use strict";t.factory("svelto.autogrowTextarea",{options:{minHeight:0,callbacks:{update:a.noop}},_variables:function(){this.$textarea=this.$element},_init:function(){this.update()},_events:function(){this._on("input change",this.update)},update:function(){var t=this.$textarea.height(1)[0].scrollHeight-parseFloat(this.$textarea.css("padding-top"))-parseFloat(this.$textarea.css("padding-bottom"));this.$textarea.height(Math.max(t,this.options.minHeight)),this._trigger("update")}}),t(function(){t("textarea.autogrow, .textarea-wrp.autogrow textarea").autogrowTextarea()})}(jQuery,_,window,document);
!function(n,r,t,u,e){"use strict";n.fn.blurred=function(n){return this.toggleClass("blurred",n)}}(jQuery,_,window,document);
!function(t,n,c,u,i){"use strict";t.fn.btEach=function(t,c){return n.btEach(this,t,c)}}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Checkbox v0.2.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* CHECKBOX */

  $.factory ( 'svelto.checkbox', {

    /* OPTIONS */

    options: {
      callbacks: {
        change: _.noop,
        check: _.noop,
        uncheck: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$checkbox = this.$element;
      this.$input = this.$checkbox.find ( 'input' );

    },

    _init: function () { //FIXME: is it necessary to include it? Maybe we should fix mistakes with the markup...

      var isChecked = this.get (),
          hasClass = this.$checkbox.hasClass ( 'checked' );

      if ( isChecked !== hasClass ) {

        this.$checkbox.toggleclass ( 'checked', isChecked );

      }

    },

    _events: function () {

      /* CHANGE */

      this._on ( true, 'change', this.__change );

      /* CLICK */

      this._on ( Pointer.tap, _.wrap ( undefined, this.toggle ) );

    },

    /* CHANGE */

    __change: function () {

      var isChecked = this.get ();

      this.$checkbox.toggleClass ( 'checked', isChecked );

      this._trigger ( 'change', { checked: isChecked } );
      this._trigger ( isChecked ? 'check' : 'uncheck' );

    },

    /* PUBLIC */

    get: function () { //FIXME: maybe this should return the value, and a isChecked equivalent should do this job

      return this.$input.prop ( 'checked' );

    },

    toggle: function ( force ) {

      var isChecked = this.get ();

      if ( _.isUndefined ( force ) ) {

        force = !isChecked;

      }

      if ( force !== isChecked ) {

        this.$input.prop ( 'checked', force ).trigger ( 'change' );

        this._trigger ( 'change', { checked: force } );
        this._trigger ( force ? 'check' : 'uncheck' ); //FIXME: is triggered twice per toggle

      }

    },

    check: function () {

      this.toggle ( true );

    },

    uncheck: function () {

      this.toggle ( false );

    }

  });

  /* READY */

  $(function () {

    $('.checkbox').checkbox ();

  });

}( jQuery, _, window, document ));

!function(r,e,t,h){"use strict";e.ColorHelper={hex2rgb:function(r){return{r:this.hex2dec(r.r),g:this.hex2dec(r.g),b:this.hex2dec(r.b)}},hex2hsv:function(r){return this.rgb2hsv(this.hex2rgb(r))},rgb2hex:function(r){return{r:this.dec2hex(r.r),g:this.dec2hex(r.g),b:this.dec2hex(r.b)}},rgb2hsv:function(r){var e,t,h=r.r/255,n=r.g/255,s=r.b/255,i=Math.max(h,n,s),u=i-Math.min(h,n,s),c=function(r){return(i-r)/6/u+.5};if(0===u)e=t=0;else{t=u/i;var a=c(h),o=c(n),b=c(s);h===i?e=b-o:n===i?e=1/3+a-b:s===i&&(e=2/3+o-a),0>e?e+=1:e>1&&(e-=1)}return{h:360*e,s:100*t,v:100*i}},hsv2hex:function(r){return this.rgb2hex(this.hsv2rgb(r))},hsv2rgb:function(r){var e,t,h,n=r.h,s=r.s,i=r.v;if(s/=100,i/=100,0===s)e=t=h=i;else{var u,c,a,o,b;switch(n/=60,u=Math.floor(n),c=n-u,a=i*(1-s),o=i*(1-s*c),b=i*(1-s*(1-c)),u){case 0:e=i,t=b,h=a;break;case 1:e=o,t=i,h=a;break;case 2:e=a,t=i,h=b;break;case 3:e=a,t=o,h=i;break;case 4:e=b,t=a,h=i;break;default:e=i,t=a,h=o}}return{r:Math.round(255*e),g:Math.round(255*t),b:Math.round(255*h)}},hsv2hsl:function(r){var e=r.s/100,t=r.v/100,h=(2-e)*t,n=e*t;return{h:r.h,s:n/(1>=h?h:2-h)*100,l:h/2*100}},hsl2hsv:function(r){var e=r.l/100*2,t=r.s/100*(1>=e?e:2-e);return{h:r.h,s:2*t/(e+t)*100,v:(e+t)/2*100}},dec2hex:function(e){return r.padLeft(e.toString(16),2,"0")},hex2dec:function(r){return parseInt(r,16)}}}(_,window,document);
!function(e,t,i,r){"use strict";t.HexColor=function(t){if(e.isString(t)){if(t=t.replace("#",""),/^([0-9a-f]{3}){2}$/i.test(t))this.hsv=ColorHelper.hex2hsv({r:t[0]+t[1],g:t[2]+t[3],b:t[4]+t[5]});else{if(!/^[0-9a-f]{3}$/i.test(t))return this;this.hsv=ColorHelper.hex2hsv({r:t[0]+t[0],g:t[1]+t[1],b:t[2]+t[2]})}this.isValid=!0}},HexColor.prototype={isValid:!1,hsv:{h:0,s:0,v:0},getHexStr:function(){var e=ColorHelper.hsv2hex(this.hsv);return"#"+e.r+e.g+e.b}}}(_,window,document);

/* =========================================================================
 * Svelto - Colorpicker v0.1.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * @requires ../hex_color/hexColor.js
 * @requires ../color_helper/colorHelper.js
 * ========================================================================= */

//TODO: add support for alpha channel
//TODO: add a $bgs variable where we update the background
//TODO: Add an input inside, so that it works also without an external input

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* COLORPICKER */

  $.factory ( 'svelto.colorpicker', {

    /* OPTIONS */

    options: {
      default_color: '#ff0000',
      live: true,
      callbacks: {
        change: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$colorpicker = this.$element;
      this.$sb_wrp = this.$colorpicker.find ( '.colorpicker-saturation-brightness-wrp' );
      this.$handler_sb = this.$sb_wrp.find ( '.colorpicker-handler' );
      this.$hue_wrp = this.$colorpicker.find ( '.colorpicker-hue-wrp' );
      this.$handler_hue = this.$hue_wrp.find ( '.colorpicker-handler' );

      this.id = this.$colorpicker.attr ( 'id' );
      this.$inputs = $('input[name="' + this.id + '"]');

      this.color = new HexColor ();
      this.hex = '';

      this._update_variables ();

      this.sb_wrp_size = this.$sb_wrp.width ();

      this.hue_wrp_height = this.sb_wrp_size;

    },

    _init: function () {

      if ( !this.set ( this.$inputs.val () ) ) {

        this.color = new HexColor ( this.options.default_color );

        this._update_sb ();
        this._update_hue ();

      }

    },

    _events: function () {

      /* WINDOW RESIZE */

      this._on ( $window, 'resize', this._handler_resize );

      /* INPUTS */

      this._on ( this.$inputs, 'keydown', this._handler_input_keydown );

      /* SB ARROWS */

      this._on ( this.$sb_wrp, 'mouseenter', this._handler_sb_wrp_arrows_in );
      this._on ( this.$sb_wrp, 'mouseleave', this._handler_sb_wrp_arrows_out );

      /* SB DRAG */

      this._on ( this.$sb_wrp, Pointer.dragmove, this._handler_sb_drag_move );
      this._on ( this.$sb_wrp, Pointer.dragend, this._handler_sb_drag_end );

      /* HUE ARROWS */

      this._on ( this.$hue_wrp, 'mouseenter', this._handler_hue_wrp_arrows_in );
      this._on ( this.$hue_wrp, 'mouseleave', this._handler_hue_wrp_arrows_out );

      /* HUE DRAG */

      this._on ( this.$hue_wrp, Pointer.dragmove, this._handler_hue_drag_move );
      this._on ( this.$hue_wrp, Pointer.dragend, this._handler_hue_drag_end );

    },

    /* PRIVATE */

    _update_variables: function () {

      this.sb_wrp_offset = this.$sb_wrp.offset ();
      this.hue_wrp_offset = this.$hue_wrp.offset ();

    },

    /* WINDOW RESIZE */

    _handler_resize: function () {

      this._update_variables ();

    },

    /* SB ARROWS */

    _handler_sb_wrp_arrows_in: function () {

      this._on ( $document, 'keydown', this._handler_sb_wrp_arrows_keydown );

    },

    _handler_sb_wrp_arrows_out: function () {

      this._off ( $document, 'keydown', this._handler_sb_wrp_arrows_keydown );

    },

    _handler_sb_wrp_arrows_keydown: function () {

      switch ( event.keyCode ) {

        case $.ui.keyCode.UP:
          this.color.hsv.v = Math.min ( 100, this.color.hsv.v + 1 );
          break;

        case $.ui.keyCode.RIGHT:
          this.color.hsv.s = Math.min ( 100, this.color.hsv.s + 1 );
          break;

        case $.ui.keyCode.DOWN:
          this.color.hsv.v = Math.max ( 0, this.color.hsv.v - 1 );
          break;

        case $.ui.keyCode.LEFT:
          this.color.hsv.s = Math.max ( 0, this.color.hsv.s - 1 );
          break;

        default:
          return;

      }

      this._update_sb ();
      this._update_input ();

    },

    /* SB DRAG */

    _sb_drag_set: function ( XY, update ) {

      this.color.hsv.s =  _.clamp ( 0, XY.X - this.sb_wrp_offset.left, this.sb_wrp_size ) * 100 / this.sb_wrp_size;
      this.color.hsv.v =  100 - ( _.clamp ( 0, XY.Y - this.sb_wrp_offset.top, this.sb_wrp_size ) * 100 / this.sb_wrp_size );

      this._update_sb ();

      if ( update ) {

        this._update_input ();

      }

    },

    _handler_sb_drag_move: function ( event, data ) {

      this._sb_drag_set ( data.moveXY, this.options.live );

    },

    _handler_sb_drag_end: function ( event, data ) {

      this._sb_drag_set ( data.endXY, true );

    },

    /* HUE ARROWS */

    _handler_hue_wrp_arrows_in: function () {

      this._on ( $document, 'keydown', this._handler_hue_wrp_arrows_keydown );

    },

    _handler_hue_wrp_arrows_out: function () {

      this._off ( $document, 'keydown', this._handler_hue_wrp_arrows_keydown );

    },

    _handler_hue_wrp_arrows_keydown: function () {

      switch ( event.keyCode ) {

        case $.ui.keyCode.UP:
          this.color.hsv.h = Math.min ( 359, this.color.hsv.h + 1 );
          break;

        case $.ui.keyCode.DOWN:
          this.color.hsv.h = Math.max ( 0, this.color.hsv.h - 1 );
          break;

        default:
          return;

      }

      this._update_hue ();
      this._update_input ();

    },

    /* HUE DRAG */

    _hue_drag_set: function ( XY, update ) {

      this.color.hsv.h = 359 - ( _.clamp ( 0, XY.Y - this.hue_wrp_offset.top, this.hue_wrp_height ) * 359 / this.hue_wrp_height );

      this._update_hue ();

      if ( update ) {

        this._update_input ();

      }

    },

    _handler_hue_drag_move: function ( event, data ) {

      this._hue_drag_set ( data.moveXY, this.options.live );

    },

    _handler_hue_drag_end: function ( event, data ) {

      this._hue_drag_set ( data.endXY, true );

    },

    /* INPUT */

    _handler_input_keydown: function ( event ) {

      if ( event.keyCode === $.ui.keyCode.ENTER ) {

        if ( !this.set ( this.$inputs.val () ) ) {

          this.$inputs.val ( this.hex );

        }

      }

    },

    /* OTHERS */

    _update_input: function () {

      this.hex = this.color.getHexStr ();

      this.$inputs.val ( this.hex ).css ( 'background-color', this.hex ).trigger ( 'change' );

      this._trigger ( 'change' );

    },

    _update_sb: function () {

      var hsl = ColorHelper.hsv2hsl ( this.color.hsv );

      this.$handler_sb.css ({
        'background-color': 'hsl(' + hsl.h + ',' + hsl.s + '%,' + hsl.l + '%)',
        transform: 'translate3d(' + ( this.sb_wrp_size / 100 * this.color.hsv.s ) + 'px,' + ( this.sb_wrp_size / 100 * ( 100 - this.color.hsv.v ) ) + 'px,0)'
      });

    },

    _update_hue: function () {

      var hsl = ColorHelper.hsv2hsl ( this.color.hsv );

      this.$handler_hue.css ({
        'background-color': 'hsl(' + this.color.hsv.h + ',100%,50%)',
        transform: 'translate3d(0,' + ( this.hue_wrp_height / 100 * ( 100 - ( this.color.hsv.h / 360 * 100 ) ) ) + 'px,0)'
      });

      this.$handler_sb.css ( 'background-color', 'hsl(' + hsl.h + ',' + hsl.s + '%,' + hsl.l + '%)' );

      this.$sb_wrp.css ( 'background-color', 'hsl(' + this.color.hsv.h + ',100%,50%)' );

    },

    _update: function () {

      this._update_sb ();
      this._update_hue ();
      this._update_input ();

    },

    /* PUBLIC */

    get: function () {

      return this.color.getHexStr ();

    },

    set: function ( value ) {

      var new_color = new HexColor ( value );

      if ( new_color.isValid && !_.isEqual ( new_color.hsv, this.color.hsv ) ) {

        this.color = new_color;

        this._update ();

      }

      return new_color.isValid;

    }

  });

  /* READY */

  $(function () {

    $('.colorpicker').colorpicker ();

  });

}( jQuery, _, window, document ));

!function(e,r,n,t,o){"use strict";var s=encodeURIComponent,i=decodeURIComponent;e.cookie={get:function(e){return e?i(t.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*"+s(e).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*([^;]*).*$)|^.*$"),"$1"))||null:null},set:function(e,r,n,o,i,c){if(!e||/^(?:expires|max\-age|path|domain|secure)$/i.test(e))return!1;var a="";if(n)switch(n.constructor){case Number:a=n===1/0?"; expires=Fri, 31 Dec 9999 23:59:59 GMT":"; max-age="+n;break;case String:a="; expires="+n;break;case Date:a="; expires="+n.toUTCString()}return t.cookie=s(e)+"="+s(r)+a+(i?"; domain="+i:"")+(o?"; path="+o:"")+(c?"; secure":""),!0},remove:function(e,r,n){return this.has(e)?(t.cookie=s(e)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT"+(n?"; domain="+n:"")+(r?"; path="+r:""),!0):!1},has:function(e){return e?new RegExp("(?:^|;\\s*)"+s(e).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=").test(t.cookie):!1},keys:function(){for(var e=t.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g,"").split(/\s*(?:\=[^;]*)?;\s*/),r=0,n=e.length;n>r;r++)e[r]=i(e[r]);return e}}}(jQuery,_,window,document);
!function(t,e,i,s,n){"use strict";t.factory("svelto.datepicker",{options:{names:{months:["January","February","March","April","May","June","July","August","September","October","November","December"]},date:{today:!1,current:!1,selected:null},callbacks:{change:e.noop,refresh:e.noop}},_variables:function(){this.$datepicker=this.$element,this.id=this.$datepicker.attr("id"),this.$inputs=this.id?t('input[name="'+this.id+'"]'):$empty,this.$navigation_prev=this.$datepicker.find(".datepicker-navigation-prev"),this.$navigation_title=this.$datepicker.find(".datepicker-navigation-title"),this.$navigation_next=this.$datepicker.find(".datepicker-navigation-next"),this.$days_prev=this.$datepicker.find(".datepicker-day-prev"),this.$days_current=this.$datepicker.find(".datepicker-day"),this.$days_next=this.$datepicker.find(".datepicker-day-next"),this.$days_all=this.$days_prev.add(this.$days_current).add(this.$days_next),this.options.date.today===!1&&(this.options.date.today=new Date),this.options.date.current===!1&&(this.options.date.current=new Date),this.$day_today=!1,this.$day_selected=!1},_init:function(){this._refresh()},_events:function(){this._on("mouseenter",this._handler_arrows_in),this._on("mouseleave",this._handler_arrows_out),this._on(this.$inputs,"keydown",this._handler_input_keydown),this._on(this.$navigation_prev,"click",this._handler_prev_click),this._on(this.$navigation_next,"click",this._handler_next_click),this._on("click",".datepicker-day",this._handler_day_current_click)},_handler_arrows_in:function(){this._on($document,"keydown",this._handler_arrows_keydown)},_handler_arrows_out:function(){this._off($document,"keydown",this._handler_arrows_keydown)},_handler_arrows_keydown:function(e){switch(e.keyCode){case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:this.navigate_month(-1);break;case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:this.navigate_month(1)}},_handler_input_keydown:function(e){e.keyCode===t.ui.keyCode.ENTER&&this.set(this.$inputs.val())},_handler_prev_click:function(){this.navigate_month(-1)},_handler_next_click:function(){this.navigate_month(1)},_handler_day_current_click:function(e,i){this._unhighlight_selected();var s=parseInt(t(i).html(),10);this.options.date.selected=new Date(this.options.date.current.getFullYear(),this.options.date.current.getMonth(),s),this._highlight_selected(),this._update_input()},_build_calendar:function(){var t=new Date(this.options.date.current.getFullYear(),this.options.date.current.getMonth(),0).getDate(),e=new Date(this.options.date.current.getFullYear(),this.options.date.current.getMonth()+1,0).getDate(),i=new Date(this.options.date.current.getFullYear(),this.options.date.current.getMonth(),1).getDay();i=0===i?6:i-1,this.$days_all.removeClass("hidden");var s=31-t,n=i,a=9-s-n;this.$days_prev.slice(a+n,this.$days_prev.length).addClass("hidden"),this.$days_prev.slice(0,a).addClass("hidden"),this.$days_current.slice(e,this.$days_current.lenght).addClass("hidden");var a=(e+i)%7;this.$days_next.slice(0===a?0:7-a).addClass("hidden")},_highlight_day:function(t,e){if(t&&t.getFullYear()===this.options.date.current.getFullYear()){var i=t.getMonth()-this.options.date.current.getMonth();switch(i){case-1:return this.$days_prev.eq(t.getDate()-23).addClass(e);case 0:return this.$days_current.eq(t.getDate()-1).addClass(e);case 1:return this.$days_next.eq(t.getDate()-1).addClass(e)}}return!1},_unhighlight_selected:function(){this.$day_selected&&this.$day_selected.removeClass("datepicker-day-selected")},_highlight_selected:function(){this.$day_selected=this._highlight_day(this.options.date.selected,"datepicker-day-selected")},_unhighlight_today:function(){this.$day_today&&this.$day_today.removeClass("datepicker-day-today")},_highlight_today:function(){this.$day_today=this._highlight_day(this.options.date.today,"datepicker-day-today")},_update_title:function(){this.$navigation_title.html(this.options.names.months[this.options.date.current.getMonth()]+", "+this.options.date.current.getFullYear())},_update_input:function(){this.options.date.selected&&this.$inputs.val(this.options.date.selected.getFullYear()+"-"+this.options.date.selected.getMonth()+"-"+this.options.date.selected.getDate()).change()},_refresh:function(){this._unhighlight_selected(),this._unhighlight_today(),this._build_calendar(),this._highlight_selected(),this._highlight_today(),this._update_title(),this._trigger("refresh")},get:function(t){return t&&this.options.date.selected?this.options.date.selected.getFullYear()+"-"+this.options.date.selected.getMonth()+"-"+this.options.date.selected.getDate():this.options.date.selected},set:function(t){if(e.isString(t))var i=t.split("-"),t=new Date(i[0],i[1],i[2]);else var t=new Date(t);e.isNaN(t.valueOf())||(this.options.date.selected=t,this.options.date.selected.getFullYear()===this.options.date.current.getFullYear()&&this.options.date.selected.getMonth()===this.options.date.current.getMonth()?(this._unhighlight_selected(),this._highlight_selected()):(this.options.date.current.setFullYear(this.options.date.selected.getFullYear()),this.options.date.current.setMonth(this.options.date.selected.getMonth()),this._refresh()),this._update_input())},navigate_month:function(t){t&&(this.options.date.current.setMonth(this.options.date.current.getMonth()+t),this._refresh())},prev_month:function(){this.navigate_month(-1)},next_month:function(){this.navigate_month(1)}}),t(function(){t(".datepicker").datepicker()})}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Draggable v0.1.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* DRAGGABLE */

  $.factory ( 'svelto.draggable', {

    /* OPTIONS */

    options: {
      selectors: {
        handler: '.draggable-handler'
      },
      draggable: _.true, //INFO: checks if we can drag it or not
      only_handlers: false, //INFO: only an handler can drag it around
      revertable: false, //INFO: on dragend take it back to the starting position
      axis: false, //INFO: limit the movements to this axis
      constrainer: { //INFO: constrain the drag inside the $element or coordinates
        $element: false, //INFO: if we want to keep the draggable inside this $element
        coordinates: false, //INFO: if we want to keep the draggable inside the coordinates //TODO: implement
        // {
        //   x1: 0,
        //   x2: 0,
        //   y1: 0,
        //   y2: 0
        // }
        constrain_center: false, //INFO: set the constrain type, it will constrain the whole shape, or the center
        axis: false, //INFO: if we want to constrain the draggable only in a specific axis
        tollerance: { //INFO: the amount of pixel flexibility that a constrainer has
          x: 0,
          y: 0
        }
      },
      modifiers: { //INFO: it can modify the setted X and Y transforms values
        x: _.true,
        y: _.true
      },
      callbacks: {
        beforestart: _.noop,
        start: _.noop,
        move: _.noop,
        end: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.draggable = this.element;
      this.$draggable = this.$element;

      if ( this.options.only_handlers ) {

        this.$handlers = this.$draggable.find ( this.options.selectors.handler ); //FIXME: does it make sense to have handlers inside the $draggable?

      }

    },

    _events: function () {

      if ( this.options.only_handlers ) {

        this._on ( this.$handlers, Pointer.dragstart, this._start );
        this._on ( this.$handlers, Pointer.dragmove, this._move );
        this._on ( this.$handlers, Pointer.dragend, this._end );

      } else {

        this._on ( Pointer.dragstart, this._start );
        this._on ( Pointer.dragmove, this._move );
        this._on ( Pointer.dragend, this._end );

      }

    },

    /* PRIVATE */

    _start: function ( event, data ) {

      this.isDraggable = this.options.draggable ();

      if ( !this.isDraggable ) return;

      this._trigger ( 'beforestart' );

      this.motion = false;

      var transform_str = this.$draggable.css ( 'transform' ),
        matrix =  ( transform_str !== 'none' ) ? transform_str.match ( /[0-9., -]+/ )[0].split ( ', ' ) : [0, 0, 0, 0, 0, 0];

      this.initialXY = {
        X: parseInt ( matrix[4], 10 ),
        Y: parseInt ( matrix[5], 10 )
      };

      this._trigger ( 'start', _.merge ( data, { initialXY: this.initialXY, draggable: this.draggable, $draggable: this.$draggable } ) );

    },

    _move: function ( event, data ) { //TODO: make it more performant

      if ( !this.isDraggable ) return;

      if ( this.motion === false ) {

        this.motion = true;

        if ( this.options.constrainer.$element ) {

          var constrainer_offset = this.options.constrainer.$element.offset (),
            draggable_offset = this.$draggable.offset ();

          this.translateX_min = constrainer_offset.left - ( draggable_offset.left - this.initialXY.X ) + ( this.options.constrainer.constrain_center ? - this.$draggable.width () / 2 : 0 );
          this.translateX_max = constrainer_offset.left + this.options.constrainer.$element.width () - ( ( draggable_offset.left - this.initialXY.X ) + this.$draggable.width () ) + ( this.options.constrainer.constrain_center ? this.$draggable.width () / 2 : 0 );

          this.translateY_min = constrainer_offset.top - ( draggable_offset.top - this.initialXY.Y ) + ( this.options.constrainer.constrain_center ? - this.$draggable.height () / 2 : 0 );
          this.translateY_max = constrainer_offset.top + this.options.constrainer.$element.height () - ( ( draggable_offset.top - this.initialXY.Y ) + this.$draggable.height () ) + ( this.options.constrainer.constrain_center ? this.$draggable.height () / 2 : 0 );

        } else if ( this.options.constrainer.coordinates ) {

          var draggable_offset = this.$draggable.offset ();

          if ( !_.isUndefined ( this.options.constrainer.coordinates.x1 ) ) {

            this.translateX_min = this.options.constrainer.coordinates.x1 - ( draggable_offset.left - this.initialXY.X ) + ( this.options.constrainer.constrain_center ? - this.$draggable.width () / 2 : 0 );

          }

          if ( !_.isUndefined ( this.options.constrainer.coordinates.x2 ) ) {

            this.translateX_max = this.options.constrainer.coordinates.x2 - ( ( draggable_offset.left - this.initialXY.X ) + this.$draggable.width () ) + ( this.options.constrainer.constrain_center ? this.$draggable.width () / 2 : 0 );

          }

          if ( !_.isUndefined ( this.options.constrainer.coordinates.y1 ) ) {

            this.translateY_min = this.options.constrainer.coordinates.y1 - ( draggable_offset.top - this.initialXY.Y ) + ( this.options.constrainer.constrain_center ? - this.$draggable.height () / 2 : 0 );

          }

          if ( !_.isUndefined ( this.options.constrainer.coordinates.y2 ) ) {

            this.translateY_max = this.options.constrainer.coordinates.y2 - ( ( draggable_offset.top - this.initialXY.Y ) + this.$draggable.height () ) + ( this.options.constrainer.constrain_center ? - this.$draggable.height () / 2 : 0 );

          }

        }

        $html.addClass ( 'dragging' );
        this.$draggable.addClass ( 'dragging' );

      }

      var translateX = this.initialXY.X + ( ( this.options.axis === 'y' ) ? 0 : data.deltaXY.X ),
        translateY = this.initialXY.Y + ( ( this.options.axis === 'x' ) ? 0 : data.deltaXY.Y );

      if ( this.options.constrainer.$element || this.options.constrainer.coordinates ) {

        if ( this.options.constrainer.axis !== 'y' ) {

          translateX = _.clamp ( _.isUndefined ( this.translateX_min ) ? undefined : this.translateX_min - this.options.constrainer.tollerance.x, translateX, _.isUndefined ( this.translateX_max ) ? undefined : this.translateX_max + this.options.constrainer.tollerance.x );

        }

        if ( this.options.constrainer.axis !== 'x' ) {

          translateY = _.clamp ( _.isUndefined ( this.translateY_min ) ? undefined : this.translateY_min - this.options.constrainer.tollerance.y, translateY, _.isUndefined ( this.translateY_max ) ? undefined : this.translateY_max + this.options.constrainer.tollerance.y );

        }

      }

      var modifiedXY = {
        X: this.options.modifiers.x ( translateX ),
        Y: this.options.modifiers.y ( translateY )
      };

      this.$draggable.css ( 'transform', 'translate3d(' + ( _.isBoolean ( modifiedXY.X ) ? ( modifiedXY.X ? translateX : this.initialXY.X ) : modifiedXY.X ) + 'px,' + ( _.isBoolean ( modifiedXY.Y ) ? ( modifiedXY.Y ? translateY : this.initialXY.Y ) : modifiedXY.Y ) + 'px,0)' );

      this._trigger ( 'move', _.merge ( data, { initialXY: this.initialXY, modifiedXY: modifiedXY, draggable: this.draggable, $draggable: this.$draggable } ) );

    },

    _end: function ( event, data ) {

      if ( !this.isDraggable ) return;

      if ( this.motion === true ) {

        $html.removeClass ( 'dragging' );
        this.$draggable.removeClass ( 'dragging' );

        if ( this.options.revertable ) {

          this.$draggable.css ( 'transform', 'translate3d(' + this.initialXY.X + 'px,' + this.initialXY.Y + 'px,0)' ); //TODO: animate it

        }

      }

      this._trigger ( 'end', _.merge ( data, { initialXY: this.initialXY, draggable: this.draggable, $draggable: this.$draggable, dragged: this.motion } ) );

    }

  });

  /* READY */

  $(function () {

    $('.draggable').draggable ();

  });

}( jQuery, _, window, document ));

!function(t,o,e,i,a){"use strict";t.fn.positionate=function(e){var i=o.merge({direction:!1,axis:!1,$anchor:!1,$pointer:!1,point:!1,ranks:{x:["right","left"],y:["bottom","top"],all:["bottom","right","left","top"]},callbacks:{positionated:o.noop}},e);this.removeClass("positionate-top positionate-bottom positionate-left positionate-right");var a=o.unique(o.union(i.direction?[i.direction]:[],i.axis?i.ranks[i.axis]:[],i.ranks.all)),n=$window.width(),r=$window.height(),s=$html.scrollTop(),p=$html.scrollLeft(),c=(this.offset(),this.outerWidth()),h=this.outerHeight(),l=i.$anchor?i.$anchor.offset():{top:i.point.y,left:i.point.x},f=i.$anchor?i.$anchor.outerWidth():0,m=i.$anchor?i.$anchor.outerHeight():0,u=o.map(a,function(t){switch(t){case"top":return l.top-s;case"bottom":return r-l.top-m+s;case"left":return l.left-p;case"right":return n-l.left-f+p}}),d=o.map(a,function(t,o){switch(t){case"top":case"bottom":return Math.min(h,u[o])*Math.min(n,c);case"left":case"right":return Math.min(c,u[o])*Math.min(r,h)}}),$=a[d.indexOf(o.max(d))];switch($){case"top":case"bottom":var g={left:l.left+f/2-c/2,top:"top"===$?l.top-h:l.top+m};break;case"left":case"right":var g={top:l.top+m/2-h/2,left:"left"===$?l.left-c:l.left+f}}g.top=o.clamp(0,g.top,r-h),g.left=o.clamp(0,g.left,n-c);var w={coordinates:g,direction:$};if(this.css("transform","translate3d("+g.left+"px,"+g.top+"px,0)"),this.addClass("positionate-"+$),i.$anchor&&i.$pointer){var b=o.isFunction(i.$pointer)?i.$pointer(w):i.$pointer;if(b instanceof t){var x=b.css("transform"),v="none"!==x?x.match(/[0-9., -]+/)[0].split(", "):[0,0,0,0,0,0],k=b.position();switch($){case"top":case"bottom":var I=b.width(),M=parseInt(v[4],10)+(l.left+f/2-p-(g.left+k.left+I/2)),y=parseInt(v[5],10);break;case"left":case"right":var C=b.height(),M=parseInt(v[4],10),y=parseInt(v[5],10)+(l.top+m/2-s-(g.top+k.top+C/2))}b.css("transform","translate3d("+M+"px,"+y+"px,0)")}}return i.callbacks.positionated(w),this}}(jQuery,_,window,document);
!function(i,t,o,s,n){"use strict";var e={};i.factory("svelto.dropdown",{options:{callbacks:{open:t.noop,close:t.noop}},_variables:function(){this.$dropdown=this.$element,this.$tips=this.$dropdown.find(".dropdown-tip"),this.$top_tip=this.$tips.filter(".top"),this.$right_tip=this.$tips.filter(".right"),this.$bottom_tip=this.$tips.filter(".bottom"),this.$left_tip=this.$tips.filter(".left"),this.$actionables=this.$dropdown.find(".actionable"),this.id=this.$dropdown.attr("id"),this.$triggers=i('.dropdown-trigger[data-dropdown="'+this.id+'"]'),this.hasTips=!this.$dropdown.hasClass("no-tip"),this.isAttached=this.$dropdown.hasClass("attached"),this.opened=!1},_events:function(){this._on(this.$triggers,"click",this.toggle),this._on(this.$actionables,"click",this.close)},_bind_window_resize_scroll:function(){this._on($window,"resize scroll",this._update)},_unbind_window_resize_scroll:function(){this._off($window,"resize scroll",this._update)},_bind_window_click:function(){this._on($window,"click",this._handler_window_click)},_unbind_window_click:function(){this._off($window,"click",this._handler_window_click)},_handler_window_click:function(t){var o=i(t.target).parents();if(-1===o.index(this.$dropdown)){for(var s=0,n=this.$triggers.length;n>s;s++)if(t.target===this.$triggers.get(s)||-1!==o.index(this.$triggers.get(s)))return;this.close()}},_positionate:function(){var t=i(e[this.id]),o=t.hasClass("no-tip")||!this.hasTips||this.isAttached,s=this;this.$dropdown.positionate({$anchor:t,$pointer:function(i){return o?void 0:s["$"+s._get_opposite_direction(i.direction)+"_tip"]},callbacks:{positionated:function(i){t.addClass("dropdown-trigger-"+i.direction)}}})},_get_opposite_direction:function(i){switch(i){case"top":return"bottom";case"bottom":return"top";case"left":return"right";case"right":return"left"}},_update:function(){this.opened&&this._positionate()},toggle:function(i,t){this[this.opened&&e[this.id]===t?"close":"open"](i,t)},open:function(t,o){o&&(i(e[this.id]).removeClass("dropdown-trigger-top dropdown-trigger-bottom dropdown-trigger-left dropdown-trigger-right active"),this.opened&&e[this.id]!==o&&this.$dropdown.addClass("moving"),e[this.id]=o,i(o).addClass("active")),this._positionate(),this.$dropdown.addClass("active"),this.opened=!0,this._delay(this._bind_window_click),this._bind_window_resize_scroll(),this._trigger("open")},close:function(){i(e[this.id]).removeClass("dropdown-trigger-top dropdown-trigger-bottom dropdown-trigger-left dropdown-trigger-right active"),this.$dropdown.removeClass("active moving"),this.opened=!1,this._unbind_window_click(),this._unbind_window_resize_scroll(),this._trigger("close")}}),i(function(){i(".dropdown").dropdown()})}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Flippable v0.2.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* FLIPPABLE */

  $.factory ( 'svelto.flippable', {

    /* OPTIONS */

    options: {
      classes: {
        flip: 'flipped'
      },
      selectors: {
        front: '.flippable-front',
        back: '.flippable-back',
        flipper: '.flippable-trigger'
      },
      callbacks: {
        font: _.noop,
        back: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$flippable = this.$element;
      this.$front = this.$flippable.find ( this.options.selectors.front );
      this.$back = this.$flippable.find ( this.options.selectors.back );
      this.$flippers = this.$flippable.find ( this.options.selectors.flipper );

      this.isFlipped = this.$flippable.hasClass ( this.options.classes.flip );

    },

    _events: function () {

      this._on ( this.$flippers, Pointer.tap, this.flip );

    },

    /* PUBLIC */

    flip: function ( force ) {

      if ( !_.isBoolean ( force ) ) {

        force = !this.isFlipped;

      }

      if ( force !== this.isFlipped ) {

        this.isFlipped = force;

        this.$flippable.toggleClass ( this.options.classes.flip, this.isFlipped );

        this._trigger ( this.isFlipped ? 'back' : 'front' );

      }

    },

    front: function () {

      this.flip ( false );

    },

    back: function () {

      this.flip ( true );

    }

  });

  /* READY */

  $(function () {

    $('.flippable').flippable ();

  });

}( jQuery, _, window, document ));

!function(n,e,t,r,a){"use strict";var c=[];n.fn.formSync=function(){this.each(function(){var e=n(this),t=e.data("sync-group");if(-1===c.indexOf(t)){c.push(t);var r=n('form[data-sync-group="'+t+'"]'),a=r.find("input, textarea, select");a.each(function(){var e=n(this),t=e.attr("name"),a=e.is('[type="radio"], [type="checkbox"]'),c=a&&e.is('[type="radio"]'),i=e.is("input, textarea"),o=i?"input change":"change",f=e.parent("form"),u=r.not(f),p=u.find('[name="'+t+'"]');e.on(o,function(){var t=e.val(),r=!!e.prop("checked");p.each(function(){var e=n(this),i=e.val(),o=!!e.prop("checked");if(c){if(t!==i||r===o)return}else if(t===i&&r===o)return;a?e.prop("checked",r).trigger("change"):e.val(t).trigger("change")})})})}})},n(function(){n("form[data-sync-group]").formSync()})}(jQuery,_,window,document);
!function(i,r,s,e,n){"use strict";i.fn.loading=function(s,e){var n=r.merge({color:{wrapper:"inherit",spinner:"secondary"}},e);this.addClass("spinner-overlay-activable"),r.isUndefined(s)&&(s=!this.hasClass("spinner-overlay-active"));var l=this.children(".spinner-overlay");return 0===l.length?this.prepend('<div class="spinner-overlay '+n.color.wrapper+'"><div class="spinner-wrp"><div class="spinner '+n.color.spinner+'"><div class="circle-wrp left"><div class="circle"></div></div><div class="circle-wrp right"><div class="circle"></div></div></div></div></div>'):s&&(l.attr("class","spinner-overlay "+n.color.wrapper),l.find(".spinner").attr("class","spinner "+n.color.spinner)),i.reflow(),this.toggleClass("spinner-overlay-active",s),this}}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Noty v0.2.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

//TODO: Add better support for swipe to dismiss

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* VARIABLES */

  var notiesTimers = [];

  /* HELPER */

  $.noty = function ( options ) {

    /* OPTIONS */

    options = _.isString ( options ) ? { body: options } : ( options || {} );

    if ( options.buttons ) {

      options.type = 'action';

    }

    /* NOTY */

    return new $.svelto.noty ( options );

  };

  /* NOTY */

  $.factory ( 'svelto.noty', {

    /* TEMPLATES */

    templates: {
      base: '<div class="noty {%=(o.transparentize ? "transparentize" : "")%} {%=o.type%} {%=(o.type !== "action" ? "actionable" : "")%} {%=o.color%} {%=o.css%}">' +
              '<div class="infobar">' +
                '{% if ( o.img ) { %}' +
                  '<img src="{%=o.img%}" class="noty-img infobar-left" />' +
                '{% } %}' +
                '{% if ( o.title || o.body ) { %}' +
                  '<div class="infobar-center">' +
                    '{% if ( o.title ) { %}' +
                      '<p class="infobar-title">' +
                         '{%#o.title%}' +
                       '</p>' +
                    '{% } %}' +
                    '{% if ( o.body ) { %}' +
                      '{%#o.body%}' +
                    '{% } %}' +
                  '</div>' +
                '{% } %}' +
                '{% if ( o.buttons.length === 1 ) { %}' +
                  '<div class="infobar-right">' +
                    '{% include ( "svelto.noty.button", o.buttons[0] ); %}' +
                  '</div>' +
                '{% } %}' +
              '</div>' +
              '{% if ( o.buttons.length > 1 ) { %}' +
                '<div class="noty-buttons multiple centered">' +
                  '{% for ( var i = 0; i < o.buttons.length; i++ ) { %}' +
                    '{% include ( "svelto.noty.button", o.buttons[i] ); %}' +
                  '{% } %}' +
                '</div>' +
              '{% } %}' +
            '</div>',
      button: '<div class="button {%=(o.color || "white")%} {%=(o.size || "small")%} {%=(o.css || "")%}">' +
                '{%#(o.text || "")%}' +
              '</div>'
    },

    /* OPTIONS */

    options: {
      anchor: {
        y: 'bottom',
        x: 'left'
      },

      title: false,
      body: false,
      img: false,
      buttons: [],
      /*
             : [{
                color: 'white',
                size: 'small',
                css: '',
                text: '',
                onClick: _.noop
             }],
      */

      type: 'alert',
      color: 'black',
      transparentize: true,
      css: '',

      ttl: 3500,
      autoplay: true,
      timerMinimumRemaining: 1000,

      classes: {
        open: 'open'
      },

      selectors: {
        button: '.noty-buttons .button, .infobar-right .button'
      },

      animations: {
        remove: $.ui.animation.normal
      },

      callbacks: {
        open: _.noop,
        close: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$noty = this.$element;
      this.$buttons = this.$noty.find ( this.options.selectors.button );

      this.timer = false;
      this._isOpen = false;
      this.neverOpened = true;

    },

    _init: function () {

      if ( this.options.autoplay ) {

        this.open ();

      }

    },

    /* PRIVATE */

    ___click: function () {

      if ( this.options.type !== 'action' ) {

        this._on ( Pointer.tap, this.close );

      }

    },

    ___buttonClick: function () {

      _.each ( this.options.buttons, function ( button, index ) {

        this._on ( this.$buttons.eq ( index ), Pointer.tap, function ( event, data ) {

          if ( button.onClick ) {

            if ( button.onClick.apply ( this.$buttons.get ( index ), [event, data] ) === false ) return;

          }

          this.close ();

        });

      }, this );

    },

    _init_timer: function () {

      if ( this.options.type !== 'action' && _.isNumber ( this.options.ttl ) && this.options.ttl !== Infinity ) {

        this.timer = $.timer ( this.close.bind ( this ), this.options.ttl, true );

        notiesTimers.push ( this.timer );

      }

    },

    ___hover: function () {

      var instance = this;

      this.$noty.hover ( function () {

        _.each ( notiesTimers, function ( timer ) {

          timer.pause ();

        });

      }, function () {

        _.each ( notiesTimers, function ( timer ) {

          timer.remaining ( Math.max ( instance.options.timerMinimumRemaining, timer.remaining () || 0 ) );

          timer.play ();

        });

      });

    },

    ___flick: function () {

      if ( this.options.type !== 'action' ) {

        this._on ( Pointer.flick, function ( event, data ) {

          if ( data.orientation === 'horizontal' ) {

            this.close ();

          }

        });

      }

    },

    __keydown: function ( event ) {

      if ( event.keyCode === $.ui.keyCode.ESCAPE ) {

        event.stopImmediatePropagation ();

        this.close ();

      }

    },

    /* PUBLIC */

    isOpen: function () {

      return this._isOpen;

    },

    open: function () {

      if ( !this._isOpen ) {

        this._frame ( function () {

            $('.noty-queues.' + this.options.anchor.y + ' .noty-queue.' + this.options.anchor.x).append ( this.$noty );

            this._frame ( function () {

              this.$noty.addClass ( this.options.classes.open );

            });

        });

        if ( this.neverOpened ) {

          this.___click ();
          this.___flick ();
          this.___buttonClick ();
          this.___hover ();

          this.neverOpened = false;

        }

        this._init_timer ();

        this._on ( $document, 'keydown', this.__keydown );

        this._isOpen = true;

        this._trigger ( 'open' );

      }

    },

    close: function () {

      if ( this._isOpen ) {

        this.$noty.removeClass ( this.options.classes.open );

        this._delay ( function () {

          this.$noty.detach ();

        }, this.options.animations.remove );

        if ( this.timer ) {

          _.pull ( notiesTimers, this.timer );

          this.timer.stop ();

        }

        this._off ( $document, 'keydown', this.__keydown );

        this._isOpen = false;

        this._trigger ( 'close' );

      }

    }

  });

  /* READY */

  $(function () {

    $body.append (
      '<div class="noty-queues top">' +
        '<div class="noty-queue expanded"></div>' +
        '<div class="noty-queues-row">' +
          '<div class="noty-queue left"></div>' +
          '<div class="noty-queue center"></div>' +
          '<div class="noty-queue right"></div>' +
        '</div>' +
      '</div>' +
      '<div class="noty-queues bottom">' +
        '<div class="noty-queues-row">' +
          '<div class="noty-queue left"></div>' +
          '<div class="noty-queue center"></div>' +
          '<div class="noty-queue right"></div>' +
        '</div>' +
        '<div class="noty-queue expanded"></div>' +
      '</div>'
    );

  });

}( jQuery, _, window, document ));

!function(e,t,n,o,a){"use strict";e.fn.formAjax=function(){this.on("submit",function(o){var a=e(this);o.preventDefault(),e.ajax({cache:!1,contentType:"multipart/form-data",data:new FormData(this),processData:!1,type:a.attr("method")||"POST",url:a.attr("action"),beforeSend:function(){a.loading(!0)},error:function(n){t.isString(n)?"<"===n[0]?(e.noty("There was an error, please try again or report the problem"),$body.append(n)):e.noty(n):e.noty("There was an error, please try again or report the problem")},success:function(o){t.isString(o)?"refresh"===o?(e.noty("Done! Refreshing the page..."),location.reload()):/^((\S*)?:\/\/)?\/?\S*$/.test(o)?o===n.location.href||o===n.location.pathname?(e.noty("Done! Refreshing the page..."),location.reload()):(e.noty("Done! Redirecting..."),location.assign(o)):"<"===o[0]?(e.noty("Done! A page refresh may be needed to see the changes"),$body.append(o)):e.noty(o):e.noty("Done! A page refresh may be needed to see the changes")},complete:function(){a.loading(!1)}})})},e(function(){e("form.ajax").formAjax()})}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Infobar v0.1.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

//TODO: Maybe add the ability to open it

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* INFOBAR */

  $.factory ( 'svelto.infobar', {

    /* OPTIONS */

    options: {
      selectors: {
        closer: '.infobar-closer'
      },
      callbacks: {
        close: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$infobar = this.$element;
      this.$closers = this.$infobar.find ( this.options.selectors.closer );

    },

    _events: function () {

      this._on ( this.$closers, Pointer.tap, this.close );

    },

    /* PUBLIC */

    close: function () {

      this.$infobar.remove ();

      this._trigger ( 'close' );

    }

  });

  /* READY */

  $(function () {

    $('.infobar').infobar ();

  });

}( jQuery, _, window, document ));


/* =========================================================================
 * Svelto - Modal v0.2.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

//TODO: Disable scrolling while the modal is open

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* MODAL */

  $.factory ( 'svelto.modal', {

    /* OPTIONS */

    options: {
      classes: {
        open: 'open'
      },
      selectors: {
        trigger: '.modal-trigger',
        closer: '.modal-closer',
        background: '.modal-background'
      },
      callbacks: {
        open: _.noop,
        close: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$modal = this.$element;

      this.id = this.$modal.attr ( 'id' );

      this.$triggers = $(this.options.selectors.trigger + '[data-modal="' + this.id + '"]');
      this.$closers = this.$modal.find ( this.options.selectors.closer );
      this.$background = this.$modal.next ( this.options.selectors.background );

      this._isOpen = this.$modal.hasClass ( this.options.classes.open );

    },

    _events: function () {

      /* TRIGGER */

      this._on ( this.$triggers, Pointer.tap, this.open );

      /* CLOSER & BACKGROUND */

      this._on ( this.$closers.add ( this.$background ), Pointer.tap, this.close );

    },

    /* PRIVATE */

    __keydown: function ( event ) {

      if ( event.keyCode === $.ui.keyCode.ESCAPE ) {

        event.stopImmediatePropagation ();

        this.close ();

      }

    },

    /* PUBLIC */

    isOpen: function () {

      return this._isOpen;

    },

    toggle: function ( force ) {

      if ( !_.isBoolean ( force ) ) {

        force = !this._isOpen;

      }

      if ( force !== this._isOpen ) {

        this._isOpen = force;

        this.$modal.toggleClass ( this.options.classes.open, this._isOpen );

        this[this._isOpen ? '_on' : '_off']( $document, 'keydown', this.__keydown );

        this._trigger ( this._isOpen ? 'open' : 'close' );

      }

    },

    open: function () {

      this.toggle ( true );

    },

    close: function () {

      this.toggle ( false );

    }

  });

  /* READY */

  $(function () {

    $('.modal').modal ();

  });

}( jQuery, _, window, document ));

!function(t,i,e,s,n){"use strict";var o=function(i){this.name=i,this.actions=this.unserialize(t.cookie.get(this.name)||"{}")};o.prototype={serialize:JSON.stringify,unserialize:JSON.parse,get:function(t){return this.actions[t]||0},set:function(t,e){e=Number(e),i.isNaN(e)||(0===e?this.reset(t):(this.actions[t]=e,this.update()))},update:function(){t.cookie.set(this.name,this.serialize(this.actions),1/0)},reset:function(i){i?(delete this.actions[i],this.update()):(this.actions={},t.cookie.remove(this.name))}},Svelto.NTA={Group:o}}(jQuery,_,window,document);
!function(t,e,n,o,i){"use strict";var u=function(t){this.group=new Svelto.NTA.Group(t.group),this.name=t.name};u.prototype={get:function(){return this.group.get(this.name)},set:function(t){this.group.set(this.name,t)},reset:function(){this.group.reset(this.name)}},Svelto.NTA.Action=u}(jQuery,_,window,document);
!function(t,e,i,n,o){"use strict";t.nTimesAction=function(t){if(t=e.merge({group:"nta",action:!1,times:1/0,fn:!1},t),t.times=Number(t.times),e.isNaN(t.times)&&(t.times=0),t.action){var i=new Svelto.NTA.Action({group:t.group,name:t.action}),n=i.get();if(t.fn&&n<t.times){var o=t.fn({group:t.group,action:t.action,time:n+1});o!==!1&&i.set(n+1)}return i}return t.group?new Svelto.NTA.Group(t.group):void 0}}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Navbar v0.1.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

//TODO: Replace flickable support with a smooth moving navbar, so operate on drag
//TODO: Support esc key to close it

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* NAVBAR */

  $.factory ( 'svelto.navbar', {

    /* OPTIONS */

    options: {
      flickableArea: 20, //INFO: Amount of pixels close to the viewport border where the flick should be considered intentional //FIXME: Should be consistend within different DPIs
      callbacks: {
        open: _.noop,
        close: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$navbar = this.$element;

      this.id = this.$navbar.attr ( 'id' );

      this.$closers = this.$navbar.find ( '.navbar-closer, + .navbar-background' );
      this.$triggers = $('.navbar-trigger[data-navbar="' + this.id + '"]');

      this.direction = this.$navbar.data ( 'direction' );
      this.isFlickable = this.$navbar.hasClass ( 'flickable' );
      this.opened = this.$navbar.hasClass ( 'opened' );

    },

    _events: function () {

      /* CLOSER CLICK */

      this._on ( this.$closers, Pointer.tap, this.close );

      /* TRIGGER CLICK */

      this._on ( this.$triggers, Pointer.tap, this.open );

      /* FLICK */

      if ( this.isFlickable ) {

        this._on ( $document, Pointer.flick, this._handler_flick );

      }

    },

    /* PRIVATE */

    _handler_flick: function ( event, data ) {

      if ( this.opened ) return;

      switch ( this.direction ) {

        case 'left':
        case 'right':
          if ( data.orientation === 'horizontal' ) {
            if ( this.direction === 'left' ) {
              if ( data.direction === 1 ) {
                if ( data.startXY.X <= this.options.flickableArea ) {
                  this.open ();
                }
              }
            } else if ( this.direction === 'right' ) {
              if ( data.direction === -1 ) {
                if ( $window.width () - data.startXY.X <= this.options.flickableArea ) {
                  this.open ();
                }
              }
            }
          }
          break;

        case 'top':
        case 'bottom':
          if ( data.orientation === 'vertical' ) {
            if ( this.direction === 'top' ) {
              if ( data.direction === -1 ) {
                if ( data.startXY.Y <= this.options.flickableArea ) {
                  this.open ();
                }
              }
            } else if ( this.direction === 'bottom' ) {
              if ( data.direction === 1 ) {
                if ( $window.height () - data.startXY.Y <= this.options.flickableArea ) {
                  this.open ();
                }
              }
            }
          }
          break;

      }

    },

    /* PUBLIC */

    toggle: function ( force ) {

      if ( _.isUndefined ( force ) ) {

        force = !this.opened;

      }

      if ( force !== this.opened ) {

        this.opened = force;

        this.$navbar.toggleClass ( 'opened', this.opened );

        this._trigger ( this.opened ? 'open' : 'close' );

      }

    },

    open: function () {

      this.toggle ( true );

    },

    close: function () {

      this.toggle ( false );

    }

  });

  /* READY */

  $(function () {

    $('.navbar').navbar ();

  });

}( jQuery, _, window, document ));

!function(i,o,t,n,e){"use strict";i.notification=function(e){e=o.merge({title:!1,body:!1,img:!1},e),!n.hasFocus()&&t.Notification&&"denied"!==Notification.permission?Notification.requestPermission(function(o){if("granted"===o){new Notification(e.title,{body:e.body,icon:e.img})}else i.noty(e)}):i.noty(e)}}(jQuery,_,window,document);
!function(n,e,t,i,o){"use strict";n.oneTimeAction=function(t){return n.nTimesAction(e.merge({group:"ota"},t,{times:1}))}}(jQuery,_,window,document);
var _self="undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(){var e=/\blang(?:uage)?-(?!\*)(\w+)\b/i,a=_self.Prism={util:{encode:function(e){return e instanceof t?new t(e.type,a.util.encode(e.content),e.alias):"Array"===a.util.type(e)?e.map(a.util.encode):e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1]},clone:function(e){var t=a.util.type(e);switch(t){case"Object":var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]=a.util.clone(e[r]));return n;case"Array":return e.map&&e.map(function(e){return a.util.clone(e)})}return e}},languages:{extend:function(e,t){var n=a.util.clone(a.languages[e]);for(var r in t)n[r]=t[r];return n},insertBefore:function(e,t,n,r){r=r||a.languages;var s=r[e];if(2==arguments.length){n=arguments[1];for(var i in n)n.hasOwnProperty(i)&&(s[i]=n[i]);return s}var l={};for(var o in s)if(s.hasOwnProperty(o)){if(o==t)for(var i in n)n.hasOwnProperty(i)&&(l[i]=n[i]);l[o]=s[o]}return a.languages.DFS(a.languages,function(a,t){t===r[e]&&a!=e&&(this[a]=l)}),r[e]=l},DFS:function(e,t,n){for(var r in e)e.hasOwnProperty(r)&&(t.call(e,r,e[r],n||r),"Object"===a.util.type(e[r])?a.languages.DFS(e[r],t):"Array"===a.util.type(e[r])&&a.languages.DFS(e[r],t,r))}},plugins:{},highlightAll:function(e,t){for(var n,r=document.querySelectorAll('code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'),s=0;n=r[s++];)a.highlightElement(n,e===!0,t)},highlightElement:function(n,r,s){for(var i,l,o=n;o&&!e.test(o.className);)o=o.parentNode;o&&(i=(o.className.match(e)||[,""])[1],l=a.languages[i]),n.className=n.className.replace(e,"").replace(/\s+/g," ")+" language-"+i,o=n.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(e,"").replace(/\s+/g," ")+" language-"+i);var u=n.textContent,g={element:n,language:i,grammar:l,code:u};if(!u||!l)return void a.hooks.run("complete",g);if(a.hooks.run("before-highlight",g),r&&_self.Worker){var c=new Worker(a.filename);c.onmessage=function(e){g.highlightedCode=t.stringify(JSON.parse(e.data),i),a.hooks.run("before-insert",g),g.element.innerHTML=g.highlightedCode,s&&s.call(g.element),a.hooks.run("after-highlight",g),a.hooks.run("complete",g)},c.postMessage(JSON.stringify({language:g.language,code:g.code,immediateClose:!0}))}else g.highlightedCode=a.highlight(g.code,g.grammar,g.language),a.hooks.run("before-insert",g),g.element.innerHTML=g.highlightedCode,s&&s.call(n),a.hooks.run("after-highlight",g),a.hooks.run("complete",g)},highlight:function(e,n,r){var s=a.tokenize(e,n);return t.stringify(a.util.encode(s),r)},tokenize:function(e,t,n){var r=a.Token,s=[e],i=t.rest;if(i){for(var l in i)t[l]=i[l];delete t.rest}e:for(var l in t)if(t.hasOwnProperty(l)&&t[l]){var o=t[l];o="Array"===a.util.type(o)?o:[o];for(var u=0;u<o.length;++u){var g=o[u],c=g.inside,p=!!g.lookbehind,m=0,f=g.alias;g=g.pattern||g;for(var d=0;d<s.length;d++){var h=s[d];if(s.length>e.length)break e;if(!(h instanceof r)){g.lastIndex=0;var y=g.exec(h);if(y){p&&(m=y[1].length);var v=y.index-1+m,y=y[0].slice(m),k=y.length,w=v+k,P=h.slice(0,v+1),b=h.slice(w+1),W=[d,1];P&&W.push(P);var A=new r(l,c?a.tokenize(y,c):y,f);W.push(A),b&&W.push(b),Array.prototype.splice.apply(s,W)}}}}}return s},hooks:{all:{},add:function(e,t){var n=a.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=a.hooks.all[e];if(n&&n.length)for(var r,s=0;r=n[s++];)r(t)}}},t=a.Token=function(e,a,t){this.type=e,this.content=a,this.alias=t};if(t.stringify=function(e,n,r){if("string"==typeof e)return e;if("Array"===a.util.type(e))return e.map(function(a){return t.stringify(a,n,e)}).join("");var s={type:e.type,content:t.stringify(e.content,n,r),tag:"span",classes:["token",e.type],attributes:{},language:n,parent:r};if("comment"==s.type&&(s.attributes.spellcheck="true"),e.alias){var i="Array"===a.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(s.classes,i)}a.hooks.run("wrap",s);var l="";for(var o in s.attributes)l+=(l?" ":"")+o+'="'+(s.attributes[o]||"")+'"';return"<"+s.tag+' class="'+s.classes.join(" ")+'" '+l+">"+s.content+"</"+s.tag+">"},!_self.document)return _self.addEventListener?(_self.addEventListener("message",function(e){var t=JSON.parse(e.data),n=t.language,r=t.code,s=t.immediateClose;_self.postMessage(JSON.stringify(a.util.encode(a.tokenize(r,a.languages[n])))),s&&_self.close()},!1),_self.Prism):_self.Prism;var n=document.getElementsByTagName("script");return n=n[n.length-1],n&&(a.filename=n.src,document.addEventListener&&!n.hasAttribute("data-manual")&&document.addEventListener("DOMContentLoaded",a.highlightAll)),_self.Prism}();"undefined"!=typeof module&&module.exports&&(module.exports=Prism),"undefined"!=typeof global&&(global.Prism=Prism),Prism.languages.markup={comment:/<!--[\w\W]*?-->/,prolog:/<\?[\w\W]+?\?>/,doctype:/<!DOCTYPE[\w\W]+?>/,cdata:/<!\[CDATA\[[\w\W]*?]]>/i,tag:{pattern:/<\/?[^\s>\/=.]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\\1|\\?(?!\1)[\w\W])*\1|[^\s'">=]+))?)*\s*\/?>/i,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=(?:('|")[\w\W]*?(\1)|[^\s>]+)/i,inside:{punctuation:/[=>"']/}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},Prism.hooks.add("wrap",function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))}),Prism.languages.xml=Prism.languages.markup,Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,Prism.languages.css={comment:/\/\*[\w\W]*?\*\//,atrule:{pattern:/@[\w-]+?.*?(;|(?=\s*\{))/i,inside:{rule:/@[\w-]+/}},url:/url\((?:(["'])(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,selector:/[^\{\}\s][^\{\};]*?(?=\s*\{)/,string:/("|')(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1/,property:/(\b|\B)[\w-]+(?=\s*:)/i,important:/\B!important\b/i,"function":/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:]/},Prism.languages.css.atrule.inside.rest=Prism.util.clone(Prism.languages.css),Prism.languages.markup&&(Prism.languages.insertBefore("markup","tag",{style:{pattern:/<style[\w\W]*?>[\w\W]*?<\/style>/i,inside:{tag:{pattern:/<style[\w\W]*?>|<\/style>/i,inside:Prism.languages.markup.tag.inside},rest:Prism.languages.css},alias:"language-css"}}),Prism.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|').*?\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:Prism.languages.markup.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:Prism.languages.css}},alias:"language-css"}},Prism.languages.markup.tag)),Prism.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\w\W]*?\*\//,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0}],string:/("|')(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/i,lookbehind:!0,inside:{punctuation:/(\.|\\)/}},keyword:/\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,"boolean":/\b(true|false)\b/,"function":/[a-z0-9_]+(?=\()/i,number:/\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/},Prism.languages.javascript=Prism.languages.extend("clike",{keyword:/\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/,number:/\b-?(0x[\dA-Fa-f]+|0b[01]+|0o[0-7]+|\d*\.?\d+([Ee][+-]?\d+)?|NaN|Infinity)\b/,"function":/[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\()/i}),Prism.languages.insertBefore("javascript","keyword",{regex:{pattern:/(^|[^/])\/(?!\/)(\[.+?]|\\.|[^/\\\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/,lookbehind:!0}}),Prism.languages.insertBefore("javascript","class-name",{"template-string":{pattern:/`(?:\\`|\\?[^`])*`/,inside:{interpolation:{pattern:/\$\{[^}]+\}/,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:Prism.languages.javascript}},string:/[\s\S]+/}}}),Prism.languages.markup&&Prism.languages.insertBefore("markup","tag",{script:{pattern:/<script[\w\W]*?>[\w\W]*?<\/script>/i,inside:{tag:{pattern:/<script[\w\W]*?>|<\/script>/i,inside:Prism.languages.markup.tag.inside},rest:Prism.languages.javascript},alias:"language-javascript"}}),Prism.languages.js=Prism.languages.javascript;
!function(s,i,t,e,o){"use strict";s.progressbar=function(t){return t=i.isNumber(t)?{value:t}:t,new s.svelto.progressbar(t)},s.factory("svelto.progressbar",{templates:{base:'<div class="progressbar {%=(o.striped ? "striped" : "")%} {%=o.colors.off%} {%=o.size%} {%=o.css%}"><div class="progressbar-highlight {%=o.colors.on%}">{% if ( o.labeled ) { %}<div class="progressbar-label"></div>{% } %}</div></div>'},options:{value:0,colors:{on:"",off:""},striped:"",labeled:"",decimals:0,size:"",css:"",selectors:{highlight:".progressbar-highlight",label:".progressbar-label"},callbacks:{change:i.noop,empty:i.noop,full:i.noop}},_variables:function(){this.$progressbar=this.$element,this.$highlight=this.$progressbar.find(this.options.selectors.highlight),this.$label=this.$progressbar.find(this.options.selectors.label)},_init:function(){this.options.value=this._sanitizeValue(this.options.value),this._updateWidth(),this._updateLabel()},_sanitizeValue:function(s){var t=Number(s);return i.clamp(0,i.isNaN(t)?0:t,100)},_roundValue:function(s){return s.toFixed(this.options.decimals)},_updateWidth:function(){this.$highlight.css("min-width",this.options.value+"%")},_updateLabel:function(){this.$label.html(this._roundValue(this.options.value)+"%")},_update:function(){this._updateWidth(),this._updateLabel()},get:function(){return this.options.value},set:function(s){if(s=Number(s),!i.isNaN(s)&&(s=this._sanitizeValue(s),s!==this.options.value)){var t={previous:this.options.value,value:s};this.options.value=s,this._update(),this._trigger("change",t),0===this.options.value?this._trigger("empty",t):100===this.options.value&&this._trigger("full",t)}}}),s(function(){s(".progressbar").each(function(){var i=s(this);i.progressbar({value:i.data("value"),decimals:i.data("decimals ")})})})}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Radio v0.2.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* RADIO */

  $.factory ( 'svelto.radio', {

    /* OPTIONS */

    options: {
      callbacks: {
        change: _.noop,
        check: _.noop,
        uncheck: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$radio = this.$element;
      this.$input = this.$radio.find ( 'input' );

      this.name = this.$input.attr ( 'name' );

      this.$container = this.$radio.parents ( 'form' ).first ();

      if ( this.$container.length === 0 ) {

        this.$container = $document;

      }

      this.$otherRadios = this.$container.find ( this.name ? 'input[type="radio"][name="' + this.name + '"]' : 'input[type="radio"]' ).parent ( '.radio' ).not ( this.$radio );

    },

    _init: function () { //FIXME: is it necessary to include it? Maybe we should fix mistakes with the markup...

      var isChecked = this. get (),
          hasClass = this.$radio.hasClass ( 'checked' );

      if ( isChecked !== hasClass ) {

        this.$radio.toggleClass ( 'checked', isChecked );

      }

    },

    _events: function () {

      /* CHANGE */

      this._on ( true, this.$input, 'change', this.__change );

      /* CLICK */

      this._on ( 'click', this.check );

    },

    /* CHANGE */

    __change: function () {

      var isChecked = this.get ();

      if ( isChecked ) {

        this.$otherRadios.removeClass ( 'checked' );

      }

      this.$radio.toggleClass ( 'checked', isChecked );

      this._trigger ( 'change', { checked: isChecked } );
      this._trigger ( isChecked ? 'check' : 'uncheck' );

    },

    /* PUBLIC */

    get: function () {

      return this.$input.prop ( 'checked' );

    },

    check: function () {

      var isChecked = this.get ();

      if ( !isChecked ) {

        this.$input.prop ( 'checked', true ).trigger ( 'change' );

        this._trigger ( 'change', { checked: true } );
        this._trigger ( 'check' );

      }

    }

  });

  /* READY */

  $(function () {

    $('.radio').radio ();

  });

}( jQuery, _, window, document ));

!function(e,o,i,n,t){"use strict";var s={delay:{show:350,hide:400},show:function(i,n){var t=e('<div class="ripple-circle"></div>').appendTo(n),u=n.offset(),d=e.eventXY(i),c=o.now();t.css({top:d.Y-u.top,left:d.X-u.left}).addClass("ripple-circle-show"),n.on("mouseup mouseleave",function(){s.hide(t,c)})},hide:function(e,i){var n=Math.max(0,s.delay.show+i-o.now());setTimeout(function(){e.addClass("ripple-circle-hide"),setTimeout(function(){e.remove()},s.delay.hide)},n)}};e(function(){$body.on("mousedown",".ripple",function(o){o.button!==e.ui.mouseButton.RIGHT&&s.show(o,e(this))})})}(jQuery,_,window,document);
!function(t,i,o,e,s){"use strict";t.factory("svelto.select",{templates:{base:'<div id="dropdown-{%=o.id%}" class="dropdown select-dropdown attached"><div class="container"><div class="container-content"><div class="multiple vertical stretched joined">{% for ( var i = 0, l = o.options.length; i < l; i++ ) { %}{% include ( "svelto.select." + ( o.options[i].value ? "option" : "optgroup" ), o.options[i] ); %}{% } %}</div></div></div></div>',optgroup:'<div class="divider-wrp block"><div class="divider">{%=o.prop%}</div></div>',option:'<div class="label-wrp button-wrp" data-value="{%=o.prop%}"><div class="label actionable sharp"><div class="label-center">{%=o.value%}</div></div></div>'},options:{callbacks:{open:i.noop,close:i.noop,change:i.noop}},_variables:function(){this.$trigger=this.$element,this.$select=this.$trigger.find("select"),this.$options=this.$select.find("option"),this.$select_label=this.$trigger.find(".select-label"),this.$valueholder=this.$trigger.find(".valueholder"),this.id=this.$trigger.data("select"),0===this.$valueholder.length&&(this.$valueholder=this.$select_label),this.select_options=[],this.$dropdown=!1,this.$dropdown_container=!1,this.$buttons=!1},_init:function(){this._update_valueholder(),t.browser.is.touchDevice||(this.$select.addClass("hidden"),this._init_select_options(),this._init_dropdown())},_events:function(){this._on(this.$select,"change",function(){this.update(),this._trigger("change")}),t.browser.is.touchDevice||this._on(this.$buttons,"click",this._handler_button_click)},_handler_button_click:function(i,o){this.$select.val(t(o).data("value")).trigger("change")},_init_select_options:function(){for(var t,i,o=0,e=this.$options.length;e>o;o++){var s=this.$options.eq(o),n=s.parent();n.is("optgroup")&&(i=n.attr("label"),i!==t&&(t=i,this.select_options.push({prop:i}))),this.select_options.push({value:s.html(),prop:s.attr("value")})}},_init_dropdown:function(){var i=this._tmpl("base",{id:this.id,options:this.select_options});$body.append(i),this.$dropdown=t("#dropdown-"+this.id),this.$dropdown_container=this.$dropdown.find(".container"),this.$buttons=this.$dropdown.find(".button-wrp"),this.$trigger.addClass("dropdown-trigger").attr("data-dropdown","dropdown-"+this.id);var o=this;this.$dropdown.dropdown({callbacks:{open:function(){o._set_dropdown_width.bind(o)(),o._trigger("open")},close:o.options.callbacks.close}}),this._update_dropdown()},_update_valueholder:function(){var t=this.$options.filter('[value="'+this.$select.val()+'"]');this.$valueholder.html(t.html())},_update_dropdown:function(){this.$buttons.removeClass("active"),this.$buttons.filter('[data-value="'+this.$select.val()+'"]').addClass("active")},_set_dropdown_width:function(){this.$dropdown_container.css("min-width",this.$trigger.width())},select:function(t){this.$buttons.filter('[data-value="'+t+'"]').click()},update:function(){t.browser.is.touchDevice||this._update_dropdown(),this._update_valueholder()}}),t(function(){t(".select-trigger").select()})}(jQuery,_,window,document);
!function(e,s,t,o,i){"use strict";var r=function(){o.selection?o.selection.empty():t.getSelection&&t.getSelection().removeAllRanges()};e.factory("svelto.selectable",{options:{selector:"tbody tr:not(.empty)",selected_class:"selected",callbacks:{select:s.noop}},_variables:function(){this.$rows=this._get_rows(),this.$start_row=!1,this.$end_row=!1},_init:function(){this._reset_prevs()},_events:function(){this._on("mouseenter",this._handler_keys_in),this._on("mouseleave",this._handler_keys_out),this._on("mousedown",this.options.selector,this._handler_mousedown),this._on("change sort",this._handler_change),this._on("mousedown mouseup",this._handler_clear_selection)},_handler_keys_in:function(){this._on($document,"keydown",this._handler_keys_keydown)},_handler_keys_out:function(){this._off($document,"keydown",this._handler_keys_keydown)},_handler_keys_keydown:function(s){(e.browser.is.mac&&s.metaKey||!e.browser.is.mac&&s.ctrlKey)&&(65===s.keyCode?(s.preventDefault(),this._reset_prevs(),this.$rows.toggleClass(this.options.selected_class,!s.shiftKey),this._trigger("select")):73===s.keyCode&&(s.preventDefault(),this._reset_prevs(),this.$rows.toggleClass(this.options.selected_class),this._trigger("select")))},_handler_mousedown:function(s){0===s.button&&(this.$start_row=e(s.currentTarget),this._on($document,"mousemove",this._handler_mousemove),this._on("mouseup",this.options.selector,this._handler_mouseup))},_handler_mousemove:function(s){e.browser.is.mac&&!s.metaKey||!e.browser.is.mac&&!s.ctrlKey||(this._off($document,"mousemove",this._handler_mousemove),this._off("mouseup",this._handler_mouseup),this._reset_prevs(),this.$prev_row=this.$start_row,this.$start_row.toggleClass(this.options.selected_class),$html.addClass("dragging"),this._on("mouseenter",this.options.selector,this._handler_drag_mouseenter),this._on($document,"mouseup",this._handler_drag_mouseup),this._trigger("select"))},_handler_drag_mouseenter:function(s){this.$end_row=e(s.currentTarget);var t=this.$rows.index(this.$start_row),o=this.$rows.index(this.$end_row),i=Math.min(t,o),r=Math.max(t,o);i===t&&(i+=1,r+=1);var _=this.$rows.slice(i,r);this.$prev_dragged?(_.not(this.$prev_dragged).toggleClass(this.options.selected_class),this.$prev_dragged.not(_).toggleClass(this.options.selected_class)):_.toggleClass(this.options.selected_class),this.$prev_dragged=_,this._trigger("select")},_handler_drag_mouseup:function(){this._off("mouseenter",this._handler_drag_mouseenter),this._off($document,"mouseup",this._handler_drag_mouseup),this.$prev_dragged=!1,$html.removeClass("dragging")},_handler_mouseup:function(s){if(this._off($document,"mousemove",this._handler_mousemove),this._off("mouseup",this._handler_mouseup),s.shiftKey){var t=this.$rows.index(this.$prev_row),o=this.$prev_row?this.$rows.index(this.$start_row):0,i=Math.min(t,o),r=Math.max(t,o);i===t&&(i+=1,r+=1);var _=this.$rows.slice(i,r);this.$prev_shifted?(_.not(this.$prev_shifted).toggleClass(this.options.selected_class),this.$prev_shifted.not(_).toggleClass(this.options.selected_class)):_.toggleClass(this.options.selected_class),this.$prev_shifted=_}else e.browser.is.mac&&s.metaKey||!e.browser.is.mac&&s.ctrlKey||e.browser.is.touchDevice?(this.$start_row.toggleClass(this.options.selected_class),this._reset_prevs(),this.$prev_row=this.$start_row):(this.$rows.not(this.$start_row).removeClass(this.options.selected_class),this.$start_row.toggleClass(this.options.selected_class),this._reset_prevs(),this.$prev_row=this.$start_row);this._trigger("select")},_handler_change:function(){this.$rows=this._get_rows()},_handler_clear_selection:function(){e.reflow(),r()},_reset_prevs:function(){this.$prev_row=!1,this.$prev_shifted=!1,this.$prev_dragged=!1},_get_rows:function(){return this.$element.find(this.options.selector)}}),e(function(){e("table.selectable").selectable()})}(jQuery,_,window,document);
!function(i,t,s,e,n){"use strict";i.factory("svelto.slider",{options:{min:0,max:100,value:0,step:1,decimals:0,callbacks:{increased:t.noop,decreased:t.noop}},_variables:function(){this.$slider=this.$element,this.$min=this.$slider.find(".slider-min"),this.$max=this.$slider.find(".slider-max"),this.$input=this.$slider.find("input"),this.$bar_wrp=this.$slider.find(".slider-bar-wrp"),this.$unhighlighted=this.$slider.find(".slider-unhighlighted"),this.$highlighted=this.$slider.find(".slider-highlighted"),this.$handler_wrp=this.$slider.find(".slider-handler-wrp"),this.$label=this.$handler_wrp.find(".slider-label"),this.steps_nr=(this.options.max-this.options.min)/this.options.step,this._update_variables()},_events:function(){this._on(!0,this.$input,"change",this._handler_change),this._on($window,"resize",this._handler_resize),this._on(this.$slider,"mouseenter",this._handler_arrows_in),this._on(this.$slider,"mouseleave",this._handler_arrows_out),this._on(this.$min,"click",this.decrease),this._on(this.$max,"click",this.increase),this.$handler_wrp.draggable({draggable:this._draggable.bind(this),axis:"x",constrainer:{$element:this.$bar_wrp,constrain_center:!0,axis:"x"},modifiers:{x:this.modifier_x.bind(this)},callbacks:{beforestart:this._handler_drag_beforestart.bind(this),move:this._handler_drag_move.bind(this),end:this._handler_drag_end.bind(this)}}),this._on(this.$unhighlighted,"click",this._handler_click)},_round_value:function(i){return Number(Number(i).toFixed(this.options.decimals))},_update_positions:function(){var i=(this.options.value-this.options.min)/this.options.step*100/this.steps_nr;this.$handler_wrp.css({left:i+"%",transform:"none"}),this.$highlighted.css({right:100-i+"%",transform:"none"})},_update_label:function(i){this.$label.html(t.isUndefined(i)?this.options.value:i)},_update_variables:function(){this.unhighlighted_width=this.$unhighlighted.width(),this.unhighlighted_offset=this.$unhighlighted.offset(),this.step_width=this.unhighlighted_width/this.steps_nr},_handler_change:function(){this.set(this.$input.val())},_handler_resize:function(){this._update_variables()},_handler_arrows_in:function(){this._on($document,"keydown",this._handler_arrows_keydown)},_handler_arrows_out:function(){this._off($document,"keydown",this._handler_arrows_keydown)},_handler_arrows_keydown:function(t){t.keyCode===i.ui.keyCode.LEFT||t.keyCode===i.ui.keyCode.DOWN?this.decrease():(t.keyCode===i.ui.keyCode.RIGHT||t.keyCode===i.ui.keyCode.UP)&&this.increase()},_draggable:function(){return!this.options.disabled},modifier_x:function(i){var t=i%this.step_width;return t>=this.step_width/2?i-t+this.step_width:i-t},_handler_drag_beforestart:function(){var i=parseFloat(this.$handler_wrp.css("left"),10);this.$handler_wrp.css({left:0,transform:"translate3d("+i+"px,0,0)"}),this.$highlighted.css({right:"100%",transform:"translate3d("+i+"px,0,0)"})},_handler_drag_move:function(i){this.$highlighted.css("transform","translate3d("+i.modifiedXY.X+"px,0,0)"),this._update_label(this._round_value(this.options.min+i.modifiedXY.X/this.step_width*this.options.step))},_handler_drag_end:function(i){var t=this.$handler_wrp.css("transform"),s="none"!==t?t.match(/[0-9., -]+/)[0].split(", "):[0,0,0,0,0,0],e=this.set(this.options.min+parseFloat(s[4],10)/this.step_width*this.options.step);e||this._update_positions()},_handler_click:function(t){if(t.target!==this.$handler_wrp.get(0)){var s=i.eventXY(t),e=this.modifier_x(s.X-this.unhighlighted_offset.left);this.set(this.options.min+e/this.step_width*this.options.step)}},get:function(){return this.options.value},set:function(i){if(i=t.clamp(this.options.min,this._round_value(i),this.options.max),i!==this.options.value){var s=i>this.options.value?"increased":"decreased";return this.options.value=i,this._update_positions(),this._update_label(),this.$input.val(i).trigger("change"),this._trigger(s),!0}return!1},increase:function(){return this.set(this.options.value+this.options.step)},decrease:function(){return this.set(this.options.value-this.options.step)}}),i(function(){i(".slider").each(function(){var t=i(this),s={min:Number(t.find(".slider-min").data("min")||0),max:Number(t.find(".slider-max").data("max")||100),value:Number(t.find("input").val()||0),step:Number(t.data("step")||1),decimals:Number(t.data("decimals")||0)};t.slider(s)})})}(jQuery,_,window,document);
!function(t,s,e,i,r){"use strict";t.factory("svelto.sortable",{options:{sorters:{"int":function(t,s){return parseInt(t,10)-parseInt(s,10)},"float":function(t,s){return parseFloat(t)-parseFloat(s)},string:function(t,s){return t=t.toLocaleLowerCase(),s=s.toLocaleLowerCase(),t.localeCompare(s)}},callbacks:{sort:s.noop}},_variables:function(){this.$table=this.$element,this.$headers=this.$table.find("thead th"),this.$sortables=this.$headers.filter("[data-sort]"),this.$tbody=this.$table.find("tbody"),this.table=this.element,this.tbody=this.$tbody.get(0),this.sort_datas={},this.current_index=!1,this.current_direction=!1},_init:function(){var t=this.$headers.filter(".asc, .desc").first();t.length&&this.sort(this.$headers.index(t),t.hasClass("asc")?"asc":"desc")},_events:function(){this._on(!0,"change",this._handler_change),this._on(this.$sortables,"click",this._handler_click)},_handler_change:function(){this.current_index&&(this.sort_datas={},this.sort(this.current_index,this.current_direction))},_handler_click:function(t){var s=this.$headers.index(t.target),e=this.current_index===s&&"asc"===this.current_direction?"desc":"asc";this.sort(s,e)},sort:function(t,e){var i=this.$headers.eq(t);if(i.length){var r=i.data("sort");if(r){var n=this.options.sorters[r];if(n){if(e=e&&"desc"===e.toLowerCase()?"desc":"asc",this.current_index!==!1&&this.$sortables.eq(this.current_index).removeClass(this.current_direction),i.addClass(e),s.isUndefined(this.sort_datas[t])){var a=this.$tbody.find("tr:not(.empty)");this.sort_datas[t]=Array(a.length);for(var o=0,h=a.length;h>o;o++){var d=a.eq(o).find("td").eq(t),c=d.data("sort-value")||d.text();this.sort_datas[t][o]=[a.get(o),c]}}this.sort_datas[t].sort(function(t,s){return n(t[1],s[1])}),"desc"===e&&this.sort_datas[t].reverse(),this.table.removeChild(this.tbody);for(var o=0,h=this.sort_datas[t].length;h>o;o++)this.tbody.appendChild(this.sort_datas[t][o][0]);this.table.appendChild(this.tbody),this.current_index=t,this.current_direction=e,this._trigger("sort",{index:this.current_index,direction:this.current_direction})}}}}}),t(function(){t("table.sortable").sortable()})}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Stepper v0.2.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* STEPPER */

  $.factory ( 'svelto.stepper', {

    /* OPTIONS */

    options: {
      min: 0,
      max: 100,
      value: 0,
      step: 1,
      selectors: {
        decreaser: '.stepper-decreaser',
        input: 'input',
        increaser: '.stepper-increaser'
      },
      callbacks: {
        change: _.noop,
        increase: _.noop,
        decrease: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$stepper = this.$element;
      this.$decreaser = this.$stepper.find ( this.options.selectors.decreaser );
      this.$input = this.$stepper.find ( this.options.selectors.input );
      this.$increaser = this.$stepper.find ( this.options.selectors.increaser );

      this.options.value = this._sanitizeValue ( this.options.value );

    },

    _init: function () {

      this._updateButtons ();

    },

    _events: function () {

      /* INPUT / CHANGE */

      this._on ( true, this.$input, 'input change', this.__inputChange );

      /* ARROWS */

      this._on ( 'mouseenter', this.__arrowsIn );
      this._on ( 'mouseleave', this.__arrowsOut );

      /* INCREASE */

      this._on ( this.$decreaser, Pointer.tap, this.decrease );

      /* DECREASE */

      this._on ( this.$increaser, Pointer.tap, this.increase );

    },

    /* PRIVATE */

    _sanitizeValue: function ( value ) {

      var nr = Number ( value );

      value = ( _.isNaN ( nr ) ? 0 : nr );

      var remaining = ( value % this.options.step );

      value = value - remaining + ( remaining >= this.options.step / 2 ? this.options.step : 0 );

      return _.clamp ( this.options.min, value, this.options.max );

    },

    /* UPDATE */

    _updateInput: function () {

      this.$input.val ( this.options.value ).trigger ( 'change' );

    },

    _updateButtons: function ( previous ) {

      var isMin = ( this.options.value === this.options.min ),
          isMax = ( this.options.value === this.options.max );

      if ( previous === this.options.min || isMin ) {

        this.$decreaser.toggleClass ( 'disabled', isMin );

      } else if ( previous === this.options.max || isMax ) {

        this.$increaser.toggleClass ( 'disabled', isMax );

      }

    },

    _update: function ( previous ) {

      this._updateInput ();
      this._updateButtons ( previous );

    },

    /* CHANGE */

    __inputChange: function () {

      this.set ( this.$input.val () );

    },

    /* LEFT / RIGHT ARROWS */

    __arrowsIn: function ( event ) {

      this._on ( $document, 'keydown', this.__keydown );

    },

    __arrowsOut: function ( event ) {

      this._off ( $document, 'keydown', this.__keydown );

    },

    __keydown: function ( event ) {

      switch ( event.keyCode ) {

        case $.ui.keyCode.UP:
          this.increase ();
          break;

        case $.ui.keyCode.DOWN:
          this.decrease ();
          break;

      }

    },

    /* PUBLIC */

    get: function () {

      return this.options.value;

    },

    set: function ( value ) {

      value = Number ( value );

      if ( !_.isNaN ( value ) ) {

        value = this._sanitizeValue ( value );

        if ( value !== this.options.value ) {

          var data = {
            previous: this.options.value,
            value: value
          };

          this.options.value = value;

          this._update ( data.previous );

          this._trigger ( 'change', data );

          this._trigger ( ( data.previous < data.value ) ? 'increase' : 'decrease', data );

          return;

        }

      }

      /* RESETTING IF WE ALTERED THE INPUT VALUE */

      if ( this.$input.val () !== String ( this.options.value ) ) {

        this._updateInput ();

      }

    },

    increase: function () {

      this.set ( this.options.value + this.options.step );

    },

    decrease: function () {

      this.set ( this.options.value - this.options.step );

    }

  });

  /* READY */

  $(function () {

    $('.stepper').each ( function () {

      var $stepper = $(this);

      $stepper.stepper ({
        min: Number($stepper.data ( 'min' ) || 0),
        max: Number($stepper.data ( 'max' ) || 100),
        value: Number($stepper.find ( '.stepper-input' ).val () || 0),
        step: Number($stepper.data ( 'step' ) || 1)
      });

    });

  });

}( jQuery, _, window, document ));

!function(t,e,i,h){"use strict";t.factory("svelto.switch",{options:{colors:{on:"secondary",off:"gray"},callbacks:{checked:_.noop,unchecked:_.noop}},_variables:function(){this.$switch=this.$element,this.$input=this.$switch.find("input"),this.$bar_wrp=this.$switch.find(".switch-bar-wrp"),this.$bar=this.$switch.find(".switch-bar"),this.$handler=this.$switch.find(".switch-handler"),this.$icon=this.$handler.find(".icon"),this.checked=this.$input.prop("checked"),this.dragging=!1},_init:function(){this._set_check(this.checked,!0)},_events:function(){this._on(!0,this.$input,"change",this._handler_change),this._on("mouseenter",this._handler_keys_in),this._on("mouseleave",this._handler_keys_out),this._on(this.$bar,"click",this._handler_click),this.$handler.draggable({axis:"x",constrainer:{$element:this.$bar_wrp},callbacks:{end:this._handler_drag_end.bind(this)}})},_handler_change:function(){var t=this.$input.prop("checked");this.checked!==t&&(this.checked=t,this._set_check(this.checked,!0))},_handler_keys_in:function(){this._on($document,"keydown",this._handler_keys_keydown)},_handler_keys_out:function(){this._off($document,"keydown",this._handler_keys_keydown)},_handler_keys_keydown:function(e){e.keyCode===t.ui.keyCode.LEFT?this.uncheck():e.keyCode===t.ui.keyCode.RIGHT?this.check():e.keyCode===t.ui.keyCode.SPACE&&this.toggle()},_handler_click:function(){return this.dragging?void(this.dragging=!1):void this.toggle()},_handler_drag_end:function(t){if(t.dragged){this.dragging=!0;var e=this.$handler.offset().left-this.$bar_wrp.offset().left+this.$handler.width()/2>=this.$bar_wrp.width()/2;this.checked=e?!0:!1,this._set_check(this.checked,!0)}},_set_check:function(t,e){(t!==this.$input.prop("checked")||e)&&(this.$switch.toggleClass("checked",t),this.$handler.css("transform","translate3d("+(t?"1.73333em":"0")+",0,0)"),this.$bar.toggleClass(this.options.colors.on,t),this.$handler.toggleClass(this.options.colors.on,t),this.$bar.toggleClass(this.options.colors.off,!t),this.$handler.toggleClass(this.options.colors.off,!t),this.$input.prop("checked",t).trigger("change"),this._trigger(t?"checked":"unchecked"))},check:function(){this._set_check(!0)},uncheck:function(){this._set_check(!1)},toggle:function(){this.checked=!this.checked,this._set_check(this.checked)}}),t(function(){t(".switch").each(function(){var e=t(this),i={colors:{on:e.data("color-on")||"secondary",off:e.data("color-off")||"gray"}};e["switch"](i)})})}(jQuery,_,window,document);
!function(t,e,i,n,r){"use strict";t.factory("svelto.tableHelper",{options:{callbacks:{add:e.noop,update:e.noop,remove:e.noop,clear:e.noop}},_variables:function(){this.$table=this.$element,this.$thead=this.$table.find("thead"),this.$tfoot=this.$table.find("tfoot"),this.$tbody=this.$table.find("tbody"),this.$headers=this.$thead.find("th"),this.$empty_row=this.$tbody.find("tr.table-row-empty"),this.columns_nr=this.$headers.length},_init:function(){this._check_empty()},_check_empty:function(){this.$empty_row.toggleClass("hidden",this.$tbody.find("tr:not(.table-row-empty)").length>0)},_get_row_id:function(t){return"rid_"+this.uuid+"_"+t},add:function(i){var n=e.tail(arguments);if(n.length){var r=this.$tbody.find("td.fillable");if(r.length){var h=e.slice(n,0,r.length);n=e.slice(n,h.length-1,n.length);for(var s=0,o=h.length;o>s;s++)r.eq(s).html(h[s]).removeClass("fillable")}if(i&&t("."+this._get_row_id(i)).length)return t.noty("A table cannot contain 2 rows with the same ID"),this;for(var a=e.chunk(n,this.columns_nr),l=0,d=a.length;d>l;l++){for(var g=a[l],c="<tr "+(i?'class="'+this._get_row_id(i)+'"':"")+">",s=0,o=g.length;o>s;s++)c+="<td>"+(g[s]||"")+"</td>";for(var s=g.length,o=this.columns_nr;o>s;s++)c+='<td class="fillable"></td>';c+="</tr>",this.$tbody.append(c)}this._check_empty(),this.$table.trigger("change"),this._trigger("add")}return this},update:function(i){var n=e.tail(arguments),r=t("."+this._get_row_id(i));if(n.length&&r.length){var h=r.find("td");e.each(n,function(t,i){e.isString(t)&&h.eq(i).html(t)}),this.$table.trigger("change"),this._trigger("update")}return this},remove:function(e){var i=t("."+this._get_row_id(e));return i.length&&(i.remove(),this._check_empty(),this.$table.trigger("change"),this._trigger("remove")),this},clear:function(){var t=this.$tbody.find("tr:not(.table-row-empty)");return t.length&&(t.remove(),this._check_empty(),this.$table.trigger("change"),this._trigger("clear")),this}}),t(function(){t("table").tableHelper()})}(jQuery,_,window,document);

/* =========================================================================
 * Svelto - Tabs v0.2.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * ========================================================================= */

//TODO: Add again the indicator

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* TABS */

  $.factory ( 'svelto.tabs', {

    /* OPTIONS */

    options: {
      highlight: true,
      classes: {
        vertical: 'vertical',
        active: {
          trigger: 'active',
          container: 'active'
        }
      },
      selectors: {
        triggers: '.tabs-triggers > *',
        containers: '.tabs-containers > *'
      },
      callbacks: {
        set: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$tabs = this.$element;
      this.$triggers = this.$tabs.find ( this.options.selectors.triggers );
      this.$containers = this.$tabs.find ( this.options.selectors.containers );

      this.isVertical = this.$tabs.hasClass ( this.options.classes.vertical );

      this.index = -1;

    },

    _init: function () {

      var $activeTrigger = this.$triggers.filter ( '.' + this.options.classes.active.trigger ).first ();

      $activeTrigger = ( $activeTrigger.length > 0 ) ? $activeTrigger : this.$triggers.first ();

      var newIndex = this.$triggers.index ( $activeTrigger );

      this.set ( newIndex );

    },

    _events: function () {

      /* TRIGGERS */

      this._on ( this.$triggers, Pointer.tap, this.__triggerClick );

    },

    /* PRIVATE */

    __triggerClick: function ( event, node ) {

      var newIndex = this.$triggers.index ( $(node) );

      this.set ( newIndex );

    },

    /* PUBLIC */

    get: function () {

      return this.index;

    },

    set: function ( index ) {

      if ( this.index !== index ) {

        /* PREVIOUS */

        var $prevTrigger = this.$triggers.eq ( this.index ),
            $prevContainer = this.$containers.eq ( this.index );

        $prevTrigger.removeClass ( this.options.classes.active.trigger );
        $prevContainer.removeClass ( this.options.classes.active.container );

        if ( this.options.highlight ) {

          $prevTrigger.removeClass ( 'highlight highlight-bottom highlight-right' );

        }

        /* NEW */

        this.index = index;

        var $trigger = this.$triggers.eq ( this.index ),
            $container = this.$containers.eq ( this.index );

        $trigger.addClass ( this.options.classes.active.trigger );
        $container.addClass ( this.options.classes.active.container );

        if ( this.options.highlight ) {

          $trigger.addClass ( 'highlight' + ( this.isVertical ? ' highlight-right' : ' highlight-bottom' ) );

        }

        /* CALLBACKS */

        this._trigger ( 'set', {
          index: this.index
        });

      }

    }

  });

  /* READY */

  $(function () {

    $('.tabs').tabs ();

  });

}( jQuery, _, window, document ));


/* =========================================================================
 * Svelto - Tagbox v0.3.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires ../widget/factory.js
 * @requires ../noty/noty.js
 * ========================================================================= */

//FIXME: Do we handle the insertion of characters like `&` or `'` propertly?
//FIXME: Should we forbid characters or just escape them?
//FIXME: If we disable the escaping, does it break using characters like `"`? `It does, at leas when calling `remove`
//FIXME: Partial's text cursor is not visible whan it's empty

;(function ( $, _, window, document, undefined ) {

  'use strict';

  /* TAGBOX */

  $.factory ( 'svelto.tagbox', {

    /* TEMPLATES */

    templates: {
      tag: '<div class="label-tag tagbox-tag" data-tag-value="{%=o.value%}">' +
              '<div class="label {%=o.color%} {%=o.size%} {%=o.css%}">' +
                '<span>' +
                  '{%=o.value%}' +
                '</span>' +
                '<div class="sub right gray actionable tagbox-tag-remover">' +
                  '<i class="icon">close</i>' +
                '</div>' +
              '</div>' +
            '</div>'
    },

    /* OPTIONS */

    options: {
      init: '',
      tags: [],
      tag: {
        minLength: 3,
        color: '',
        size: '',
        css: 'outlined'
      },
      characters: {
        forbidden: [ '<', '>', ';', '`' ],
        separator: ',', //INFO: It will also become kind of a forbidden character, used for insertion
        inserters: [$.ui.keyCode.ENTER, $.ui.keyCode.TAB] //INFO: They are keyCodes
      },
      sort: false, //INFO: The tags will be outputted in alphanumeric-sort order
      escape: true, //INFO: Escape potential XSS characters
      deburr: false, //INFO: Replace non basic-latin characters
      selectors: {
        input: 'input.hidden',
        partial: 'input.tagbox-partial, .tagbox-partial input',
        tags: '.tagbox-tags',
        tag: '.tagbox-tag',
        tagLabel: 'span',
        tagRemover: '.tagbox-tag-remover'
      },
      callbacks: {
        change: _.noop,
        add: _.noop,
        remove: _.noop,
        empty: _.noop
      }
    },

    /* SPECIAL */

    _variables: function () {

      this.$tagbox = this.$element;
      this.$tags = this.$tagbox.find ( this.options.selectors.tags );
      this.$input = this.$tagbox.find ( this.options.selectors.input );
      this.$partial = this.$tagbox.find ( this.options.selectors.partial );

    },

    _init: function ( suppressTriggers ) {

      this.add ( this.options.init, suppressTriggers );

    },

    _events: function () {

      /* PARTIAL */

      this._on ( this.$partial, 'keypress keydown', this.__keypressKeydown ); //INFO: `keypress` is for printable characters, `keydown` for the others

      this._on ( this.$partial, 'paste', this.__paste );

      /* CLICK ON EMPTY */

      this._on ( Pointer.tap, this.__clickOnEmpty );

      /* CLICK ON TAG REMOVER */

      this._on ( Pointer.tap, this.options.selectors.tagRemover, this.__clickOnTagRemover );

    },

    /* PRIVATE */

    _sanitizeTag: function ( value ) {

      value = _.trim ( value );

      if ( this.options.escape ) {

        value = _.escape ( value );

      }

      if ( this.options.deburr ) {

        value = _.deburr ( value );

      }

      return value;

    },

    _getTagHtml: function ( value ) {

      return this._tmpl ( 'tag', _.merge ( { value: value }, this.options.tag ) );

    },

    _clearPartial: function () {

      this.$partial.val ( '' ).trigger ( 'change' );

    },

    /* UPDATE */

    _updateInput: function () {

      this.$input.val ( this.options.tags.join ( this.options.characters.separator ) ).trigger ( 'change' );

    },

    /* TAG */

    _add: function ( value ) {

      var valueTrimmed = _.trim ( value ),
          value = this._sanitizeTag ( value );

      if ( valueTrimmed.length < this.options.tag.minLength ) {

        if ( valueTrimmed.length > 0 ) { //INFO: So it won't be triggered when the user presses enter and the $partial is empty

          $.noty ( '`' + value + '` is shorter than ' + this.options.tag.minLength + ' characters' );

        }

      } else if ( _.contains ( this.options.tags, value ) ) {

        $.noty ( '`' + value + '` is a duplicate' );

      } else {

        this.options.tags.push ( value );

        if ( this.options.sort ) {

          this.options.tags.sort ();

        }

        var tagHtml = this._getTagHtml ( value );

        if ( this.options.tags.length === 1 ) {

          this.$tags.prepend ( tagHtml );

        } else if ( !this.options.sort ) {

          this.$tagbox.find ( this.options.selectors.tag ).last ().after ( tagHtml );

        } else {

          var index = this.options.tags.indexOf ( value );

          if ( index === 0 ) {

            this.$tagbox.find ( this.options.selectors.tag ).first ().before ( tagHtml );

          } else {

            this.$tagbox.find ( this.options.selectors.tag ).eq ( index - 1 ).after ( tagHtml );

          }

        }

        return true;

      }

      return false;

    },

    _remove: function ( $tag, tag ) {

      $tag.remove ();

      _.pull ( this.options.tags, tag );

    },

    /* KEYPRESS / KEYDOWN */

    __keypressKeydown: function ( event ) {

      var value = this.$partial.val ();

      if ( _.contains ( this.options.characters.inserters, event.keyCode ) || event.keyCode === this.options.characters.separator.charCodeAt ( 0 ) ) {

        var added = this.add ( value );

        if ( added ) {

          this._clearPartial ();

        }

        event.preventDefault ();

      } else if ( event.keyCode === $.ui.keyCode.BACKSPACE ) {

        if ( value.length === 0 && this.options.tags.length > 0 ) {

          var $tag = this.$tagbox.find ( this.options.selectors.tag ).last (),
              edit = !$.hasCtrlOrCmd ( event );

          this.remove ( $tag, edit );

          event.preventDefault ();

        }

      } else if ( _.contains ( this.options.characters.forbidden, String.fromCharCode ( event.keyCode ) ) ) {

        $.noty ( 'The character you entered is forbidden' );

        event.preventDefault ();

      }

    },

    /* PASTE */

    __paste: function ( event ) {

        this.add ( event.originalEvent.clipboardData.getData ( 'text' ) );

        event.preventDefault ();

    },

    /* CLICK ON CLOSE */

    __clickOnTagRemover: function ( event, tagRemover ) {

      var $tag = $(tagRemover).parents ( this.options.selectors.tag );

      this.remove ( $tag );

    },

    /* CLICK ON EMPTY */

    __clickOnEmpty: function ( event ) {

      if ( document.activeElement !== this.$partial[0] && !$(event.target).is ( 'input, ' + this.options.selectors.tagLabel ) ) {

        this.$partial.focus ();

      }

    },

    /* PUBLIC */

    get: function () {

      return _.clone ( this.options.tags );

    },

    add: function ( tag, suppressTriggers ) { //INFO: The tag can be a string containing a single tag, multiple tags separated by `this.options.characters.separator`, or it can be an array (nested or not) of those strings

      if ( _.isArray ( tag ) ) {

        tag = _.flatten ( tag ).join ( this.options.characters.separator );

      }

      var previous = _.clone ( this.options.tag );

      var tags = tag.split ( this.options.characters.separator ),
          adds = _.map ( tags, this._add, this );

      var added = ( _.compact ( adds ).length > 0 );

      if ( added ) {

        this._updateInput ();

        if ( !suppressTriggers ) {

          this._trigger ( 'change', {
            previous: previous,
            tags: _.clone ( this.options.tags )
          })

          var addedTags = _.filter ( tags, function ( tag, index ) {
            return adds[index];
          });

          this._trigger ( 'add', addedTags );

        }

      }

      return added;

    },

    remove: function ( tag, edit, suppressTriggers ) { //INFO: The tag can be a string containing a single tag, multiple tags separated by `this.options.characters.separator`, or it can be an array (nested or not) of those strings. In addition it can also be the jQuery object of that tag.

      if ( tag instanceof $ ) {

        var $tags = [tag],
            tags = [tag.data ( 'tag-value' )];

      } else {

        var $tags = [],
            tags = [];

        if ( _.isArray ( tag ) ) {

          tag = _.flatten ( tag ).join ( this.options.characters.separator );

        }

        tag = tag.split ( this.options.characters.separator );

        for ( var i = 0, l = tag.length; i < l; i++ ) {

          var value = this._sanitizeTag ( tag[i] ),
              $tag = this.$tagbox.find ( this.options.selectors.tag + '[data-tag-value="' + value + '"]' );

          if ( $tag.length === 1 ) {

            $tags.push ( $tag );
            tags.push ( value );

          }

        }

      }

      if ( tags.length > 0 ) {

        var previous = _.clone ( this.options.tags );

        for ( var i = 0, l = tags.length; i < l; i++ ) {

          this._remove ( $tags[i], tags[i] );

        }

        this._updateInput ();

        if ( tags.length === 1 && edit === true ) {

          this.$partial.val ( tags[0] ).trigger ( 'change' );

        }

        if ( !suppressTriggers ) {

          this._trigger ( 'change', {
            previous: previous,
            tags: _.clone ( this.options.tags )
          })

          this._trigger ( 'remove', tags );

          if ( this.options.tags.length === 0 ) {

            this._trigger ( 'empty' );

          }

        }

      }

    },

    clear: function ( suppressTriggers ) {

      if ( this.options.tags.length > 0 ) {

        var data = {
          previous: _.clone ( this.options.tags ),
          tags: []
        };

        this.options.tags = [];

        this.$tagbox.find ( this.options.selectors.tag ).remove ();

        this._clearPartial ();

        this._updateInput ();

        if ( !suppressTriggers ) {

          this._trigger ( 'change', data );

          if ( data.previous.length > 0 ) {

            this._trigger ( 'remove', data.previous );

          }

          this._trigger ( 'empty' );

        }

      }

    },

    reset: function () {

      var previous = _.clone ( this.options.tags );

      this.clear ( true );

      this._init ( true );

      if ( !_.isEqual ( previous, this.options.tags ) ) {

        this._trigger ( 'change', {
          previous: previous,
          tags: _.clone ( this.options.tags )
        });

        var added = _.difference ( this.options.tags, previous );

        if ( added.length > 0 ) {

          this._trigger ( 'add', added );

        }

        var removed = _.difference ( previous, this.options.tags );

        if ( removed.length > 0 ) {

          this._trigger ( 'remove', removed );

        }

        if ( this.options.tags.length === 0 ) {

          this._trigger ( 'empty' );

        }

      }

    }

  });

  /* READY */

  $(function () {

    $('.tagbox').each ( function () {

      var $tagbox = $(this);

      $tagbox.tagbox ({ init: $tagbox.find ( 'input' ).val () });

    });

  });

}( jQuery, _, window, document ));

!function(t,i,e,o,s){"use strict";t.factory("svelto.timeAgo",{options:{timestamp:!1,title:!1,callbacks:{update:i.noop}},_variables:function(){this.$timeAgo_wrp=this.$element,this.options.timestamp=this.$timeAgo_wrp.data(this.options.title?"timestamp-title":"timestamp")},_init:function(){this._update_loop(0)},_update_loop:function(t){this._delay(function(){this._update_loop(this.update().next)},1e3*t)},update:function(){var t=i.timeAgo(this.options.timestamp);return this.options.title?this.$timeAgo_wrp.attr("title",t.str):this.$timeAgo_wrp.html(t.str),this._trigger("update"),t}}),t(function(){t("[data-timestamp]").timeAgo(),t("[data-timestamp-title]").timeAgo({title:!0})})}(jQuery,_,window,document);
!function(i,t,e,s,n){"use strict";i.timer=function(i,t,e){return new r(i,t,e)};var r=function(i,t,e){return this.set(i,t,e)};r.prototype={set:function(i,t,e){return this.init=!0,this.action=i,isNaN(t)||(this.intervalTime=t),e&&!this.isActive&&(this.isActive=!0,this.setTimer()),this},once:function(i){var t=this;return isNaN(i)&&(i=0),setTimeout(function(){t.action()},i),this},play:function(i){return this.isActive||(i?this.setTimer():this.setTimer(this.remaining_time),this.isActive=!0),this},pause:function(){return this.isActive&&(this.isActive=!1,this.remaining_time-=new Date-this.last,this.clearTimer()),this},stop:function(){return this.isActive=!1,this.remaining_time=this.intervalTime,this.clearTimer(),this},toggle:function(i){return this.isActive?this.pause():i?this.play(!0):this.play(),this},reset:function(){return this.isActive=!1,this.play(!0),this},clearTimer:function(){clearTimeout(this.timeoutObject)},setTimer:function(i){var t=this;isNaN(i)&&(i=this.intervalTime),this.remaining_time=i,this.last=new Date,this.clearTimer(),this.timeoutObject=setTimeout(function(){t.go()},i)},go:function(){this.isActive&&(this.action(),this.setTimer())},remaining:function(i){return t.isUndefined(i)?this.remaining_time:(this.remaining_time=i,this)}}}(jQuery,_,window,document);
!function(t,n,r,a,e){"use strict";var i=function(t){var n=t.offset();return{X1:n.left,X2:n.left+t.width(),Y1:n.top,Y2:n.top+t.height()}},o=function(t,n){var r=Math.max(0,Math.min(t.X2,n.X2)-Math.max(t.X1,n.X1)),a=Math.max(0,Math.min(t.Y2,n.Y2)-Math.max(t.Y1,n.Y1));return r*a};t.fn.touching=function(r){var a=n.merge({startIndex:!1,point:!1,binarySearch:!0,$comparer:!1,$not:!1,select:"all"},r),e=a.$not?this.not(a.$not):this;if(a.$comparer){var h=i(a.$comparer),c=[],u=[];switch(e.each(function(){var n=i(t(this)),r=o(h,n);r>0&&(c.push(this),u.push(r))}),a.select){case"all":return t(c);case"most":return t(c[u.indexOf(n.max(u))]);default:return $empty}}if(a.point){var p;return a.binarySearch?(e.btEach(function(){var n=t(this),r=i(n);return a.point.Y>=r.Y1?a.point.Y<=r.Y2?a.point.X>=r.X1?a.point.X<=r.X2?(p=n,!1):1:-1:1:-1},a.startIndex),p||$empty):(e.each(function(){var n=t(this),r=i(n);return a.point.Y>=r.Y1&&a.point.Y<=r.Y2&&a.point.X>=r.X1&&a.point.X<=r.X2?(p=n,!1):void 0}),p||$empty)}}}(jQuery,_,window,document);