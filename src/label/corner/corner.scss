
/* =========================================================================
 * Svelto - Label - Corner
 * =========================================================================
 * Copyright (c) 2015-2016 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @require ../label.scss
 * ========================================================================= */

/* LABEL CORNER */

.label-corner {

  position: absolute;
  z-index: $label-corner-z-index;
  visibility: hidden;
  overflow: hidden;
  pointer-events: none;

  &.top-left {

    top: 0;
    left: 0;
    border-top-left-radius: inherit;

    > * { // Both `.label` and `.button`
      transform: translateX(-($label-corner-padding-x * 2 / 4 + $line-height-em / 8)) translateY(-($label-corner-padding-y * 2 / 4 + $line-height-em / 8 ));
    }

    &:before {
      top: 0;
      left: 0;
      transform: translateX(-( $line-height-em + ( $label-corner-padding-x * 2 ) ) / $SQRT2) translateY(-( $line-height-em + ( $label-corner-padding-y * 2 ) ) / $SQRT2) rotate(45deg);
    }

  }

  &.top-right {

    top: 0;
    right: 0;
    border-top-right-radius: inherit;

    > * { // Both `.label` and `.button`
      transform: translateX($label-corner-padding-x * 2 / 4 + $line-height-em / 8) translateY(-($label-corner-padding-y * 2 / 4 + $line-height-em / 8));
    }

    &:before {
      top: 0;
      right: 0;
      transform: translateX(( $line-height-em + ( $label-corner-padding-x * 2 ) ) / $SQRT2) translateY(-( $line-height-em + ( $label-corner-padding-y * 2 ) ) / $SQRT2) rotate(45deg);
    }

  }

  &.bottom-left {

    bottom: 0;
    left: 0;
    border-bottom-left-radius: inherit;

    > * { // Both `.label` and `.button`
      transform: translateX(-($label-corner-padding-x * 2 / 4 + $line-height-em / 8)) translateY($label-corner-padding-y * 2 / 4 + $line-height-em / 8);
    }

    &:before {
      bottom: 0;
      left: 0;
      transform: translateX(-( $line-height-em + ( $label-corner-padding-x * 2 ) ) / $SQRT2) translateY(( $line-height-em + ( $label-corner-padding-y * 2 ) ) / $SQRT2) rotate(45deg);
    }

  }

  &.bottom-right {

    bottom: 0;
    right: 0;
    border-bottom-right-radius: inherit;

    > * { // Both `.label` and `.button`
      transform: translateX($label-corner-padding-x * 2 / 4 + $line-height-em / 8) translateY($label-corner-padding-y * 2 / 4 + $line-height-em / 8);
    }

    &:before {
      bottom: 0;
      right: 0;
      transform: translateX(( $line-height-em + ( $label-corner-padding-x * 2 ) ) / $SQRT2) translateY(( $line-height-em + ( $label-corner-padding-y * 2 ) ) / $SQRT2) rotate(45deg);
    }

  }

  &:before {
    pointer-events: auto;
    position: absolute;
    content: '';
    height: ( $line-height-em + ( $label-corner-padding-y * 2 ) ) * $SQRT2;
    width: ( $line-height-em + ( $label-corner-padding-x * 2 ) ) * $SQRT2;
    background-color: inherit;
    visibility: visible;
  }

  > * { // Both `.label` and `.button`
    padding: $label-corner-padding-y $label-corner-padding-x;
    height: $line-height-em + ( $label-corner-padding-y * 2 );
    width: $line-height-em + ( $label-corner-padding-x * 2 );
    margin: 0;
    border-radius: 0;
    background-color: transparent !important;
    color: inherit;
    margin: 0;
    visibility: visible;
  }

}
