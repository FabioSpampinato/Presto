
/* =========================================================================
 * Svelto - Modal
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires _settings.scss
 * ========================================================================= */

/* MODAL */

//FIXME: How does an overlay inside a modal work? Maybe it's buggy

//INFO: In theory pretty much everything can be a modal but it works as expected with `card` and `card`-like markups

.modal {

  @include z-depth ( $modal-z-depth );
  position: fixed;
  z-index: $modal-z-index;
  transition-property: transform, opacity;
  transition-duration: $modal-transition-all-duration;
  margin: 0;
  cursor: pointer;

  /* CHILDREN */

  > * {
    cursor: auto;
  }

  /* BEFORE (BACKGROUND) */

  &:before {
    content: '';
    position: absolute;
    width: 400vw;
    height: 400vh;
    top: -200vh;
    left: -200vw;
    z-index: -1;
    background-color: $modal-background-color;
  }

  /* NOT FULLSCREEN */

  &:not(.fullscreen) {
    transform: translate(-50%, -50%) scale(1);
    top: 50%;
    left: 50%;
    max-width: $modal-max-width;
    max-height: $modal-max-height; //FIXME: On iOS a value of 100vh will exceed the actual visible viewport, maybe instead of using vw and vh center using fill-absolute and margin: auto, but apply some positive values to the top, right, bottom and left properties, it should work, maybe...
  }

  /* FULLSCREEN */

  &.fullscreen {
    @include fill-fixed ();
    transform: scale(1);
    border-width: 0;
    border-radius: 0;
  }

  /* CLOSED */

  &:not(.open) {

    /* MODAL & BACKGROUND */

    & {
      pointer-events: none;
      opacity: 0;
    }

    /* NOT FULLSCREEN */

    &:not(.fullscreen) {
      transform: translate(-50%, -50%) scale($modal-closed-scale);
    }

    /* FULLSCREEN */

    &.fullscreen {
      transform: scale($modal-closed-scale);
    }

  }

}
