
/* =========================================================================
 * Svelto - Input v0.1.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires _settings.scss
 * @requires ../widget/_widget.scss
 * @requires ../highlight/_highlight.scss
 * ========================================================================= */

/* INPUT */

//FIXME: The outlined version has not border at the bottom
//FIXME: If the placeholder is longer than the value it can exceed the width of the -wrp
//FIXME: The placeholder and the label are not exatly vertically aligned (UNLESS IS OUTLINED)
//FIXME: there's a little space between the top and the raised label, why? it makes problems with scrolled textareas

.input-wrp {

  @extend .widget;
  @include color ( $input-wrp-color, $input-wrp-color-basic );
  display: inline-flex; //INFO: For some reasons it fixes a border problem, without it there might be a missing border at the bottom when outlined
  align-items: center;
  border-radius: $input-wrp-border-radius;

  /* TEXT FIELD */

  > .text-field {
    @include color ( 'inherit', true );
    width: 100%;
    border: none;
    border-radius: inherit;
    display: inline-block;
  }

  /* LABEL */

  > label {
    @include center-absolute ( false, $input-label-height );
    @include color ( 'inherit', true );
    @include border-top-radius ( inherit );
    left: 0;
    margin-bottom: 0;
    padding-left: $input-padding-horizontal;
    transition-duration: $input-transition-all-duration;
    transition-property: color, opacity, top, font-size, margin, padding;
    pointer-events: none;
    opacity: $input-label-opacity;
    width: 100%; //FIXME: It maybe go over the scrollbar in a textarea
  }

  /* BAR */

  > .text-field-bar {
    @extend %highlight-after;
    transition-property: opacity, transform;
    transition-duration: $input-transition-all-duration;
    border-bottom-width: $highlight-size;
    border-color: $input-active-color;
    transform: scaleX(0);
    opacity: 0;
  }

  /* COLORS */

  @each $name, $datas in $colors {

    $bg: nth($datas, 1);

    &.text-field-#{$name} {

      > .text-field {

        &:focus ~ label {
          color: $bg !important;
        }

      }

      > .text-field-bar {
        border-bottom-color: $bg !important;
      }

    }

  }

  /* INVALID / VALID */

  &.invalid,
  &.valid {

    > .text-field-bar {
      transform: scaleX(1);
      opacity: 1;
    }

  }

  /* INVALID */

  &.invalid {

    > .text-field {

      ~ label,
      &:focus ~ label {
        color: $input-invalid-color !important;
      }

    }

    > .text-field-bar {
      border-bottom-color: $input-invalid-color !important;
    }

  }

  /* VALID */

  &.valid {

    > .text-field {

      ~ label,
      &:focus ~ label {
        color: $input-valid-color !important;
      }

    }

    > .text-field-bar {
      border-bottom-color: $input-valid-color !important;
    }

  }

  /* FLOATING */

  &:not(.no-floating) {

    /* UNOUTLINED */

    &:not(.outlined) {

      > .text-field {
        padding: ( $input-padding-vertical + ( $input-label-active-height / 2) ) $input-padding-horizontal $input-padding-vertical;
        height: $line-height-em + ( $input-padding-vertical * 2 ) + ( $input-label-active-height / 2); //FIXME: It shouldn't be fixed... but otherwise the height is greater, why?
      }

      &.compact > .text-field {
        padding: ( $input-compact-padding-vertical + ( $input-label-active-height / 2) ) $input-compact-padding-horizontal $input-compact-padding-vertical;
        height: $line-height-em + ( $input-compact-padding-vertical * 2 ) + ( $input-label-active-height / 2); //FIXME: It shouldn't be fixed... but otherwise the height is greater, why?
      }

    }

    /* OUTLINED */

    &.outlined {

      > .text-field {
        padding: ( $input-padding-vertical + ( $input-label-active-height / 2 ) ) $input-padding-horizontal $input-padding-vertical;
        height: ( $line-height-em + ( $input-padding-vertical * 2 ) ) + ( $input-label-active-height / 2 ); //FIXME: It shouldn't be fixed... but otherwise the height is greater, why?
      }

      &.compact > .text-field {
        padding: ( $input-compact-padding-vertical + ( $input-label-active-height / 2 ) ) $input-compact-padding-horizontal $input-compact-padding-vertical;
        height: ( $line-height-em + ( $input-compact-padding-vertical * 2 ) ) + ( $input-label-active-height / 2 ); //FIXME: It shouldn't be fixed... but otherwise the height is greater, why?
      }

    }

    /* ENABLED */

    &:not(.disabled) {

      > .text-field {

        &:focus ~ label,
        &:valid ~ label {
          height: calc(#{$input-label-active-height} + #{$gutter-half});
          line-height: $input-label-active-height;
          font-size: $input-label-active-font-size;
          top: 0;
          padding-bottom: $gutter-half;
          padding-left: 0;
          margin-top: 0;
          opacity: $input-label-active-opacity;
        }

        &:focus ~ label {
          color: $input-active-color;
        }

      }

      /* OUTLINED */

      &.outlined {

        > .text-field {

          &:focus ~ label,
          &:valid ~ label {
            padding-top: $gutter-half !important;
            padding-left: $gutter !important;
          }

        }

        /* COMPACT */

        &.compact {

          > .text-field {

            &:focus ~ label,
            &:valid ~ label {
              padding-left: $gutter-half !important;
            }

          }

        }

      }

    }

  }

  /* NO FLOATING */

  &.no-floating {

    /* UNOUTLINED */

    &:not(.outlined) {

      > .text-field {
        height: $line-height-em + ( $input-padding-vertical * 2 ); //FIXME: It shouldn't be fixed... but otherwise the height is greater, why?
        padding: $input-padding-vertical $input-padding-horizontal;
      }

      &.compact > .text-field {
        height: $line-height-em + ( $input-compact-padding-vertical * 2 ); //FIXME: It shouldn't be fixed... but otherwise the height is greater, why?
        padding: $input-compact-padding-vertical $input-compact-padding-horizontal;
      }

    }

    /* OUTLINED */

    &.outlined {

      > .text-field {
        height: $line-height-em + ( $input-padding-vertical * 2 ); //FIXME: It shouldn't be fixed... but otherwise the height is greater, why?
        padding: $input-padding-vertical $input-padding-horizontal;
      }

      &.compact > .text-field {
        height: $line-height-em + ( $input-compact-padding-vertical * 2 ); //FIXME: It shouldn't be fixed... but otherwise the height is greater, why?
        padding: $input-compact-padding-vertical $input-compact-padding-horizontal;
      }

    }

    /* TEXT FIELD */

    > .text-field {

      &:valid ~ label {
        opacity: 0;
      }

    }

    /* LABEL */

    > label {
      transition-duration: $input-transition-all-duration / 2;
    }

  }

  /* WITH BAR */

  &:not(.no-bar) {

    /* NO INITIAL */

    &:not(.no-initial-bar) {

      &:not(.outlined) {
        border-style: solid;
        border-width: 0 0 $outline-width 0;
      }

      > .text-field-bar {
        bottom: - $outline-width;
      }

    }

    /* ENABLED */

    &:not(.disabled) {

      > .text-field {

        &:focus ~ .text-field-bar {
          transform: scaleX(1);
          opacity: 1;
        }

      }

    }

  }

  /* NO INITIAL BAR */

  &.no-bar, &.no-initial-bar {

    &:not(.outlined) {
      border-bottom-width: 0;
    }

    &.outlined {

      > .text-field-bar {
        bottom: - $outline-width;
      }

    }

  }

  /* NO BAR */

  &.no-bar {

    > .text-field-bar {
      bottom: - $outline-width;
    }

  }

  /* FLUID */

  &.fluid {
    width: 100%;
  }

  /* COMPACT */

  &.compact {

    > .text-field {
      padding: $input-compact-padding-vertical $input-compact-padding-horizontal;
    }

    > label {
      padding-left: $input-compact-padding-horizontal;
    }

  }

  /* DISABLED */

  &.disabled {

    > .text-field {
      visibility: hidden;
    }

  }

}

/* RESET NUMBER INPUTS */

input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
}
