
/* =========================================================================
 * Svelto - Textarea v0.1.0
 * =========================================================================
 * Copyright (c) 2015 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * =========================================================================
 * @requires _settings.scss
 * ========================================================================= */

/* TEXTAREA */

//FIXME: If we write a lot and we scrroll down the content goes under the label
//TODO: set a default height

.textarea-wrp {

  @extend .input-wrp;

  & > .text-field {
    resize: vertical;
  }

  &:not(.no-floating) {

    &:not(.outlined) {

      & > .text-field {
        height: ( $line-height-em * $textarea-lines ) + ( $input-padding-vertical * 2 ) + ( $input-label-active-height / 2); //FIXME: It should be fixed... but otherwise the height is greater, why?
        padding: ( $input-padding-vertical + ( $input-label-active-height / 2) ) $input-padding-horizontal $input-padding-vertical;
      }

      &.compact > .text-field {
        height: ( $line-height-em * $textarea-lines ) + ( $input-compact-padding-vertical * 2 ) + ( $input-label-active-height / 2); //FIXME: It should be fixed... but otherwise the height is greater, why?
        padding: ( $input-compact-padding-vertical + ( $input-label-active-height / 2) ) $input-compact-padding-horizontal $input-compact-padding-vertical;
      }

    }

    &.outlined {

      & > .text-field {
        height: calc(#{( $line-height-em * $textarea-lines ) + ( $input-padding-vertical * 2 ) + ( $input-label-active-height / 2)} - #{2 * $outline-width}); //FIXME: It should be fixed... but otherwise the height is greater, why?
        padding: calc(#{$input-padding-vertical + ( $input-label-active-height / 2)} - #{2 * $outline-width}) $input-padding-horizontal $input-padding-vertical;
      }

      &.compact > .text-field {
        height: calc(#{( $line-height-em * $textarea-lines ) + ( $input-compact-padding-vertical * 2 ) + ( $input-label-active-height / 2)} - #{2 * $outline-width}); //FIXME: It should be fixed... but otherwise the height is greater, why?
        padding: calc(#{$input-compact-padding-vertical + ( $input-label-active-height / 2)} - #{2 * $outline-width}) $input-compact-padding-horizontal $input-compact-padding-vertical;
      }

    }

  }

  &.no-floating {

    &:not(.outlined) {

      & > .text-field {
        height: ( $line-height-em * $textarea-lines ) + ( $input-padding-vertical * 2 ); //FIXME: It should be fixed... but otherwise the height is greater, why?
        padding: $input-padding-vertical $input-padding-horizontal;
      }

      &.compact > .text-field {
        height: ( $line-height-em * $textarea-lines ) + ( $input-compact-padding-vertical * 2 ); //FIXME: It should be fixed... but otherwise the height is greater, why?
        padding: $input-compact-padding-vertical $input-compact-padding-horizontal;
      }

    }

    &.outlined {

      & > .text-field {
        height: calc(#{( $line-height-em * $textarea-lines ) + ( $input-padding-vertical * 2 )} - #{2 * $outline-width}); //FIXME: It should be fixed... but otherwise the height is greater, why?
        padding: calc(#{$input-padding-vertical} - #{2 * $outline-width}) $input-padding-horizontal $input-padding-vertical;
      }

      &.compact > .text-field {
        height: calc(#{( $line-height-em * $textarea-lines ) + ( $input-compact-padding-vertical * 2 )} - #{2 * $outline-width}); //FIXME: It should be fixed... but otherwise the height is greater, why?
        padding: calc(#{$input-compact-padding-vertical} - #{2 * $outline-width}) $input-compact-padding-horizontal $input-compact-padding-vertical;
      }

    }

  }

  &.unresizable > .text-field, &.disabled > .text-field {
    resize: none;
  }

}
