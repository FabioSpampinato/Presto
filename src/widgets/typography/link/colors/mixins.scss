
/* COLOR */

@mixin color-link ( $color, $force: false, $basic: false ) {

  @if color-exists( $color ) {

    @if not $force {

      $selector: colors-link-get-undefined-selector();

      &#{$selector} {

        @if not $basic {

          @extend %color-#{$color}-link;

        } @else {

          @extend %color-#{$color}-link-base;

        }

      }

    } @else {

      @if not $basic {

        @extend %color-#{$color}-link;

      } @else {

        @extend %color-#{$color}-link-base;

      }

    }

  }

}

@mixin color-link-inline ( $color, $type ) {

  @if color-exists( $color ) {

    $datas: map-get( $colors, $color );

    $bg: nth( $datas, 1 );
    $bg-hover: nth( $datas, 2 );
    $bg-active: nth( $datas, 3 );

    @if $type == 'base' {

      color: $bg;

    } @else if $type == 'hover' {

      color: $bg-hover;

    } @else if $type == 'active' {

      color: $bg-active;

    } @else if $type == 'full' {

      @include color-link-inline ( $color, 'base' );

      &:hover {
        @include color-link-inline ( $color, 'hover' );
      }

      &:active {
        @include color-link-inline ( $color, 'active' );
      }

    }

  }

}
