
/* =========================================================================
 * Svelto - Core - Multiple
 * =========================================================================
 * Copyright (c) 2015-2016 Fabio Spampinato
 * Licensed under MIT (https://github.com/svelto/svelto/blob/master/LICENSE)
 * ========================================================================= */

//FIXME: If possible in a clean way, fix the `Joined` tricky case group
//TODO: Add a 'lefted', 'righted' (like 'centered') classes for aligning the content to the left or right
//TODO: Modularize it (Possible in a clean way?)

/* MULTIPLE */

%multiple {}

.multiple {

  @extend %multiple;
  @include last-child-no-gutter ( 0, - $gutter );
  border-color: inherit; // So that when the children also inherit the border color is actually inherited
  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;

  /* GUTTER NORMAL */

  &:not(.no-wrap):not(.vertical):not(.joined) {

    @include margin-x ( - $gutter-half );

    > :not(.multiple) {
      @include margin-x ( $gutter-half );
    }

    > .multiple:not(.no-wrap):not(.vertical):not(.joined) {
      @include margin-x ( 0 );
    }

    > .multiple.no-wrap,
    > .multiple.vertical,
    > .multiple.joined {
      @include margin-x ( $gutter-half );
    }

  }

  /* GUTTER NO-WRAP */

  &.no-wrap:not(.vertical):not(.joined) {

    > :not(.multiple) {

      &:not(:first-child) {
        margin-left: $gutter-half;
      }

      &:not(:last-child) {
        margin-right: $gutter-half;
      }

    }

    > .multiple:not(.no-wrap):not(.vertical):not(.joined) {

      &:not(:first-child) {
        margin-left: 0;
      }

      &:not(:last-child) {
        margin-right: 0;
      }

    }

    > .multiple.no-wrap,
    > .multiple.vertical,
    > .multiple.joined {

      &:not(:first-child) {
        margin-left: $gutter-half;
      }

      &:not(:last-child) {
        margin-right: $gutter-half;
      }

    }

  }

  /* GUTTER VERTICAL */

  &.vertical {

    > .multiple:not(.no-wrap):not(.vertical):not(.joined) {

      @include margin-x ( 0 );

      > :not(.multiple) {

        &:first-child {
          margin-left: 0;
        }

        &:last-child {
          margin-right: 0;
        }

      }

      > .multiple:not(.no-wrap):not(.vertical):not(.joined) {

        &:first-child {
          margin-left: - $gutter-half;
        }

        &:last-child {
          margin-right: - $gutter-half;
        }

      }

      > .multiple.no-wrap,
      > .multiple.vertical,
      > .multiple.joined {

        &:first-child {
          margin-left: 0;
        }

        &:not(:last-child) {
          margin-right: $gutter-half;
        }

        &:not(:first-child) {
          margin-left: $gutter-half;
        }

        &:last-child {
          margin-right: 0;
        }

      }

    }

  }

  /* VERTICAL */

  &.vertical {
    flex-direction: column;
  }

  /* CENTERED */

  &.centered-x:not(.vertical),
  &.cetered-y.vertical,
  &.centered {
    justify-content: center;
  }

  &.centered-y:not(.vertical),
  &.centered-x.vertical,
  &.centered {
    align-items: center;
  }

  /* NO WRAP */

  &.no-wrap {
    flex-wrap: nowrap;
  }

  /* FLUID / EQUAL */

  &.fluid,
  &.equal {

    &.vertical > * {
      width: 100%;
    }

  }

  /* FLUID */

  &.fluid {

    &:not(.vertical) {

      > * {
        flex: 1 0 auto;
      }

      > input {
        flex-basis: 0%; // IE-10/11 misinterpreter a unitless 0 flex-basis
      }

    }

  }

  /* EQUAL */

  &.equal {

    &:not(.vertical) {

      > * {
        flex: 1 0 0%; // IE-10/11 misinterpreter a unitless 0 flex-basis
      }

    }

  }

  /* JOINED */

  &.joined {

    flex-wrap: nowrap;
    align-items: stretch;

    > .multiple {
      @include margin-x ( 0 );
    }

    &:not(.vertical) {

      > :not(:last-child),
      > .multiple:not(:last-child) > :last-child {
        @include border-right-radius ( 0 );
        margin-right: 0;
        border-right-width: 0;
      }

      > :not(:first-child),
      > .multiple:not(:first-child) > :first-child {
        @include border-left-radius ( 0 );
        margin-left: 0;
      }

      &.no-separators {

        > :not(:first-child),
        > .multiple:not(:first-child) > :first-child {
          border-left-width: 0;
        }

        > .multiple:not(:last-child) > :last-child {
          border-right-width: 0;
        }

      }

      &.only-separators {

        > :first-child,
        > .multiple:first-child > :first-child {
          border-left-width: 0;
        }

        > :last-child,
        > .multiple:last-child > :last-child {
          border-right-width: 0;
        }

      }

    }

    &.vertical {

      > :not(:last-child),
      > .multiple:not(:last-child) > :last-child {
        @include border-bottom-radius ( 0 );
        margin-bottom: 0;
        border-bottom-width: 0;
      }

      > :not(:first-child),
      > .multiple:not(:first-child) > :first-child {
        @include border-top-radius ( 0 );
        margin-top: 0;
      }

      &.no-separators {

        > :not(:first-child),
        > .multiple:not(:first-child) > :first-child {
          border-top-width: 0;
        }

        > .multiple:not(:last-child) > :last-child {
          border-bottom-width: 0;
        }

      }

      &.only-separators {

        > :first-child,
        > .multiple:first-child > :first-child {
          border-top-width: 0;
        }

        > :last-child,
        > .multiple:last-child > :last-child {
          border-bottom-width: 0;
        }

      }

    }

  }

  /* STRETCHED */

  &.stretched {
    align-items: stretch;
  }

}
