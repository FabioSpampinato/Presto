
extends ../layout.jade

//- oneTimeAction

append main
  +divider-block One Time Actions

  +multiple
    +button("ota_test1 ()").outlined Test1
    +button("ota_test2 ()").outlined Test2
    +button("ota_test3 ()").outlined Test3 (Advanced)

  +divider-block Actions

  +multiple.actions
    +button("ota_reset_test1 ()").outlined Reset test1
    +button("ota_reset_actions ()").outlined Reset all
    +button("ota_get_string ()").outlined Get cookie string

append body-end
  +script.
    function ota_test1 () {
      $.oneTimeAction ({ action: 'test1', fn: function () {
        $.noty ( "One time action (test1) executed and setted" );
      }});
    }
    function ota_test2 () {
      $.oneTimeAction ({ action: 'test2', fn: function () {
        $.noty ( "One time action (test2) executed and setted" );
      }});
    }
    function ota_test3 () {
      $.oneTimeAction ({ action: 'test3', fn: function () {
        $.noty ({
          body: "One time action (test3) executed",
          buttons: [{
              text: 'Close'
            },
            {
              text: 'Set',
              onClick: function () {
                $.oneTimeAction ({ action: 'test3' }).set ( 1 );
                $.noty ( "One time action (test3) setted" );
                }
            }]
        });
        return false;
      }});
    }
    function ota_reset_test1 () {
      $.oneTimeAction ({ action: 'test1' }).reset ();
      $.noty ( '(test1) action has been resetted' );
    }
    function ota_reset_actions () {
      $.oneTimeAction ().reset ();
      $.noty ( 'oneTimeAction-related cookies has been resetted' );
    }
    function ota_get_string () {
      $.noty ( $.cookie.get ( 'ota' ) );
    }
