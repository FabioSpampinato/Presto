
extends ../layout.jade

//- Timer

append main
  +divider-block Actions

  +multiple
    +multiple.joined
      +input({ name: 'milliseconds', placeholder: 'Milliseconds...', value: 300 }).outlined
      +checkbox({ name: 'autostart', title: 'Autostart', value: 1, checked: true }).outlined
      +button("timer_set ()").outlined Set
    +multiple.joined
      +input({ name: 'milliseconds_once', placeholder: 'Milliseconds...', value: 1000 }).outlined
      +button("timer_once ()").outlined Once
    +button("timer_play ()").outlined Play
    +button("timer_pause ()").outlined Pause
    +button("timer_stop ()").outlined Stop
    +button("timer_toggle ()").outlined Toggle
    +button("timer_reset ()").outlined Reset
    +button("timer_go ()").outlined Go
    +button("timer_remaining ()").outlined Remaining

append body-end
  +script.
    var timer = false;

    function timer_callback () {
      $.noty ({ body: 'Timer executed!', color: 'green' });
    }

    function timer_set () {
      var milliseconds = Number($('input[name="milliseconds"]').val ()),
        autostart = $('input[name="autostart"]').prop ( 'checked' );
      timer = new Timer ( timer_callback, milliseconds, autostart );
    }

    function timer_once () {
      var milliseconds = Number($('input[name="milliseconds_once"]').val ());
      timer.once ( milliseconds );
    }

    function timer_play () {
      timer.play ();
    }

    function timer_pause () {
      timer.pause ();
    }

    function timer_stop () {
      timer.stop ();
    }

    function timer_toggle () {
      timer.toggle ();
    }

    function timer_reset () {
      timer.reset ();
    }

    function timer_go () {
      timer.go ();
    }

    function timer_remaining () {
      $.noty ( 'Remaining: ' + timer.remaining () );
    }
