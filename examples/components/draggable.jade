
extends ../layout.jade

//- Draggable

append main
  +divider-block Draggables

  +container.constrainer.outlined
    +multiple
      +label.outlined.draggable Draggable
      +checkbox({ name: "checkbox", title: "Toggable draggable", value: 1 }).outlined.toggable-draggable
      +label.outlined.only-handler
        span Only handler
        +label-sub-right.draggable-handler
          +icon('menu')
      +label.outlined.revertable Revertable
      +label.outlined.x-axis X-Axis
      +label.outlined.y-axis Y-Axis
      +label.outlined.constrained Constrained
      +label.outlined.constrained-center Constrained center
      +label.outlined.constrained-tollerance Constrained 100-50 tollerance
      +label.outlined.constrained-coordinates-modifier Modifier 2x
      +label.outlined.proxyed Proxy
      
  +divider-block Actions

  +multiple.actions
    +button("removeProxy ()").outlined.black Remove proxy

append body-end
  +noty({ body: "Drag the labels around", ttl: "forever" })
  +script.
    $('.only-handler').draggable ({ onlyHandlers: true });
    $('.no-handler').draggable ();
    $('.toggable-draggable').draggable ({ draggable: function () {
      return !!$('.toggable-draggable').checkbox ( 'instance' ).get ();
    }});
    $('.revertable').draggable ({ revertable: true });
    $('.x-axis').draggable ({ axis: 'x' });
    $('.y-axis').draggable ({ axis: 'y' });
    $('.constrained').draggable ({ constrainer: { $element: $('.constrainer') } });
    $('.constrained-center').draggable ({ constrainer: { $element: $('.constrainer'), constrainCenter: true } });
    $('.constrained-tollerance').draggable ({ constrainer: { $element: $('.constrainer'), tollerance: { x: 100, y: 50 } } });
    $('.constrained-coordinates-modifier').draggable ({ modifiers: {
      x: function ( x ) { return 2 * x; },
      y: function ( y ) { return 2 * y; }
    }});
    $('.proxyed').draggable ({ $proxy: $('.constrainer') });
    
    function removeProxy () {
      $('.proxyed').remove ();
    }
