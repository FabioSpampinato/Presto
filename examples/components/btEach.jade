
extends ../layout.jade

//- btEach

append main
  +divider-block Squares

  +container.outlined.squares
    +multiple
      - var squares_nr = 64;
      - var nr = 1;
      while nr <= squares_nr
        +square.xxxxlarge.centerer
          .xxxsmall= nr++

  +divider-block Actions

  +multiple.actions
    +multiple.joined
      +input({ name: "input_search", label: "Search number..." }).no-floating.white.text-field-primary.outlined
      +button("search ()").outlined.primary Search
    +multiple.joined
      +input({ name: "input_populate", label: "Square number..." }).no-floating.white.text-field-secondary.outlined
      +button("populate ()").outlined.secondary Populate
    +button("reset ()").outlined.black Reset

append body-end
  +script.
    var searchNr,
        iterations = 0;

    function populate () {
      
      var html = '';

      for ( var i = 0, l = $('input[name="input_populate"]').val (); i < l; i++ ) {
        html += '<div class="square xxxxlarge centerer" style=""><div class="xxxsmall">' + (i + 1) + '</div></div>';
      }

      $('.squares .multiple').empty ().append ( html );
      
    }

    function search () {
      
      reset ();
      searchNr = Number($('input[name="input_search"]').val ());
      $document.find ( '.square' ).btEach ( comparer );
      
    }

    function comparer () {
      
      var $node = $(this),
          found_nr = Number($node.children ().html ());

      iterations += 1;

      $node.append ( '<div class="label badge top-right compact xxxxsmall rounded inherit">' + iterations + '</div>' );

      if ( found_nr < searchNr ) {

        $node.addClass ( 'red' );
        return 1;

      } else if ( found_nr > searchNr ) {

        $node.addClass ( 'red' );
        return -1;

      } else {

        $node.addClass ( 'green' );
        return false;

      }

    }

    function reset () {
      
      iterations = 0;
      $document.find ( '.square' ).removeClass ( 'red green' ).find ( '.label' ).remove ();
    
    }
