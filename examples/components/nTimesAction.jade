
extends ../layout.jade

//- nTimesAction

append main
  +divider-block Settings
  
  +multiple.equal.joined
    +input({ name: "nta_group", placeholder: "Group..." }).outlined
    +input({ name: "nta_action", placeholder: "Action..." }).outlined
    +input({ name: "nta_times", placeholder: "Times..." }).outlined
  
  +divider-block Actions
        
  +multiple.actions
    +button("nta_run ()").outlined Run
    +button("nta_run ( false )").outlined Run (Return false)
    +button("nta_get ()").outlined Get
    +button("nta_set ()").outlined Set
    +button("nta_reset ()").outlined Reset
    
append body-end
  +script.
    function nta_input ( name ) {
      return $('input[name="nta_' + name + '"]').val ();
    }
    function nta_run ( returnValue ) {
      $.nTimesAction ({
        group: nta_input('group'),
        action: nta_input('action'),
        times: Number(nta_input('times')),
        fn: function ( group, action, time ) {
          $.noty ( group + '`s action: ' + action + ' has been executed for the ' + time + ' time' );
          return returnValue;
        }
      });
    }
    function nta_get () {
      $.noty ( $.nTimesAction ({ group: nta_input('group'), action: nta_input('action') }).get () + ' times' );
    }
    function nta_set () {
      $.nTimesAction ({ group: nta_input('group'), action: nta_input('action') }).set ( Number(nta_input('times')) );
      $.noty ( 'Setted ' + nta_input('times') + ' times' );
    }
    function nta_reset () {
      $.nTimesAction ({ group: nta_input('group'), action: nta_input('action') }).reset ();
      $.noty ( 'Resetted' );
    }
