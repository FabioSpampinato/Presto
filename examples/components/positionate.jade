
extends ../layout.jade

//- Positionate

//- TODO: add different kind of anchors and positionables, and select those to use using a radio, just to test different configurations (o magari crearne 2 e switchare tra i 2, uno diventa l'anchor e l'altro il positionable)

append main
  +divider Anchor

  +square-sample(style="z-index: 100;").anchor.draggable
  +square-sample(style="position:fixed; top:0; left: 0; z-index: 101;").positionable.secondary

  +divider Positionate

  +multiple
    +checkbox({ name: "live", title: "Live", value: 1 }).live.outlined
    +button("positionate2anchor ( false )").outlined Auto
    +button("positionate2anchor ( 'top' )").outlined Top
    +button("positionate2anchor ( 'bottom' )").outlined Bottom
    +button("positionate2anchor ( 'left' )").outlined Left
    +button("positionate2anchor ( 'right' )").outlined Right
    +button("positionate2axis ( 'x' )").outlined X Axis
    +button("positionate2axis ( 'y' )").outlined Y Axis
    +button("positionate2diraxis ( 'x', 'top' )").outlined X Top
    +button("positionate2diraxis ( 'y', 'left' )").outlined Y Left
    +multiple.joined
      +input({ name: "input_x", label: "X axis..." }).no-floating.white.outlined
      +input({ name: "input_y", label: "Y axis..." }).no-floating.white.outlined
      +button("positionate2coordinates ()").secondary.outlined Coordinates

append body-end
  +noty({ body: "The anchor is draggable" })
  +script.
    var live_update = false,
      live_triggered = false;

    function positionate2anchor ( direction ) {
      $('.positionable').positionate ({ $anchor: $('.anchor'), direction: direction });
    }
    function positionate2axis ( axis ) {
      $('.positionable').positionate ({ $anchor: $('.anchor'), axis: axis });
    }
    function positionate2diraxis ( axis, direction ) {
      $('.positionable').positionate ({ $anchor: $('.anchor'), axis: axis, direction: direction });
    }
    function positionate2coordinates () {
      $('.positionable').positionate ({ point: { x: Number($('input[name="input_x"]').val ()), y: Number($('input[name="input_y"]').val ()) } });
    }
    function positionateLive () {
      if ( live_update ) {
        $('.positionable').positionate ({ $anchor: $('.anchor') });
      }
    }

    $('.live').on ({
      'checkbox:checked': function () {
        live_update = true;
        positionateLive ();
        if ( !live_triggered ) {
          live_triggered = true;
          $('.anchor').on ( $.Pointer.dragmove, positionateLive );
        }
      },
      'checkbox:unchecked': function () {
        live_update = false;
      }
    })
