//- tools/btEach.jade

extends ../../layout.jade

append main
    +divider Squares

    +container-simple
        +multiple.squares
            +square.xxxxxlarge.centered
                span.small 1
            +square.xxxxxlarge.centered
                span.small 2
            +square.xxxxxlarge.centered
                span.small 3
            +square.xxxxxlarge.centered
                span.small 4
            +square.xxxxxlarge.centered
                span.small 5
            +square.xxxxxlarge.centered
                span.small 6
            +square.xxxxxlarge.centered
                span.small 7
            +square.xxxxxlarge.centered
                span.small 8
            +square.xxxxxlarge.centered
                span.small 9
            +square.xxxxxlarge.centered
                span.small 10
            +square.xxxxxlarge.centered
                span.small 11
            +square.xxxxxlarge.centered
                span.small 12
            +square.xxxxxlarge.centered
                span.small 13
            +square.xxxxxlarge.centered
                span.small 14
            +square.xxxxxlarge.centered
                span.small 15
            +square.xxxxxlarge.centered
                span.small 16
            +square.xxxxxlarge.centered
                span.small 17
            +square.xxxxxlarge.centered
                span.small 18
            +square.xxxxxlarge.centered
                span.small 19
            +square.xxxxxlarge.centered
                span.small 20
            +square.xxxxxlarge.centered
                span.small 21
            +square.xxxxxlarge.centered
                span.small 22
            +square.xxxxxlarge.centered
                span.small 23
            +square.xxxxxlarge.centered
                span.small 24
            +square.xxxxxlarge.centered
                span.small 25
            +square.xxxxxlarge.centered
                span.small 26
            +square.xxxxxlarge.centered
                span.small 27
            +square.xxxxxlarge.centered
                span.small 28
            +square.xxxxxlarge.centered
                span.small 29
            +square.xxxxxlarge.centered
                span.small 30
            +square.xxxxxlarge.centered
                span.small 31
            +square.xxxxxlarge.centered
                span.small 32
            +square.xxxxxlarge.centered
                span.small 33
            +square.xxxxxlarge.centered
                span.small 34
            +square.xxxxxlarge.centered
                span.small 35
            +square.xxxxxlarge.centered
                span.small 36
            +square.xxxxxlarge.centered
                span.small 37
            +square.xxxxxlarge.centered
                span.small 38
            +square.xxxxxlarge.centered
                span.small 39
            +square.xxxxxlarge.centered
                span.small 40
            +square.xxxxxlarge.centered
                span.small 41
            +square.xxxxxlarge.centered
                span.small 42
            +square.xxxxxlarge.centered
                span.small 43
            +square.xxxxxlarge.centered
                span.small 44
            +square.xxxxxlarge.centered
                span.small 45
            +square.xxxxxlarge.centered
                span.small 46
            +square.xxxxxlarge.centered
                span.small 47
            +square.xxxxxlarge.centered
                span.small 48
            +square.xxxxxlarge.centered
                span.small 49
            +square.xxxxxlarge.centered
                span.small 50
            +square.xxxxxlarge.centered
                span.small 51
            +square.xxxxxlarge.centered
                span.small 52
            +square.xxxxxlarge.centered
                span.small 53
            +square.xxxxxlarge.centered
                span.small 54
            +square.xxxxxlarge.centered
                span.small 55
            +square.xxxxxlarge.centered
                span.small 56
            +square.xxxxxlarge.centered
                span.small 57
            +square.xxxxxlarge.centered
                span.small 58
            +square.xxxxxlarge.centered
                span.small 59
            +square.xxxxxlarge.centered
                span.small 60
            +square.xxxxxlarge.centered
                span.small 61
            +square.xxxxxlarge.centered
                span.small 62
            +square.xxxxxlarge.centered
                span.small 63
            +square.xxxxxlarge.centered
                span.small 64

    +divider Actions

    +multiple
        +multiple.joined
            input(id="input", type="number", name="input", placeholder="Search number...")
            +button-simple(id="search", onclick="javascript:search()").primary Search
        +multiple.joined
            input(id="populate_input", type="number", name="input2", placeholder="Squares number...")
            +button-simple(id="populate", onclick="javascript:populate()").secondary Populate
        +button-simple(id="clear", onclick="javascript:reset()").black Clear

append body-end
    +noty({ body: '<p>[Green] Found <br/> [Red] Smaller <br/> [Blue] Bigger</p>', ttl: 'forever' })
    +script.
        var $squares,
            $input,
            search_nr,
            iterations = 0;

        function populate () {
            var html = '';

            for ( var i = 0, l = $('#populate_input').val (); i < l; i++ ) {
                html += '<div class="square xxxxxlarge centered" style=""><span class="small">' + (i + 1) + '</span></div>';
            }

            $('.squares').empty ().append ( html );

            $squares = $document.find ( '.square' );
        }

        function search () {
            reset ();
            search_nr = Number($input.val ());
            $squares.btEach ( comparer );
        }

        function comparer () {
            var $node = $(this),
                found_nr = Number($node.find('span').html ());

            iterations += 1;

            if ( found_nr < search_nr ) {
                $node.attr ( 'style', 'background-color:rgba(255, 0, 0, ' + ( 0.8 - ( 0.15 * iterations ) ) + ');' );
                return 1;
            } else if ( found_nr > search_nr ) {
                $node.attr ( 'style', 'background-color:rgba(0, 0, 255, ' + ( 0.8 - ( 0.15 * iterations ) ) + ');' );
                return -1;
            } else {
                $node.attr ( 'style', 'background-color:#00ff00;' );
                return 0;
            }
        }

        function reset () {
            iterations = 0;
            $squares.attr ( 'style', '' );
        }

        $(function () {
            $squares = $document.find ( '.square' );
            $input = $('#input');
        });
