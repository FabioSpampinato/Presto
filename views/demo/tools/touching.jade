//- tools/touching.jade

extends ../../layout.jade

append main
    +divider Squares - All matches

    +container-simple.squares_all
        +multiple
            +square.xxxxxlarge.centered
                span.small 1
            +square.xxxxxlarge.centered
                span.small 2
            +square.xxxxxlarge.centered
                span.small 3
            +square.xxxxxlarge.centered
                span.small 4
            +square.xxxxxlarge.centered
                span.small 5
            +square.xxxxxlarge.centered
                span.small 6
            +square.xxxxxlarge.centered
                span.small 7
            +square.xxxxxlarge.centered
                span.small 8
            +square.xxxxxlarge.centered
                span.small 9
            +square.xxxxxlarge.centered
                span.small 10
            +square.xxxxxlarge.centered
                span.small 11
            +square.xxxxxlarge.centered
                span.small 12
            +square.xxxxxlarge.centered
                span.small 13
            +square.xxxxxlarge.centered
                span.small 14
            +square.xxxxxlarge.centered
                span.small 15
            +square.xxxxxlarge.centered
                span.small 16
            +square.xxxxxlarge.centered
                span.small 17
            +square.xxxxxlarge.centered
                span.small 18
            +square.xxxxxlarge.centered
                span.small 19
            +square.xxxxxlarge.centered
                span.small 20
            +square.xxxxxlarge.centered
                span.small 21
            +square.xxxxxlarge.centered
                span.small 22
            +square.xxxxxlarge.centered
                span.small 23
            +square.xxxxxlarge.centered
                span.small 24
            +square.xxxxxlarge.centered
                span.small 25
            +square.xxxxxlarge.centered
                span.small 26
            +square.xxxxxlarge.centered
                span.small 27
            +square.xxxxxlarge.centered
                span.small 28
            +square.xxxxxlarge.centered
                span.small 29
            +square.xxxxxlarge.centered
                span.small 30
            +square.xxxxxlarge.centered
                span.small 31
            +square.xxxxxlarge.centered
                span.small 32

    +divider Actions

    +multiple.joined
        input(id="populate_all_input", type="number", name="input1", placeholder="Squares number...")
        +button-simple(onclick="javascript:populate_all()").secondary Populate

    +divider Squares - Most significant match

    +container-simple.squares_most
        +multiple
            +square.xxxxxlarge.centered
                span.small 1
            +square.xxxxxlarge.centered
                span.small 2
            +square.xxxxxlarge.centered
                span.small 3
            +square.xxxxxlarge.centered
                span.small 4
            +square.xxxxxlarge.centered
                span.small 5
            +square.xxxxxlarge.centered
                span.small 6
            +square.xxxxxlarge.centered
                span.small 7
            +square.xxxxxlarge.centered
                span.small 8
            +square.xxxxxlarge.centered
                span.small 9
            +square.xxxxxlarge.centered
                span.small 10
            +square.xxxxxlarge.centered
                span.small 11
            +square.xxxxxlarge.centered
                span.small 12
            +square.xxxxxlarge.centered
                span.small 13
            +square.xxxxxlarge.centered
                span.small 14
            +square.xxxxxlarge.centered
                span.small 15
            +square.xxxxxlarge.centered
                span.small 16
            +square.xxxxxlarge.centered
                span.small 17
            +square.xxxxxlarge.centered
                span.small 18
            +square.xxxxxlarge.centered
                span.small 19
            +square.xxxxxlarge.centered
                span.small 20
            +square.xxxxxlarge.centered
                span.small 21
            +square.xxxxxlarge.centered
                span.small 22
            +square.xxxxxlarge.centered
                span.small 23
            +square.xxxxxlarge.centered
                span.small 24
            +square.xxxxxlarge.centered
                span.small 25
            +square.xxxxxlarge.centered
                span.small 26
            +square.xxxxxlarge.centered
                span.small 27
            +square.xxxxxlarge.centered
                span.small 28
            +square.xxxxxlarge.centered
                span.small 29
            +square.xxxxxlarge.centered
                span.small 30
            +square.xxxxxlarge.centered
                span.small 31
            +square.xxxxxlarge.centered
                span.small 32

    +divider Actions

    +multiple.joined
        input(id="populate_most_input", type="number", name="input2", placeholder="Squares number...")
        +button-simple(onclick="javascript:populate_most()").secondary Populate

    +divider Squares - Punctual

    +container-simple.squares_punctual
        +multiple
            +square.xxxxxlarge.centered
                span.small 1
            +square.xxxxxlarge.centered
                span.small 2
            +square.xxxxxlarge.centered
                span.small 3
            +square.xxxxxlarge.centered
                span.small 4
            +square.xxxxxlarge.centered
                span.small 5
            +square.xxxxxlarge.centered
                span.small 6
            +square.xxxxxlarge.centered
                span.small 7
            +square.xxxxxlarge.centered
                span.small 8
            +square.xxxxxlarge.centered
                span.small 9
            +square.xxxxxlarge.centered
                span.small 10
            +square.xxxxxlarge.centered
                span.small 11
            +square.xxxxxlarge.centered
                span.small 12
            +square.xxxxxlarge.centered
                span.small 13
            +square.xxxxxlarge.centered
                span.small 14
            +square.xxxxxlarge.centered
                span.small 15
            +square.xxxxxlarge.centered
                span.small 16
            +square.xxxxxlarge.centered
                span.small 17
            +square.xxxxxlarge.centered
                span.small 18
            +square.xxxxxlarge.centered
                span.small 19
            +square.xxxxxlarge.centered
                span.small 20
            +square.xxxxxlarge.centered
                span.small 21
            +square.xxxxxlarge.centered
                span.small 22
            +square.xxxxxlarge.centered
                span.small 23
            +square.xxxxxlarge.centered
                span.small 24
            +square.xxxxxlarge.centered
                span.small 25
            +square.xxxxxlarge.centered
                span.small 26
            +square.xxxxxlarge.centered
                span.small 27
            +square.xxxxxlarge.centered
                span.small 28
            +square.xxxxxlarge.centered
                span.small 29
            +square.xxxxxlarge.centered
                span.small 30
            +square.xxxxxlarge.centered
                span.small 31
            +square.xxxxxlarge.centered
                span.small 32

    +divider Actions

    +multiple.joined
        input(id="populate_punctual_input", type="number", name="input3", placeholder="Squares number...")
        +button-simple(onclick="javascript:populate_punctual()").secondary Populate

append body-end
    +noty({ body: 'Drag the squares, the green ones are the returned ones', ttl: 'forever' })
    +script.
        function get_squares_html ( nr ) {

            var html = '';

            for ( var i = 0; i < Number(nr); i++ ) {
                html += '<div class="square xxxxxlarge centered" style=""><span class="small">' + (i + 1) + '</span></div>';
            }

            return html;

        }

        function populate_all () {

            $('.squares_all .multiple').empty ().append ( get_squares_html ( $('#populate_all_input').val () ) );

        }

        function populate_most () {

            $('.squares_most .multiple').empty ().append ( get_squares_html ( $('#populate_most_input').val () ) );

        }

        function populate_punctual () {

            $('.squares_punctual .multiple').empty ().append ( get_squares_html ( $('#populate_punctual_input').val () ) );

        }

        // General drag

        var drag_options,
            $squares,
            $target;

        function drag_start ( options, event, target ) {

            drag_options = options;

            $target = $(target);

            $squares = $target.parent ().find ( '.square' );

        }

        function drag_move ( event, target, XYs ) {

            $target.css ( 'z-index', 1000 );
            $target.css ( 'transform', 'translate3d(' + ( XYs.move.X - XYs.start.X ) + 'px,' + ( XYs.move.Y - XYs.start.Y ) + 'px,0)' );

            if ( drag_options === 'punctual' ) {

                $squares.removeClass ( 'green' ).touching ( { point: XYs.move, $not: $target } ).addClass ( 'green' );

            } else {

                $squares.removeClass ( 'green' ).touching ( _.extend ( { $comparer: $target, $not: $target }, drag_options ) ).addClass ( 'green' );

            }

        }

        function drag_end () {

            $target.css ( 'transform', 'translate3d(0,0,0)' );
            $target.css ( 'z-index', 1 );

            $squares.removeClass ( 'green' );

        }

        // Specific drag

        function drag_start_all ( event, target ) {

            drag_start ( { select: 'all' }, event, target );

        }

        function drag_start_most ( event, target ) {

            drag_start ( { select: 'most' }, event, target );

        }

        function drag_start_punctual ( event, target ) {

            drag_start ( 'punctual', event, target );

        }

        // Ready

        $(function () {
            $('.squares_all').draggable ({
                start: drag_start_all,
                move: drag_move,
                end: drag_end,
                delegate: '.square'
            });
            $('.squares_most').draggable ({
                start: drag_start_most,
                move: drag_move,
                end: drag_end,
                delegate: '.square'
            });
            $('.squares_punctual').draggable ({
                start: drag_start_punctual,
                move: drag_move,
                end: drag_end,
                delegate: '.square'
            });
        });
