//- tools/touching.jade

extends ../../layout.jade

append main
    +divider Squares - All matches

    +container-simple.squares_all
        +multiple
            - var squares_nr = 32;
            - var nr = 1;
            while nr <= squares_nr
                +square.xxxxxlarge.centered
                    span.small= nr++

    +divider Actions

    +multiple.joined
        +input({name: "input_populate_all", label: "Search number..."}).no-floating.white.text-field-secondary
        +button-simple("populate_all()").secondary Populate

    +divider Squares - Most significant match

    +container-simple.squares_most
        +multiple
            - var squares_nr = 32;
            - var nr = 1;
            while nr <= squares_nr
                +square.xxxxxlarge.centered
                    span.small= nr++

    +divider Actions

    +multiple.joined
        +input({name: "input_populate_most", label: "Square number..."}).no-floating.white.text-field-secondary
        +button-simple("populate_most()").secondary Populate

    +divider Squares - Punctual

    +container-simple.squares_punctual
        +multiple
            - var squares_nr = 32;
            - var nr = 1;
            while nr <= squares_nr
                +square.xxxxxlarge.centered
                    span.small= nr++

    +divider Actions

    +multiple.joined
        +input({name: "input_populate_punctual", label: "Square number..."}).no-floating.white.text-field-secondary
        +button-simple("populate_punctual()").secondary Populate

append body-end
    +noty({ body: 'Drag the squares, the green ones are the returned ones', ttl: 'forever' })
    +script.
        // Populate

        function get_squares_html ( nr ) {

            var html = '';

            for ( var i = 0; i < Number(nr); i++ ) {
                html += '<div class="square xxxxxlarge centered" style=""><span class="small">' + (i + 1) + '</span></div>';
            }

            return html;

        }

        function populate_all () {

            $('.squares_all .multiple').empty ().append ( get_squares_html ( $('input[name="input_populate_all"]').val () ) );

        }

        function populate_most () {

            $('.squares_most .multiple').empty ().append ( get_squares_html ( $('input[name="input_populate_most"]').val () ) );

        }

        function populate_punctual () {

            $('.squares_punctual .multiple').empty ().append ( get_squares_html ( $('input[name="input_populate_punctual"]').val () ) );

        }

        // Dragging

        function dragging ( selector, select ) {

            var $squares = $(selector);

            $squares.draggable ({
                revertable: true,
                callbacks: {
                    move: function ( data ) {
                        $squares.removeClass ( 'green' );
                        if ( select === 'punctual') {
                            $squares.touching ({ point: data.moveXY, $not: data.$draggable }).addClass ( 'green' );
                        } else {
                            $squares.touching ({ $comparer: data.$draggable, $not: data.$draggable, select: select }).addClass ( 'green' );
                        }
                    },
                    end: function () {
                        $squares.removeClass ( 'green' );
                    }
                }
            });

        }

        // Ready

        $(function () {
            dragging ( '.squares_all .square', 'all' );
            dragging ( '.squares_most .square', 'most' );
            dragging ( '.squares_punctual .square', 'punctual' );
        });
