//- javascript/noty.jade

extends ../../layout.jade

append content
    +divider Text

    .multiple
        .button.actionable.outlined(onclick="noty_test_short()") Short
        .button.actionable.outlined(onclick="noty_test_medium()") Medium
        .button.actionable.outlined(onclick="noty_test_long()") Long

    +divider Buttons

    .multiple
        .button.actionable.outlined(onclick="noty_test_btns_one()") One
        .button.actionable.outlined(onclick="noty_test_btns_two()") Two
        .button.actionable.outlined(onclick="noty_test_btns_three()") Three

    +divider Advanced

    .multiple
        .button.actionable.outlined(onclick="noty_test_adv_one()") Title + Body
        .button.actionable.outlined(onclick="noty_test_adv_two()") Title + Body + Image
        .button.actionable.outlined(onclick="noty_test_adv_three()") Title + Body + Image + Buttons
        .button.actionable.outlined(onclick="noty_test_adv_four()") Title + Custom body + Image + Buttons

    +divider Colors

    .multiple
        .button.actionable.primary(onclick="noty_test_colored('primary')") Primary
        .button.actionable.secondary(onclick="noty_test_colored('secondary')") Secondary
        .button.actionable.white(onclick="noty_test_colored('white')") White
        .button.actionable.gray(onclick="noty_test_colored('gray')") Gray
        .button.actionable.black(onclick="noty_test_colored('black')") Black
        .button.actionable.yellow(onclick="noty_test_colored('yellow')") Yellow
        .button.actionable.green(onclick="noty_test_colored('green')") Green
        .button.actionable.blue(onclick="noty_test_colored('blue')") Blue
        .button.actionable.orange(onclick="noty_test_colored('orange')") Orange
        .button.actionable.purple(onclick="noty_test_colored('purple')") Purple
        .button.actionable.red(onclick="noty_test_colored('red')") Red
        .button.actionable.pink(onclick="noty_test_colored('pink')") Pink
        .button.actionable.teal(onclick="noty_test_colored('teal')") Teal

append body
    +script.
        function noty_test_short () {
            $.noty ( "Short noty" );
        }
        function noty_test_medium () {
            $.noty ( "A medium noty, maybe some useful infos here" );
        }
        function noty_test_long () {
            $.noty ( "A very looooooooooong noty, maybe some tips here or whatever takes a long space, how does it fit?" );
        }
        function noty_test_btns_one () {
            $.noty ( { body: "Noty with one button", buttons: [{ text: "Foo" }] } );
        }
        function noty_test_btns_two () {
            $.noty ( { body: "Noty with two buttons", buttons: [{ text: "Foo" }, { text: "Bar" }] } );
        }
        function noty_test_btns_three () {
            $.noty ( { body: "Noty with three buttons", buttons: [{ text: "Foo" }, { text: "Bar" }, { text: "Baz" }] } );
        }
        function noty_test_adv_one () {
            $.noty ( { title: "Test title", body: "This is just an example body" } );
        }
        function noty_test_adv_two () {
            $.noty ( { title: "Test title", body: "This is just an example body", img: "/images/sample.png" } );
        }
        function noty_test_adv_three () {
            $.noty ( { title: "Test title", body: "This is just an example body", img: "/images/sample.png", buttons: [{ text: "Foo" }, { text: "Bar" }] } );
        }
        function noty_test_adv_four () {
            $.noty ( { title: "Test title", body: "<sub>sub</sub>Something<sup>sup</sup>", img: "/images/sample.png", buttons: [{ text: "Foo" }, { text: "Bar" }] } );
        }
        function noty_test_colored ( color ) {
            $.noty ( { body: "Noty with custom color", color: color } );
        }
