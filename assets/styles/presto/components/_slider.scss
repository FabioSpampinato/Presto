
/* SLIDER */

//TODO: maybe use a map pointer with the number inside instead of the handler we are using right now

.slider {

    display: flex;
    align-items: center;
    height: $slider-height;
    margin-bottom: $layout-spacing;



    & > input {
        display: none;
    }

    & > .slider-bar {

        flex-grow: 1;
        order: 1;

        & > .slider-unhighlighted {

            @include color ( $slider-unhighlighted-color, $slider-unhighlighted-color-basic );
            position: relative;
            height: $slider-unhighlighted-height;
            margin: 0 $slider-handler-half-size;
            border-radius: $slider-unhighlighted-border-radius;

            & > .slider-highlighted {
                @include color ( $slider-highlighted-color, $slider-highlighted-color-basic );
                height: 100%;
                border-radius: inherit;
            }

            & > .slider-handler {

                @include color ( $slider-handler-color, $slider-handler-color-basic );
                @include z-depth ( $slider-handler-z-depth );
                @include center-absolutely ( false, $slider-handler-size );
                z-index: 0;
                display: flex;
                justify-content: center;
                align-items: center;
                width: $slider-handler-size;
                height: $slider-handler-size;
                margin-left: - $slider-handler-half-size;
                transition: transform $slider-transition-all-duration;
                transform: scale(1);
                border-radius: $slider-handler-border-radius;

                &:before {
                    position: absolute;
                    z-index: -1;
                    top: 0;
                    right: 0;
                    bottom: 0;
                    left: 0;
                    content: '';
                    transition-delay: 0.05s; //INFO: This avoids that it's showed also when clicking
                    transition-duration: $slider-transition-all-duration;
                    transition-property: opacity, transform;
                    transform: scale($switch-handler-before-scale-inactive);
                    opacity: 0;
                    border-radius: 50%;
                    background-color: inherit;
                }

                & > .slider-label {
                    font-size: $slider-handler-label-font-size;
                    transition-duration: $slider-transition-all-duration;
                    transition-property: opacity, transform;
                    transform: scale(0);
                    opacity: 0;
                }

            }

        }

    }

    & > .slider-min, & > .slider-max {
        width: $slider-min-max-width;
        text-align: center;
    }

    & > .slider-min {

        order: 0;

        &:after {
            content: attr(data-min)
        }

    }

    & > .slider-max {

        order: 3;

        &:after {
            content: attr(data-max)
        }

    }

    &:not(.slider-disabled) {

        &:not(.dragging) {

            & > .slider-min, & > .slider-max {

                cursor: pointer;

                &:hover:after {
                    @extend %icon;
                }

            }

            & > .slider-min {

                &:hover:after {
                    @extend .icon-content-remove:before;
                }

            }

            & > .slider-max {

                &:hover:after {
                    @extend .icon-content-add:before;
                }

            }

        }

        & > .slider-bar > .slider-unhighlighted {

            cursor: pointer;

            & > .slider-highlighted {
                cursor: pointer;
            }

            & > .slider-handler {

                cursor: move;

                &:active {
                    transform: scale($slider-handler-active-transform-scale) !important;
                }

                &:active:before {
                    transform: scale($switch-handler-before-scale-active);
                    opacity: $switch-handler-before-active-opacity;
                }

            }

        }

    }

    &.slider-disabled {
        opacity: $slider-disabled-opacity;
    }

    &:hover, &:active {

        .slider-label {
            transform: scale(1) !important;
            opacity: 1 !important;
        }

    }

}
