
/* DEFAULT */

button {
    border: none;
}

/* BUTTON */

//TODO: Add a minimum width, so that when it's not very wide and rounded it will be a circle, not an oval

.button {

    @include white ();
    @include medium ();
    display: inline-flex;
    margin-bottom: $layout-spacing;
    border-radius: $border-radius-normal;
    padding: $button-vertical-padding $button-horizontal-padding;
    font-weight: bold;
    box-shadow: $shadow-depth-1;
    position: relative;
    // outline: none !important; //FIXME: Is it needed?
    line-height: 1em;
    min-height: 1em;
    min-width: 1em;

    html.dragging & {
        cursor: move !important;
    }

    &.actionable {
        cursor: pointer;
    }

    & > .button-left, & > .button-right {
        background-color: rgba(0, 0, 0, 0.05);
        padding: $button-compact-vertical-padding $button-compact-horizontal-padding;
        min-width: 1em;
        cursor: pointer;
    }

    &:not(.inactive):not(.active):not(.dragging) {

        & > .button-left, & > .button-right {

            &.actionable:not(.inactive):not(.active):not(.dragging):hover {
                background-color: rgba(0, 0, 0, 0.06);
            }

            &:not(.inactive):active, &:not(.inactive).active {
                box-shadow: $shadow-inset-1;
            }

        }

    }

    & > .button-left {
        order: 1;
        margin: #{-$button-vertical-padding} #{$button-horizontal-padding} #{-$button-vertical-padding} #{-$button-horizontal-padding};
        border-top-left-radius: inherit;
        border-bottom-left-radius: inherit;
    }

    & > .button-center {
        order: 2;
    }

    & > .button-right {
        order: 3;
        margin: #{-$button-vertical-padding} #{-$button-horizontal-padding} #{-$button-vertical-padding} #{$button-horizontal-padding};
        border-top-right-radius: inherit;
        border-bottom-right-radius: inherit;
    }

    &.inactive {

        opacity: $button-inactive-opacity;
        cursor: default;

        & > .button-left, & > .button-right {
            opacity: $button-inactive-opacity;
        }

    }

    &.actionable:not(.inactive) {

        &:active, &.active {
            @include multi-shadow ( $shadow-depth-1, $shadow-inset-1 );
        }

    }

    &.compact {

        padding: $button-compact-vertical-padding $button-compact-horizontal-padding;

        & > .button-left {
            margin: #{-$button-compact-vertical-padding} #{$button-compact-horizontal-padding} #{-$button-compact-vertical-padding} #{-$button-compact-horizontal-padding};
        }

        & > .button-right {
            margin: #{-$button-compact-vertical-padding} #{-$button-compact-horizontal-padding} #{-$button-compact-vertical-padding} #{$button-compact-horizontal-padding};
        }

    }

    &.outlined {

        @include multi-shadow ( $shadow-depth-1, $button-outlined-shadow );

        &:not(.inactive) {

            &:active, &.active {
                @include multi-shadow ( $shadow-depth-1, $shadow-inset-1, $button-outlined-shadow );
            }

        }

        & > .button-left, & > .button-right {
            padding: calc(#{$button-compact-vertical-padding} - 1px) calc(#{$button-compact-horizontal-padding} - 1px);
        }

        & > .button-left {
            border-right: 1px solid rgba(0, 0, 0, 0.0625);
            margin: calc(-#{$button-vertical-padding} + 1px) calc(#{$button-horizontal-padding} - 1px) #{-$button-vertical-padding} #{-$button-horizontal-padding};
        }

        & > .button-right {
            border-left: 1px solid rgba(0, 0, 0, 0.0625);
            margin: calc(-#{$button-vertical-padding} + 1px) #{-$button-horizontal-padding} #{-$button-vertical-padding} calc(#{$button-horizontal-padding} - 1px);
        }

        &.compact {

            & > .button-left {
                margin: calc(-#{$button-compact-vertical-padding} + 1px) calc(#{$button-compact-horizontal-padding} - 1px) #{-$button-compact-vertical-padding} #{-$button-compact-horizontal-padding};
            }

            & > .button-right {
                margin: calc(-#{$button-compact-vertical-padding} + 1px) #{-$button-compact-horizontal-padding} #{-$button-compact-vertical-padding} calc(#{$button-compact-horizontal-padding} - 1px);
            }

        }

    }

    &.floating {

        //TODO: add sub floating actions

        margin-bottom: 0 !important;
        position: fixed;
        right: $layout-spacing * 3;
        bottom: $layout-spacing * 3;
        box-shadow: $shadow-depth-4;

        &.actionable:not(.inactive):not(.dragging):active, &.active {
            @include multi-shadow ( $shadow-depth-5, $shadow-inset-1 );
        }

    }

    .icon {

        @extend %icon;
        font-size: 1.3em;
        margin: -0.115em;

        &.left {
            padding-right: 0.75em;
        }

        &.right {
            padding-left: 0.75em;
        }

    }

}
