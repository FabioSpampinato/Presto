
/* VISIBILITY CLASSES */

// XSMALL

.hidden-xs {
    display: none !important;
}

@each $display in block, inline, inline-block {

    .visible-xs-#{$display} {
        display: $display !important;
    }

}

// SMALL

@include from-small {

    .hidden-sm {
        display: none !important;
    }

    @each $display in block, inline, inline-block {

        .visible-sm-#{$display} {
            display: $display !important;
        }

    }

}

// MEDIUM

@include from-medium {

    .hidden-md {
        display: none !important;
    }

    @each $display in block, inline, inline-block {

        .visible-md-#{$display} {
            display: $display !important;
        }

    }

}

// LARGE

@include from-large {

    .hidden-lg {
        display: none !important;
    }

    @each $display in block, inline, inline-block {

        .visible-lg-#{$display} {
            display: $display !important;
        }

    }

}

// XLARGE

@include from-xlarge {

    .hidden-xl {
        display: none !important;
    }

    @each $display in block, inline, inline-block {

        .visible-xl-#{$display} {
            display: $display !important;
        }

    }

}

/* WIDTH GRID */

// XSMALL

@for $nr from 1 through $grid-columns-nr {

    .xs-#{$nr} {
        width: ( 100% / $grid-columns-nr ) * $nr;
    }

    .multiple-wrp:not(.joined) > .multiple > *:not(.multiple-wrp).xs-#{$nr} {
        width: calc(#{( 100% / $grid-columns-nr ) * $nr} - #{$grid-gutter-width});
    }

}

// SMALL

@include from-small {

    @for $nr from 1 through $grid-columns-nr {

        .sm-#{$nr} {
            width: ( 100% / $grid-columns-nr ) * $nr;
        }

        .multiple-wrp:not(.joined) > .multiple > *:not(.multiple-wrp).sm-#{$nr} {
            width: calc(#{( 100% / $grid-columns-nr ) * $nr} - #{$grid-gutter-width});
        }

    }

}

// MEDIUM

@include from-medium {

    @for $nr from 1 through $grid-columns-nr {

        .md-#{$nr} {
            width: ( 100% / $grid-columns-nr ) * $nr;
        }

        .multiple-wrp:not(.joined) > .multiple > *:not(.multiple-wrp).md-#{$nr} {
            width: calc(#{( 100% / $grid-columns-nr ) * $nr} - #{$grid-gutter-width});
        }

    }

}

// LARGE

@include from-large {

    @for $nr from 1 through $grid-columns-nr {

        .lg-#{$nr} {
            width: ( 100% / $grid-columns-nr ) * $nr;
        }

        .multiple-wrp:not(.joined) > .multiple > *:not(.multiple-wrp).lg-#{$nr} {
            width: calc(#{( 100% / $grid-columns-nr ) * $nr} - #{$grid-gutter-width});
        }

    }

}

// XLARGE

@include from-xlarge {

    @for $nr from 1 through $grid-columns-nr {

        .xl-#{$nr} {
            width: ( 100% / $grid-columns-nr ) * $nr;
        }

        .multiple-wrp:not(.joined) > .multiple > *:not(.multiple-wrp).xl-#{$nr} {
            width: calc(#{( 100% / $grid-columns-nr ) * $nr} - #{$grid-gutter-width});
        }

    }

}
