
/* BLUR */

.blurred {
    filter: url('/assets/images/presto/blur.svg#blur');
    filter: blur(3px);
}

/* BORDER */

.no-border {
    border-width: 0 !important;
}

.rounded {
    border-radius: 10000px 10000px !important;
}

.smooth {
    border-radius: $border-radius-normal;
}

.sharp {
    border-radius: 0px;
}

/* DISPLAY */

.show {
    display: block !important;
}

.hidden {
    display: none !important;
}

/* VISIBILITY */

.visible {
    visibility: visible;
}

.invisible {
    visibility: hidden;
}

/* FLOAT */

.left {
    float: left;
}

.right {
    float: right;
}

/* TEXT ALIGNMENT */

.text-left {
    text-align: left;
}

.text-center {
    text-align: center;
}

.text-right {
    text-align: right;
}

/* TEXT TRANSFORMATION */

.text-lowercase {
    text-transform: lowercase;
}

.text-uppercase {
    text-transform: uppercase;
}

.text-capitalize {
    text-transform: capitalize;
}

/* PADDING */

.no-padding {
    padding: 0 !important;
}

.no-padding-top {
    padding-top: 0 !important;
}

.no-padding-right {
    padding-right: 0 !important;
}

.no-padding-bottom {
    padding-bottom: 0 !important;
}

.no-padding-left {
    padding-left: 0 !important;
}

/* MARGIN */

.no-margin {
    margin: 0 !important;
}

.no-margin-top {
    margin-top: 0 !important;
}

.no-margin-right {
    margin-right: 0 !important;
}

.no-margin-bottom {
    margin-bottom: 0 !important;
}

.no-margin-left {
    margin-left: 0 !important;
}

/* FLIP */

.flipX {
    transform: rotateY(180deg);
}

.flipY {
    transform: rotateX(180deg);
}

.flip {
    transform: rotateY(180deg) rotateX(180deg);
}

/* ROTATE */

.rotate-left {
    transform: rotate(-90deg);
}

.rotate-right {
    transform: rotate(90deg);
}

.rotating {
    animation: rotate 0.9s linear infinite;
}

/* GROW */

@for $nr from 1 through 10 {

    .grow-#{$nr} {
        flex-grow: #{$nr} !important;
    }

}

/* WIDTH PERCENTAGES */

@for $nr from 1 through 100 {

    .w#{$nr}-100 {
        width: #{$nr}% !important;
    }

}

/* VISIBILITY CLASSES */

// XSMALL

.hidden-xs, .xs-0 {
    display: none !important;
}

@each $display in block, inline, inline-block {

    .visible-xs-#{$display} {
        display: $display !important;
    }

}

// SMALL

@include min-screen ( $layout-small-min-breakpoint ) {

    .hidden-sm, .sm-0 {
        display: none !important;
    }

    @each $display in block, inline, inline-block {

        .visible-sm-#{$display} {
            display: $display !important;
        }

    }

}

// MEDIUM

@include min-screen ( $layout-small-min-breakpoint ) {

    .hidden-md, .md-0 {
        display: none !important;
    }

    @each $display in block, inline, inline-block {

        .visible-md-#{$display} {
            display: $display !important;
        }

    }

}

// LARGE

@include min-screen ( $layout-small-min-breakpoint ) {

    .hidden-lg, .lg-0 {
        display: none !important;
    }

    @each $display in block, inline, inline-block {

        .visible-lg-#{$display} {
            display: $display !important;
        }

    }

}

/* WIDTH GRID */

// XSMALL

@for $nr from 1 through $grid-columns {

    .xs-#{$nr} {
        display: inline-block !important;
        width: ( 100% / $grid-columns ) * $nr;
    }

    .offset-xs-#{$nr} {
        margin-left: ( 100% / $grid-columns ) * $nr;
    }

}

// SMALL

@include min-screen ( $layout-small-min-breakpoint ) {

    @for $nr from 1 through $grid-columns {

        .sm-#{$nr} {
            display: inline-block !important;
            width: ( 100% / $grid-columns ) * $nr;
        }

        .offset-sm-#{$nr} {
            margin-left: ( 100% / $grid-columns ) * $nr;
        }

    }

}

// MEDIUM

@include min-screen ( $layout-medium-min-breakpoint ) {

    @for $nr from 1 through $grid-columns {

        .md-#{$nr} {
            display: inline-block !important;
            width: ( 100% / $grid-columns ) * $nr;
        }

        .offset-md-#{$nr} {
            margin-left: ( 100% / $grid-columns ) * $nr;
        }

    }

}

// LARGE

@include min-screen ( $layout-large-min-breakpoint ) {

    @for $nr from 1 through $grid-columns {

        .lg-#{$nr} {
            display: inline-block !important;
            width: ( 100% / $grid-columns ) * $nr;
        }

        .offset-lg-#{$nr} {
            margin-left: ( 100% / $grid-columns ) * $nr;
        }

    }

}

/* KEYFRAMES */

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}
