
/* GENERAL */

@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin ellipsis ( $width: 100% ) {
    display: inline-block;
    max-width: $width;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
}

@mixin word-wrap ( $wrap: break-word ) {
    word-wrap: $wrap;
    @if $wrap == break-word {
        overflow-wrap: break-word;
        word-break: break-all;
    }
}

@mixin multi-shadow ( $shadows... ) {
    box-shadow: $shadows;
}

/* CENTERING */

@mixin vcenter-lh ( $height ) {
    height: $height;
    line-height: $height;
}

@mixin vcenter-ghost () {
    &:before {
        content: "";
        display: inline-block;
        vertical-align: middle;
        height: 100%;
        width: .1px;
    }
}

@mixin center-block ( $max-width: false ) {
    margin-left: auto;
    margin-right: auto;
    @if $max-width {
        max-width: $max-width;
    }
}

@mixin center-absolutely ( $width: false, $height: false ) {
    position: absolute;
    @if $width {
        left: 50%;
        margin-left: (-$width / 2);
    }
    @if $height {
        top: 50%;
        margin-top: (-$height / 2);
    }
}

@mixin center-transform ( $axis: false ) { /* x, y or false for both */
    position: absolute;
    @if $axis != x {
        top: 50%;
        margin-top: auto;
        margin-bottom: auto;
    }
    @if $axis != y {
        left: 50%;
        margin-left: auto;
        margin-right: auto;
    }
    $translate-val: null;
    @if not($axis) {
        $translate-val: translate(-50%, -50%);
    }
    @else if $axis != x {
        $translate-val: translateY(-50%);
    }
    @else if $axis != y {
        $translate-val: translateX(-50%);
    }
    transform: $translate-val;
}

/* MEDIA QUERIES */

@mixin screen ( $resMin, $resMax ) {
    @media screen and (min-width: $resMin) and (max-width: $resMax) {
        @content;
    }
}

@mixin max-screen ( $res ) {
    @media screen and (max-width: $res) {
        @content;
    }
}

@mixin min-screen ( $res ) {
    @media screen and (min-width: $res) {
        @content;
    }
}

@mixin screen-height ( $resMin, $resMax ) {
    @media screen and (min-height: $resMin) and (max-height: $resMax)   {
        @content;
    }
}

@mixin max-screen-height ( $res ) {
    @media screen and (max-height: $res) {
        @content;
    }
}

@mixin min-screen-height ( $res ) {
    @media screen and (min-height: $res) {
        @content;
    }
}

@mixin hdpi ( $ratio: 1.3 ) {
    @media only screen and (-webkit-min-device-pixel-ratio: $ratio),
    only screen and (min--moz-device-pixel-ratio: $ratio),
    only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),
    only screen and (min-resolution: #{round($ratio*96)}dpi),
    only screen and (min-resolution: #{$ratio}dppx) {
        @content;
    }
}

/* SHAPES */

@mixin triangle ( $size: 1em, $color: $color-gray, $direction: up ) {
    height: 0;
    width: 0;
    $width: nth($size, 1);
    $height: nth($size, length($size));
    $foreground-color: nth($color, 1);
    $background-color: if(length($color) == 2, nth($color, 2), transparent);
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height/2);
    @if $direction == up {
        border-left: $width dotted $background-color;
        border-right: $width dotted $background-color;
        border-bottom: $height solid $foreground-color;
    } @else if $direction == right {
        border-top: $width dotted $background-color;
        border-bottom: $width dotted $background-color;
        border-left: $height solid $foreground-color;
    } @else if $direction == down {
        border-left: $width dotted $background-color;
        border-right: $width dotted $background-color;
        border-top: $height solid $foreground-color;
    } @else if $direction == left {
        border-top: $width dotted $background-color;
        border-bottom: $width dotted $background-color;
        border-right: $height solid $foreground-color;
    }
}

@mixin square ( $size: 1em, $color: $color-gray ) {
    width: $size;
    height: $size;
    background-color: $color;
}

@mixin circle ( $size: 1em, $color: $color-gray ) {
    width: $size;
    height: $size;
    background-color: $color;
    border-radius: 50%;
}

/* TOOLTIPS */

@mixin tooltip-hover ( $direction: top, $content: attr(data-tooltip) ) {
    position: relative;
    &:before, &:after {
        display: none;
        z-index: 9;
    }
    &:hover {
        &:after {
            content: $content;
            display: block;
            position: absolute;
            height: 12px;
            padding: 6px;
            font-size: 12px;
            white-space: nowrap;
            color: #fff;
            text-shadow: 1px 1px #000;
            background-color: #222;
        }
        @if ($direction == 'top'){
            &:before {
                @include triangle(6px, #222, down);
                top: -6px; margin-top: 0;
                left: 47%;
            }
            &:after {
                top: -28px;
                left: 47%; margin-left: -20px;
            }
        }
        @else if ($direction == 'bottom'){
            &:before {
                @include triangle(6px, #222, up);
                top: auto; margin-top: 0;
                bottom: -6px;
                left: 47%;
            }
            &:after {
                bottom: -28px;
                left: 47%; margin-left: -20px;
            }
        }
    }
}
